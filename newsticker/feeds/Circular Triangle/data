;; -*- coding: utf-8 -*-
(("Circular Triangle" "Blog" "http://www.circulartriangle.com/blog" (20848 42519 249142) feed 0 nil nil ((title nil "Circular Triangle") (atom:link ((href . "http://www.circulartriangle.com/?feed=rss2") (rel . "self") (type . "application/rss+xml"))) (link nil "http://www.circulartriangle.com/blog") (description nil "Blog") (lastBuildDate nil "Mon, 24 May 2010 15:05:57 +0000") (language nil "en-US") (sy:updatePeriod nil "hourly") (sy:updateFrequency nil "1") (generator nil "http://wordpress.org/?v=3.5.1") (item nil (title nil "DNA and the Police") (link nil "http://www.circulartriangle.com/blog/?p=41") (comments nil "http://www.circulartriangle.com/blog/?p=41#comments") (pubDate nil "Mon, 01 Mar 2010 12:12:03 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Personal") (category nil "yro") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=41") (description nil "I&#8217;ve mentioned this a few times to various people, but I think the time has come to write up what&#8217;s going on. The background information On 21st February 2007 one of my parents&#8217; neighbours was found in a cupboard with a ~2 foot barbecue skewer stabbed through his chest. He&#8217;d been there for three days [...]") (content:encoded nil "<p>I&#8217;ve mentioned this a few times to various people, but I think the time has come to write up what&#8217;s going on.</p><h2>The background information</h2><p>On 21st February 2007 one of my parents&#8217; neighbours was <a href=\"http://news.bbc.co.uk/1/hi/england/west_midlands/6471051.stm\">found in a cupboard with a ~2 foot barbecue skewer stabbed through his chest</a>.  He&#8217;d been there for three days and was close to death.  He subsequently died in hospital and a murder investigation was started.</p><p>Over the course of a year they advertised for witnesses many times, offered rewards and interviewed all his neighbours many times.  I wasn&#8217;t interviewed as I&#8217;d been living in Bristol at the time.  Eventually, they phoned me up and asked I&#8217;d mind helping them out.  It was clear they were scraping the bottom of the barrel.</p><p>Two very amiable officers drove down to Bristol and we had a chat in my flat about Les.  Just the normal kind of thing, did he antagonise anyone a lot, what was the atmosphere like in his house, and who did I know that went in there.  I was very good friends with his grandson, so had been in there a fair bit, including the garage (which was not often cleaned).</p><h2>The sample collecting</h2><p>They asked to take my fingerprints and DNA samples so they could exclude me from anything they&#8217;d already collected.  They asked me if I&#8217;d like my samples destroyed after the investigation or kept on the national database, but the way they did so was so funny it stuck with me:</p><table><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">We can destroy your samples after the investigation, or we can keep them on the database so we can use them again in future.</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">What&#8217;s in it for me?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">That sounds like a &#8220;no&#8221;, doesn&#8217;t it?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Pretty much.  What if I want to commit a serious crime in the future?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hang on, you said you&#8217;re a computer science student, right?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Yes…</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">So why are you worrying? There&#8217;s no DNA evidence with computer crime!</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hmm, still think I&#8217;ll pass.</td style=\"border:none\"></tr></table><p>So, that nice bit of banter out of the way, they took my samples and left.  </p><p>I was not a suspect, I was not detained, I was not cautioned. I invited these policemen into my home and voluntarily gave them a DNA and fingerprint sample to help in a murder investigation because they assured me that is all it would ever be used for.</p><h2>The fallout</h2><p>Another year later an inquest ruled that he had <a href=\"http://www.expressandstar.com/2009/03/26/mystery-over-skewer-death/\">accidentally stabbed himself</a> with the skewer, and the investigation was closed.  At the end of 2009 I decided to get in contact with the West Midlands police to ask them if they&#8217;d been true to their word.  Here are some excepts of our 2 month correspondance:</p><p>Firstly, on 11th December 2009:</p><p><img src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/03/Screen-shot-2010-03-01-at-115902.321.png\" /></p><p>Then, 26th February 2010:</p><blockquote><p>
With reference to previous correspondence relating to your request for the removal and destruction of your DNA sample and fingerprints.  Unfortunately, the review of the circumstances by the Chief Officer is taking longer than expected.  However, I can assure that once complete, you will be notified immediately.
</p></blockquote><p>and finally, 1st March 2010:</p><blockquote><p>At this moment in time, all I am able to confirm is that your request is still with the Senior Investigating Officer as the sample you provided is still currently held. Unfortunately, I am unable to comment as to the promise you were given as I was not involved in the investigation. </p></blockquote><p>Lovely, isn&#8217;t it?</p><p>So, if you&#8217;ve ever helped the police and they&#8217;ve told you that the information you provided wouldn&#8217;t be retained, I&#8217;d recommend contacting them.  </p><p>Personally, I feel like I have been assaulted by two police officers who entered my home on false pretenses.  I believe the individual officers were acting in good faith and the force&#8217;s administration has let them, and me down.</p><h2>Update &#8211; 24th May 2010</h2><p>I have received a letter from Suzette Davenport, Assistant Chief Constable for West Midlands police.  The following is an extract:</p><blockquote><p>I can confirm that neither your DNA sample nor fingerprints were uploaded to the national databases and will be destroyed in accordance with strict procedures.  Your fingerprints will be shredded forthwith, and the 2 mouth swabs will be destroyed by way of incineration as per clinical waste procedures.</p></blockquote><p>It took almost six months after I began chasing this in earnest and it certainly shouldn&#8217;t have taken any chasing, but I&#8217;m glad it&#8217;s finally over.  My colleagues seem to think it&#8217;s to do with the change of government expediting this kind of back-peddling on civil liberties screw-ups but I&#8217;m not so sure the police would be prioritising based on fear of upcoming investigations.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=41") (slash:comments nil "13")) (item nil (title nil "Why WSGI?") (link nil "http://www.circulartriangle.com/blog/?p=26") (comments nil "http://www.circulartriangle.com/blog/?p=26#comments") (pubDate nil "Sun, 31 Jan 2010 05:22:09 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "bestpractise") (category nil "Plone") (category nil "python") (category nil "wsgi") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=26") (description nil "Earlier today I tried to write an explanation of why WSGI technologies are useful to developers, but each attempt sounded too much like snake-oil.  When you start to list what advantages you get from applying WSGI best-practises to a problem the results sound fantastic, and frankly unbelievable, but they&#8217;re all true. Caveat emptor: I haven&#8217;t [...]") (content:encoded nil "<p>Earlier today I tried to write an explanation of why WSGI technologies are useful to developers, but each attempt sounded too much like snake-oil.  When you start to list what advantages you get from applying WSGI best-practises to a problem the results sound fantastic, and frankly unbelievable, but they&#8217;re all true.</p><p><em>Caveat emptor: I haven&#8217;t properly tested the code in this post, it should all be treated as illustrative pseudo-code. Also, this is really long, you might want to get a cup of tea.</em></p><h2>Separation of front- and back-end</h2><p>There has been a lot of noise about deliverance in the Plone community recently, many consultancy companies have deployed  <a href=\"http://deliverance.openplans.org\">Deliverance</a>-based sites and even  <a href=\"http://www.plone.org\">plone.org</a> has a deliverance front-end.  The most important advantage of this pattern is that it stops front-end developers being blocked by back-end considerations.</p><p>When developing a Plone site a designer can very rarely jump straight into modifying templates on day one.  For one thing, the markup isn&#8217;t all together, such as with the portal_tabs navigation bar.  If there is a custom markup needed for these tabs first new viewlets and views need to be created to override the templates being used, and a test instance set up to give the markup guys something to work with.  Otherwise there&#8217;d be another significant amount of work to do in integrating it later in the project.</p><p>Either way, nobody can see these new tabs in place until there has been some backend developer time allocated to the problem.  When you consider the sheer number of places markup changes happen, this is clearly an untenable situation.</p><p>By using a transformational middleware like deliverance developers can start writing production markup on day one of a project. This can (and does!) happen <strong>before</strong> the backend developers have even finished talking about what technologies to use. This extra time and freedom truly is invaluable, as it means at no point will the look and feel of the site block development of the functionality or vice-versa.</p><p>Right from the start functionality and UI can go to humant testers who help develop the automated test suite.  As time progresses and the deliverance theme starts incorporating more rules to integrate with the back-end testing of the integration of the two can begin.  Without this separation components of the UI can&#8217;t really be tested in isolation.</p><h2>Reusable components</h2><p>There are two very popular Plone packages providing CAPTCHA support,  <a href=\"http://plone.org/products/collective.captcha\">collective.captcha</a> and <a href=\"http://plone.org/products/collective.recaptcha\">collective.recaptcha</a>.  To embed a CAPTCHA on your page you include:</p><pre><code>&lt;tal:captcha replace=\"here/@@captcha/image_tag\" /&gt;
&lt;input type=\"text\" name=\"captcha\" /&gt;</code></pre><p>and in the code that verifies your form submission you extract the value from the request and pass it back to the captcha view:</p><pre><code>captcha = context.REQUEST.form.get(\"captcha\", None)
if not context.restrictedTraverse(\"@@captcha\").verify(captcha):
    raise SpamBotException(\"CAPTCHA failed\")</code></pre><p>While there are convenience methods for integrating this with the various places forms are generated in Plone, this is really quite nasty.  While we have a nice, generic method for getting and verifying CAPTCHAs, it is very much tied to Plone and its various forms.</p><p>If we were to write this as a WSGI middleware we&#8217;d want to take the CAPTCHA generation and checking away from the application, so there are no import dependencies.  In essence, the CAPTCHA field is just a check if the user is human, the simplest one being a simple checkbox.  This isn&#8217;t going to filter out many spambots, but it does capture the essence of the problem, and is very simple to include in forms:</p><pre><code>&lt;input type=\"checkbox\" name=\"isHuman\" id=\"isHuman\" /&gt;</code></pre><p>This can be included in any forms readily, as any form library worth its salt can create a simple checkbox, then the backing code merely ensures that it&#8217;s a required field.  Simples.</p><p>However, we&#8217;ve got all these nice CAPTCHA libraries, so we create a middleware that grabs this from outgoing requests and replaces it with the full CAPTCHA that we&#8217;d otherwise have pulled directly into the form.  When a request comes back through with a CAPTCHA response in it we verify it&#8217;s correct and use that to set the value of <kbd>isHuman</kbd>.  That would look a little like this:</p><pre><code>class CAPTCHAMiddleware(object):

    def __init__(self, app):
        self.app = app

    def __call__(self, environ, start_response):
        req = Request(environ)
        if \"captcha\" in req.params:
           value = req.params[\"captcha\"]
           del req.params[\"captcha\"]
           req.params[\"isHuman\"] = self.verify(value)
        res = req.get_response(self.app)
        XML = lxml.etree.XML(res.body)
        captcha = XML.xpath(\"//input[@name='isHuman']\")
        if captcha:
            new = lxml.etree.XML(self.getCapcha())
            captcha[0].getparent().replace(captcha[0], new)
            res.body = lxml.etree.tostring(XML)
        return res(environ, start_response)</code></pre><p>This method can then be tested to destruction to ensure that there are no ways of circumventing the CAPTCHA.  All the time the site still works with its naïve CAPTCHA in place.  Any updates to the CAPTCHA product can be done, tested and deployed separately to the main site.</p><p>Let&#8217;s do a feature comparison:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><h2>Seamless upgrades of legacy sites</h2><p>So, there&#8217;s a distinct advantage shown above, but it&#8217;s not mind-blowing.  The second element still bothers me.  This would mean that although it&#8217;s easy to create new sites that use this CAPTCHA middleware it&#8217;s not easily backported.  While having this discussion with Alan Hoey of <a href=\"http://www.teamrubber.com\">Team Rubber</a> he suggested that he&#8217;d not use a new input method, but have a configuration file for which forms need CAPTCHAs added, and simply shield the backend from them.</p><p>At first, this sounded like a simple disagreement on implementation, until I realised that it could be elegantly implemented as a second middleware!</p><p>In this case, you&#8217;d not only have the CAPTCHA middleware I describe above, but a second middleware lower down in the stack which takes a configuration file and adds isHuman checkboxes to other forms.  If the isHuman value in the request is set to False for one of these forms it will simply raise an error.</p><p>There is, however, good reason to keep with the original architecture instead of relying on searching for the isHuman checkbox, and that is it allows applications to signal that they&#8217;re aware of how CAPTCHAs work and handle them elegantly.  Also, it allows careful positioning of CAPTCHAs in forms, the opportunity earlier to test they are shown everywhere that is needed and easier handling of dynamic forms, such as comments.</p><p>This new middleware, however, would make integration into older sites easy, and the feature matrix would start to look like:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th><th style=\"text-align: center;\">Two Middlewares</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><p>We have a winner! By breaking the problem down into small sections we now have a very extensible system that could be applied to new and old sites with a minimum of effort.  We&#8217;re not tied to Plone, or even Zope, and both the backend application and the CAPTCHA system can be readily tested in isolation.</p><p>It&#8217;s this kind of modularisation that provides the great wins for WSGI.  This originally came out of discussion in #repoze in which it was suggested that the environ could hold a special environment variable and call a special function to add a CAPTCHA to a form.  Such a system would fail all 4 of my tests above, and unfortunately many popular WSGI middlewares are written this way.  Taking the extra time and fitting your problem to normal HTTP requests and responses makes for much more re-usable middlewares.</p><h2>Testing</h2><p>I&#8217;ve mentioned this a few times, but it&#8217;s worth really emphasising.  Many WSGI middlewares will be barely a hundred lines long, many will be much shorter.  The size of the tests for these can be orders of magnitude greater than the code itself.  Many people claim that 100% test coverage just isn&#8217;t possible, but when writing this kind of function it&#8217;s not a very good idea but you can easily write a very comprehensive set of tests in a short period of time.</p><p>As the middleware can evolve on its own, separately from the application that spawned it, it can get new tests and releases as part of the development of other sites.  This means that old applications see benefits of new client work faster and more often than monolithic applications.</p><h2>Outside the process</h2><p>Matt Hamilton&#8217;s excellent <a href=\"http://www.slideshare.net/hammertoe/lipstick-on-a-pig\">Lipstick on a Pig</a> talk is a great example of this.  WSGI middlewares can be layered onto HTTP proxies, allowing them to work on any backend, Python or not.  <a href=\"https://weblion.psu.edu/trac/weblion/wiki/WebServicesApiPlone\">wsapi4plone</a> can work in the same way, it is completely agnostic of whether it is plumbed directly into Zope by a WSGI stack, or if it&#8217;s being proxied out to a different instance.</p><p>By following the WSGI best-practises of depending on HTTP requests and responses rather than making Python calls between layers this kind of flexibility is built directly into your system.  This means a legacy site can easily have WSGI middlewares layered on-top of it <strong>without even restarting the Zope process</strong>.</p><p>Cool, huh?</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=26") (slash:comments nil "10")) (item nil (title nil "Plone 4 faster than WordPress") (link nil "http://www.circulartriangle.com/blog/?p=15") (comments nil "http://www.circulartriangle.com/blog/?p=15#comments") (pubDate nil "Wed, 13 Jan 2010 06:17:51 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "performance") (category nil "Plone") (category nil "speed") (category nil "wordpress") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=15") (description nil "&#8220;Plone is too slow&#8221; – you hear that a lot. Everyone that has used Plone has been frustrated by it at some point. When you want to start up an instance it can seem instant or it can seem like it takes an eternity. The same is true for rendering pages. More recently seeming instant [...]") (content:encoded nil "<p>&#8220;Plone is too slow&#8221; – you hear that a lot.  Everyone that has used Plone has been frustrated by it at some point.  When you want to start up an instance it can seem instant or it can seem like it takes an eternity.  The same is true for rendering pages.  More recently seeming instant has become more and more common.</p><p>That&#8217;s because work has explicitly gone into making Plone 4 faster.  My friends at <a href=\"http://www.netsight.co.uk\">netsight</a> ran the <a href=\"http://plone.org/events/sprints/past-sprints/bristol-performance-sprint\">Bristol Performance Sprint</a> about year ago explicitly aiming to improve performance.  Plone 4 runs on Python 2.6, has support for BLOBs, and various other changes that all improve performance.</p><p>But has it worked?</p><p>I have been setting up this site in my spare time and pretty soon it was obvious that I needed <a href=\"http://varnish.projects.linpro.no/\">a HTTP cache</a>, but it wasn&#8217;t the same realisation as usual: I wasn&#8217;t waiting for Plone when I realised.  The slowest bit of the site was the blog.  Now, I don&#8217;t claim to be a wordpress expert, so it was an out of the box installation.  However, the Plone site is untuned too and that wasn&#8217;t as much of an issue.  At the request of <a href=\"http://limi.net\">Alex Limi</a> I did some quick benchmarks of the <strong><em>uncached</em></strong> site:</p><div id=\"attachment_16\" class=\"wp-caption aligncenter\" style=\"width: 356px\"><a href=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\"><img class=\"size-full wp-image-16\" title=\"Wordpress/Plone speed comparison\" src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\" alt=\"Wordpress 1.7 requests per second - Plone 2.7 requests per second\" width=\"346\" height=\"275\" /></a><p class=\"wp-caption-text\">More is better <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p></div><p>I used apachebench to access the Plone and WordPress sections of the site 150 times and measured how many requests each could serve.  I repeated this both with my theming layer in place and with the standard skin.  For both, the differences between the raw and themed versions were so small to be discounted, but the difference between the two platforms is pronounced.</p><p>So, the next time somebody complains Plone is too slow, remember Plone 4 is just around the corner.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=15") (slash:comments nil "6")) (item nil (title nil "Python Meme") (link nil "http://www.circulartriangle.com/blog/?p=10") (comments nil "http://www.circulartriangle.com/blog/?p=10#comments") (pubDate nil "Sat, 02 Jan 2010 22:48:50 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "Plone") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=10") (description nil "Tarek has come up with a quick questionnaire for Python developers, here are my answers: 1. What’s the coolest Python application, framework or library you have discovered in 2009 ? mr.developer has completely replaced SVN externals for me.  The main advantage is that you can turn development packages on and off on the command line. [...]") (content:encoded nil "<p><a href=\"http://tarekziade.wordpress.com\">Tarek</a> has come up with a quick <a href=\"http://tarekziade.wordpress.com/2009/12/28/new-years-python-meme/\">questionnaire for Python developers</a>, here are my answers:</p><p><strong>1. What’s the coolest Python application, framework or library you have discovered in 2009 ?</strong></p><p><strong>mr.developer</strong> has completely replaced SVN externals for me.  The main advantage is that you can turn development packages on and off on the command line.  That makes it easy to write a buildout that is identical to a production buildout, but that allows a developer to switch out the bit he&#8217;s working on with the current SVN version.  This means that each developer only has the code he&#8217;s working on checked out, not everything in the project.  Making a quick change to another package drops from being practically free to being a major time investment (check out package, activate it, rebuildout, test), which means that in a multi-developer environment you get communication rather than hacks.</p><p>It&#8217;s also being used as part of the Plone 4 release process, and I have to say it&#8217;s a lot nicer to deal with than the email-the-release-manager system.  Anyone can tell at a glance what releases are needed to make the KGS and anyone can easily manipulate that list in the same way they develop, as it&#8217;s just a part of a buildout config.</p><p><del><a href=\"http://david.wglick.org/\">David</a> rocks.</del> (Sorry, David wrote mr.igor, which is another one I considered)<br /><strong><a href=\"http://blog.crowproductions.de\">fschulze</a> rocks.</strong></p><p><strong>2. What new programming technique did you learn in 2009 ?</strong></p><p><strong>Test Driven Development</strong>. Ok, it&#8217;s a bit of a cop-out answer, as we all know how to do test driven development, but this year I got good enough at it to be able to use it whenever, including rushing to meet deadlines.  Once you have done enough testing in Python you forget why you found it difficult to begin with.  Not only does it mean that I&#8217;m more confident with the code I&#8217;m writing as the tests are written without any prior knowledge of how the code works, but it means its easier to collaborate.  While I was at <a href=\"http://www.teamrubber.com\">Team Rubber</a> I&#8217;d often had to design new parts of applications.  Once the tests, interfaces and docs are written they can be handed off to other people.  Using this pattern lots of interfaces became available for people to work against without the code necessarily being there yet.</p><p><strong>3. What’s the name of the open source project you contributed the most in 2009 ? What did you do ?<br /></strong></p><p><strong>Plone</strong>.  I had the honour of being on the Framework Team for Plone 4, which meant that I have felt closer to the release process for Plone 4 than I have for any other release.  I&#8217;ve represented the Plone Foundation for Google Summer of Code and their high-school programme for about 2 years now, have been a foundation member for a little less but being part of in-depth discussions about the future of the project on a regular basis has certainly brought me closer than anything else.  Can&#8217;t imagine ever feeling like a core dev with the likes of Hanno and Martin committing every waking minute, though <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p><p><strong>4. What was the Python blog or website you read the most in 2009 ?</strong></p><p>Does Planet Plone count?  I really enjoy the mix there, although I wish there were more contributors, there are some very slow days.  If not, that&#8217;d probably be either Chris McDonough&#8217;s <a href=\"http://www.plope.com\">plope</a>, he posts a great mix of humour, valuable insight and blasphemy against all that we hold dear.</p><p><strong>5. What are the three top things you want to learn in 2010 ?</strong></p><ul><li>How to survive in Germany.  I&#8217;m going to be moving here in 2010, and I&#8217;d like to be able to get creature comforts, such as real bread.  I&#8217;m already planning what to do on Guy Fawkes&#8217; Night.</li><li>repoze.bfg &#8211; I want my next light-weight app to be in BFG, it looks shiny.</li><li>Some nice new pieces of mathematics, I can feel myself getting rusty in an arts faculty.  Perhaps getting really familiar with group theory.</li></ul>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=10") (slash:comments nil "2")) (item nil (title nil "Back to the blogosphere") (link nil "http://www.circulartriangle.com/blog/?p=3") (comments nil "http://www.circulartriangle.com/blog/?p=3#comments") (pubDate nil "Fri, 18 Dec 2009 23:53:53 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "Plone") (category nil "wordpress") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=3") (description nil "Well, it&#8217;s only been just over 100 days since I left Team Rubber (and almost half as long again since I last wrote a blog post), so it&#8217;s high time I got a new website set up. So I have. In the interests of making this at least vaguely technical, I&#8217;ve decided to go with [...]") (content:encoded nil "<p>Well, it&#8217;s only been just over 100 days since I left Team Rubber (and almost half as long again since I last wrote a blog post), so it&#8217;s high time I got a new website set up.</p><p>So I have.</p><p>In the interests of making this at least vaguely technical, I&#8217;ve decided to go with a mixture of Plone 4 and WordPress, fronted by deliverance. Plone 4 being entirely distributed as eggs has made setting it up in a WSGI environment even easier, although there are still a few pain points to do with deliverance and the whole setup, especially as both WordPress and Plone make it difficult to change the markup used in their portlets, something for which deliverance isn&#8217;t well suited.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=3") (slash:comments nil "3")))) ("DNA and the Police" "<p>I’ve mentioned this a few times to various people, but I think the time has come to write up what’s going on.</p><h2>The background information</h2><p>On 21st February 2007 one of my parents’ neighbours was <a href=\"http://news.bbc.co.uk/1/hi/england/west_midlands/6471051.stm\">found in a cupboard with a ~2 foot barbecue skewer stabbed through his chest</a>.  He’d been there for three days and was close to death.  He subsequently died in hospital and a murder investigation was started.</p><p>Over the course of a year they advertised for witnesses many times, offered rewards and interviewed all his neighbours many times.  I wasn’t interviewed as I’d been living in Bristol at the time.  Eventually, they phoned me up and asked I’d mind helping them out.  It was clear they were scraping the bottom of the barrel.</p><p>Two very amiable officers drove down to Bristol and we had a chat in my flat about Les.  Just the normal kind of thing, did he antagonise anyone a lot, what was the atmosphere like in his house, and who did I know that went in there.  I was very good friends with his grandson, so had been in there a fair bit, including the garage (which was not often cleaned).</p><h2>The sample collecting</h2><p>They asked to take my fingerprints and DNA samples so they could exclude me from anything they’d already collected.  They asked me if I’d like my samples destroyed after the investigation or kept on the national database, but the way they did so was so funny it stuck with me:</p><table><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">We can destroy your samples after the investigation, or we can keep them on the database so we can use them again in future.</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">What’s in it for me?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">That sounds like a “no”, doesn’t it?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Pretty much.  What if I want to commit a serious crime in the future?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hang on, you said you’re a computer science student, right?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Yes…</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">So why are you worrying? There’s no DNA evidence with computer crime!</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hmm, still think I’ll pass.</td style=\"border:none\"></tr></table><p>So, that nice bit of banter out of the way, they took my samples and left.  </p><p>I was not a suspect, I was not detained, I was not cautioned. I invited these policemen into my home and voluntarily gave them a DNA and fingerprint sample to help in a murder investigation because they assured me that is all it would ever be used for.</p><h2>The fallout</h2><p>Another year later an inquest ruled that he had <a href=\"http://www.expressandstar.com/2009/03/26/mystery-over-skewer-death/\">accidentally stabbed himself</a> with the skewer, and the investigation was closed.  At the end of 2009 I decided to get in contact with the West Midlands police to ask them if they’d been true to their word.  Here are some excepts of our 2 month correspondance:</p><p>Firstly, on 11th December 2009:</p><p><img src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/03/Screen-shot-2010-03-01-at-115902.321.png\" /></p><p>Then, 26th February 2010:</p><blockquote><p>
With reference to previous correspondence relating to your request for the removal and destruction of your DNA sample and fingerprints.  Unfortunately, the review of the circumstances by the Chief Officer is taking longer than expected.  However, I can assure that once complete, you will be notified immediately.
</p></blockquote><p>and finally, 1st March 2010:</p><blockquote><p>At this moment in time, all I am able to confirm is that your request is still with the Senior Investigating Officer as the sample you provided is still currently held. Unfortunately, I am unable to comment as to the promise you were given as I was not involved in the investigation. </p></blockquote><p>Lovely, isn’t it?</p><p>So, if you’ve ever helped the police and they’ve told you that the information you provided wouldn’t be retained, I’d recommend contacting them.  </p><p>Personally, I feel like I have been assaulted by two police officers who entered my home on false pretenses.  I believe the individual officers were acting in good faith and the force’s administration has let them, and me down.</p><h2>Update – 24th May 2010</h2><p>I have received a letter from Suzette Davenport, Assistant Chief Constable for West Midlands police.  The following is an extract:</p><blockquote><p>I can confirm that neither your DNA sample nor fingerprints were uploaded to the national databases and will be destroyed in accordance with strict procedures.  Your fingerprints will be shredded forthwith, and the 2 mouth swabs will be destroyed by way of incineration as per clinical waste procedures.</p></blockquote><p>It took almost six months after I began chasing this in earnest and it certainly shouldn’t have taken any chasing, but I’m glad it’s finally over.  My colleagues seem to think it’s to do with the change of government expediting this kind of back-peddling on civil liberties screw-ups but I’m not so sure the police would be prioritising based on fear of upcoming investigations.</p>" "http://www.circulartriangle.com/blog/?p=41" (19339 44819) new 1 nil nil ((title nil "DNA and the Police") (link nil "http://www.circulartriangle.com/blog/?p=41") (comments nil "http://www.circulartriangle.com/blog/?p=41#comments") (pubDate nil "Mon, 01 Mar 2010 12:12:03 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Personal") (category nil "yro") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=41") (description nil "I&#8217;ve mentioned this a few times to various people, but I think the time has come to write up what&#8217;s going on. The background information On 21st February 2007 one of my parents&#8217; neighbours was found in a cupboard with a ~2 foot barbecue skewer stabbed through his chest. He&#8217;d been there for three days [...]") (content:encoded nil "<p>I&#8217;ve mentioned this a few times to various people, but I think the time has come to write up what&#8217;s going on.</p><h2>The background information</h2><p>On 21st February 2007 one of my parents&#8217; neighbours was <a href=\"http://news.bbc.co.uk/1/hi/england/west_midlands/6471051.stm\">found in a cupboard with a ~2 foot barbecue skewer stabbed through his chest</a>.  He&#8217;d been there for three days and was close to death.  He subsequently died in hospital and a murder investigation was started.</p><p>Over the course of a year they advertised for witnesses many times, offered rewards and interviewed all his neighbours many times.  I wasn&#8217;t interviewed as I&#8217;d been living in Bristol at the time.  Eventually, they phoned me up and asked I&#8217;d mind helping them out.  It was clear they were scraping the bottom of the barrel.</p><p>Two very amiable officers drove down to Bristol and we had a chat in my flat about Les.  Just the normal kind of thing, did he antagonise anyone a lot, what was the atmosphere like in his house, and who did I know that went in there.  I was very good friends with his grandson, so had been in there a fair bit, including the garage (which was not often cleaned).</p><h2>The sample collecting</h2><p>They asked to take my fingerprints and DNA samples so they could exclude me from anything they&#8217;d already collected.  They asked me if I&#8217;d like my samples destroyed after the investigation or kept on the national database, but the way they did so was so funny it stuck with me:</p><table><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">We can destroy your samples after the investigation, or we can keep them on the database so we can use them again in future.</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">What&#8217;s in it for me?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 1</th style=\"width: 100px; border:none\"><td style=\"border:none\">That sounds like a &#8220;no&#8221;, doesn&#8217;t it?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Pretty much.  What if I want to commit a serious crime in the future?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hang on, you said you&#8217;re a computer science student, right?</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Yes…</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Policeman 2</th style=\"width: 100px; border:none\"><td style=\"border:none\">So why are you worrying? There&#8217;s no DNA evidence with computer crime!</td style=\"border:none\"></tr><tr><th style=\"width: 100px; border:none\">Me</th style=\"width: 100px; border:none\"><td style=\"border:none\">Hmm, still think I&#8217;ll pass.</td style=\"border:none\"></tr></table><p>So, that nice bit of banter out of the way, they took my samples and left.  </p><p>I was not a suspect, I was not detained, I was not cautioned. I invited these policemen into my home and voluntarily gave them a DNA and fingerprint sample to help in a murder investigation because they assured me that is all it would ever be used for.</p><h2>The fallout</h2><p>Another year later an inquest ruled that he had <a href=\"http://www.expressandstar.com/2009/03/26/mystery-over-skewer-death/\">accidentally stabbed himself</a> with the skewer, and the investigation was closed.  At the end of 2009 I decided to get in contact with the West Midlands police to ask them if they&#8217;d been true to their word.  Here are some excepts of our 2 month correspondance:</p><p>Firstly, on 11th December 2009:</p><p><img src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/03/Screen-shot-2010-03-01-at-115902.321.png\" /></p><p>Then, 26th February 2010:</p><blockquote><p>
With reference to previous correspondence relating to your request for the removal and destruction of your DNA sample and fingerprints.  Unfortunately, the review of the circumstances by the Chief Officer is taking longer than expected.  However, I can assure that once complete, you will be notified immediately.
</p></blockquote><p>and finally, 1st March 2010:</p><blockquote><p>At this moment in time, all I am able to confirm is that your request is still with the Senior Investigating Officer as the sample you provided is still currently held. Unfortunately, I am unable to comment as to the promise you were given as I was not involved in the investigation. </p></blockquote><p>Lovely, isn&#8217;t it?</p><p>So, if you&#8217;ve ever helped the police and they&#8217;ve told you that the information you provided wouldn&#8217;t be retained, I&#8217;d recommend contacting them.  </p><p>Personally, I feel like I have been assaulted by two police officers who entered my home on false pretenses.  I believe the individual officers were acting in good faith and the force&#8217;s administration has let them, and me down.</p><h2>Update &#8211; 24th May 2010</h2><p>I have received a letter from Suzette Davenport, Assistant Chief Constable for West Midlands police.  The following is an extract:</p><blockquote><p>I can confirm that neither your DNA sample nor fingerprints were uploaded to the national databases and will be destroyed in accordance with strict procedures.  Your fingerprints will be shredded forthwith, and the 2 mouth swabs will be destroyed by way of incineration as per clinical waste procedures.</p></blockquote><p>It took almost six months after I began chasing this in earnest and it certainly shouldn&#8217;t have taken any chasing, but I&#8217;m glad it&#8217;s finally over.  My colleagues seem to think it&#8217;s to do with the change of government expediting this kind of back-peddling on civil liberties screw-ups but I&#8217;m not so sure the police would be prioritising based on fear of upcoming investigations.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=41") (slash:comments nil "13"))) ("Why WSGI?" "<p>Earlier today I tried to write an explanation of why WSGI technologies are useful to developers, but each attempt sounded too much like snake-oil.  When you start to list what advantages you get from applying WSGI best-practises to a problem the results sound fantastic, and frankly unbelievable, but they’re all true.</p><p><em>Caveat emptor: I haven’t properly tested the code in this post, it should all be treated as illustrative pseudo-code. Also, this is really long, you might want to get a cup of tea.</em></p><h2>Separation of front- and back-end</h2><p>There has been a lot of noise about deliverance in the Plone community recently, many consultancy companies have deployed  <a href=\"http://deliverance.openplans.org\">Deliverance</a>-based sites and even  <a href=\"http://www.plone.org\">plone.org</a> has a deliverance front-end.  The most important advantage of this pattern is that it stops front-end developers being blocked by back-end considerations.</p><p>When developing a Plone site a designer can very rarely jump straight into modifying templates on day one.  For one thing, the markup isn’t all together, such as with the portal_tabs navigation bar.  If there is a custom markup needed for these tabs first new viewlets and views need to be created to override the templates being used, and a test instance set up to give the markup guys something to work with.  Otherwise there’d be another significant amount of work to do in integrating it later in the project.</p><p>Either way, nobody can see these new tabs in place until there has been some backend developer time allocated to the problem.  When you consider the sheer number of places markup changes happen, this is clearly an untenable situation.</p><p>By using a transformational middleware like deliverance developers can start writing production markup on day one of a project. This can (and does!) happen <strong>before</strong> the backend developers have even finished talking about what technologies to use. This extra time and freedom truly is invaluable, as it means at no point will the look and feel of the site block development of the functionality or vice-versa.</p><p>Right from the start functionality and UI can go to humant testers who help develop the automated test suite.  As time progresses and the deliverance theme starts incorporating more rules to integrate with the back-end testing of the integration of the two can begin.  Without this separation components of the UI can’t really be tested in isolation.</p><h2>Reusable components</h2><p>There are two very popular Plone packages providing CAPTCHA support,  <a href=\"http://plone.org/products/collective.captcha\">collective.captcha</a> and <a href=\"http://plone.org/products/collective.recaptcha\">collective.recaptcha</a>.  To embed a CAPTCHA on your page you include:</p><pre><code>&lt;tal:captcha replace=\"here/@@captcha/image_tag\" /&gt;
&lt;input type=\"text\" name=\"captcha\" /&gt;</code></pre><p>and in the code that verifies your form submission you extract the value from the request and pass it back to the captcha view:</p><pre><code>captcha = context.REQUEST.form.get(\"captcha\", None)
if not context.restrictedTraverse(\"@@captcha\").verify(captcha):
raise SpamBotException(\"CAPTCHA failed\")</code></pre><p>While there are convenience methods for integrating this with the various places forms are generated in Plone, this is really quite nasty.  While we have a nice, generic method for getting and verifying CAPTCHAs, it is very much tied to Plone and its various forms.</p><p>If we were to write this as a WSGI middleware we’d want to take the CAPTCHA generation and checking away from the application, so there are no import dependencies.  In essence, the CAPTCHA field is just a check if the user is human, the simplest one being a simple checkbox.  This isn’t going to filter out many spambots, but it does capture the essence of the problem, and is very simple to include in forms:</p><pre><code>&lt;input type=\"checkbox\" name=\"isHuman\" id=\"isHuman\" /&gt;</code></pre><p>This can be included in any forms readily, as any form library worth its salt can create a simple checkbox, then the backing code merely ensures that it’s a required field.  Simples.</p><p>However, we’ve got all these nice CAPTCHA libraries, so we create a middleware that grabs this from outgoing requests and replaces it with the full CAPTCHA that we’d otherwise have pulled directly into the form.  When a request comes back through with a CAPTCHA response in it we verify it’s correct and use that to set the value of <kbd>isHuman</kbd>.  That would look a little like this:</p><pre><code>class CAPTCHAMiddleware(object):
def __init__(self, app):
self.app = app
def __call__(self, environ, start_response):
req = Request(environ)
if \"captcha\" in req.params:
value = req.params[\"captcha\"]
del req.params[\"captcha\"]
req.params[\"isHuman\"] = self.verify(value)
res = req.get_response(self.app)
XML = lxml.etree.XML(res.body)
captcha = XML.xpath(\"//input[@name='isHuman']\")
if captcha:
new = lxml.etree.XML(self.getCapcha())
captcha[0].getparent().replace(captcha[0], new)
res.body = lxml.etree.tostring(XML)
return res(environ, start_response)</code></pre><p>This method can then be tested to destruction to ensure that there are no ways of circumventing the CAPTCHA.  All the time the site still works with its naïve CAPTCHA in place.  Any updates to the CAPTCHA product can be done, tested and deployed separately to the main site.</p><p>Let’s do a feature comparison:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><h2>Seamless upgrades of legacy sites</h2><p>So, there’s a distinct advantage shown above, but it’s not mind-blowing.  The second element still bothers me.  This would mean that although it’s easy to create new sites that use this CAPTCHA middleware it’s not easily backported.  While having this discussion with Alan Hoey of <a href=\"http://www.teamrubber.com\">Team Rubber</a> he suggested that he’d not use a new input method, but have a configuration file for which forms need CAPTCHAs added, and simply shield the backend from them.</p><p>At first, this sounded like a simple disagreement on implementation, until I realised that it could be elegantly implemented as a second middleware!</p><p>In this case, you’d not only have the CAPTCHA middleware I describe above, but a second middleware lower down in the stack which takes a configuration file and adds isHuman checkboxes to other forms.  If the isHuman value in the request is set to False for one of these forms it will simply raise an error.</p><p>There is, however, good reason to keep with the original architecture instead of relying on searching for the isHuman checkbox, and that is it allows applications to signal that they’re aware of how CAPTCHAs work and handle them elegantly.  Also, it allows careful positioning of CAPTCHAs in forms, the opportunity earlier to test they are shown everywhere that is needed and easier handling of dynamic forms, such as comments.</p><p>This new middleware, however, would make integration into older sites easy, and the feature matrix would start to look like:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th><th style=\"text-align: center;\">Two Middlewares</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><p>We have a winner! By breaking the problem down into small sections we now have a very extensible system that could be applied to new and old sites with a minimum of effort.  We’re not tied to Plone, or even Zope, and both the backend application and the CAPTCHA system can be readily tested in isolation.</p><p>It’s this kind of modularisation that provides the great wins for WSGI.  This originally came out of discussion in #repoze in which it was suggested that the environ could hold a special environment variable and call a special function to add a CAPTCHA to a form.  Such a system would fail all 4 of my tests above, and unfortunately many popular WSGI middlewares are written this way.  Taking the extra time and fitting your problem to normal HTTP requests and responses makes for much more re-usable middlewares.</p><h2>Testing</h2><p>I’ve mentioned this a few times, but it’s worth really emphasising.  Many WSGI middlewares will be barely a hundred lines long, many will be much shorter.  The size of the tests for these can be orders of magnitude greater than the code itself.  Many people claim that 100% test coverage just isn’t possible, but when writing this kind of function it’s not a very good idea but you can easily write a very comprehensive set of tests in a short period of time.</p><p>As the middleware can evolve on its own, separately from the application that spawned it, it can get new tests and releases as part of the development of other sites.  This means that old applications see benefits of new client work faster and more often than monolithic applications.</p><h2>Outside the process</h2><p>Matt Hamilton’s excellent <a href=\"http://www.slideshare.net/hammertoe/lipstick-on-a-pig\">Lipstick on a Pig</a> talk is a great example of this.  WSGI middlewares can be layered onto HTTP proxies, allowing them to work on any backend, Python or not.  <a href=\"https://weblion.psu.edu/trac/weblion/wiki/WebServicesApiPlone\">wsapi4plone</a> can work in the same way, it is completely agnostic of whether it is plumbed directly into Zope by a WSGI stack, or if it’s being proxied out to a different instance.</p><p>By following the WSGI best-practises of depending on HTTP requests and responses rather than making Python calls between layers this kind of flexibility is built directly into your system.  This means a legacy site can easily have WSGI middlewares layered on-top of it <strong>without even restarting the Zope process</strong>.</p><p>Cool, huh?</p>" "http://www.circulartriangle.com/blog/?p=26" (19301 4993) new 2 nil nil ((title nil "Why WSGI?") (link nil "http://www.circulartriangle.com/blog/?p=26") (comments nil "http://www.circulartriangle.com/blog/?p=26#comments") (pubDate nil "Sun, 31 Jan 2010 05:22:09 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "bestpractise") (category nil "Plone") (category nil "python") (category nil "wsgi") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=26") (description nil "Earlier today I tried to write an explanation of why WSGI technologies are useful to developers, but each attempt sounded too much like snake-oil.  When you start to list what advantages you get from applying WSGI best-practises to a problem the results sound fantastic, and frankly unbelievable, but they&#8217;re all true. Caveat emptor: I haven&#8217;t [...]") (content:encoded nil "<p>Earlier today I tried to write an explanation of why WSGI technologies are useful to developers, but each attempt sounded too much like snake-oil.  When you start to list what advantages you get from applying WSGI best-practises to a problem the results sound fantastic, and frankly unbelievable, but they&#8217;re all true.</p><p><em>Caveat emptor: I haven&#8217;t properly tested the code in this post, it should all be treated as illustrative pseudo-code. Also, this is really long, you might want to get a cup of tea.</em></p><h2>Separation of front- and back-end</h2><p>There has been a lot of noise about deliverance in the Plone community recently, many consultancy companies have deployed  <a href=\"http://deliverance.openplans.org\">Deliverance</a>-based sites and even  <a href=\"http://www.plone.org\">plone.org</a> has a deliverance front-end.  The most important advantage of this pattern is that it stops front-end developers being blocked by back-end considerations.</p><p>When developing a Plone site a designer can very rarely jump straight into modifying templates on day one.  For one thing, the markup isn&#8217;t all together, such as with the portal_tabs navigation bar.  If there is a custom markup needed for these tabs first new viewlets and views need to be created to override the templates being used, and a test instance set up to give the markup guys something to work with.  Otherwise there&#8217;d be another significant amount of work to do in integrating it later in the project.</p><p>Either way, nobody can see these new tabs in place until there has been some backend developer time allocated to the problem.  When you consider the sheer number of places markup changes happen, this is clearly an untenable situation.</p><p>By using a transformational middleware like deliverance developers can start writing production markup on day one of a project. This can (and does!) happen <strong>before</strong> the backend developers have even finished talking about what technologies to use. This extra time and freedom truly is invaluable, as it means at no point will the look and feel of the site block development of the functionality or vice-versa.</p><p>Right from the start functionality and UI can go to humant testers who help develop the automated test suite.  As time progresses and the deliverance theme starts incorporating more rules to integrate with the back-end testing of the integration of the two can begin.  Without this separation components of the UI can&#8217;t really be tested in isolation.</p><h2>Reusable components</h2><p>There are two very popular Plone packages providing CAPTCHA support,  <a href=\"http://plone.org/products/collective.captcha\">collective.captcha</a> and <a href=\"http://plone.org/products/collective.recaptcha\">collective.recaptcha</a>.  To embed a CAPTCHA on your page you include:</p><pre><code>&lt;tal:captcha replace=\"here/@@captcha/image_tag\" /&gt;
&lt;input type=\"text\" name=\"captcha\" /&gt;</code></pre><p>and in the code that verifies your form submission you extract the value from the request and pass it back to the captcha view:</p><pre><code>captcha = context.REQUEST.form.get(\"captcha\", None)
if not context.restrictedTraverse(\"@@captcha\").verify(captcha):
    raise SpamBotException(\"CAPTCHA failed\")</code></pre><p>While there are convenience methods for integrating this with the various places forms are generated in Plone, this is really quite nasty.  While we have a nice, generic method for getting and verifying CAPTCHAs, it is very much tied to Plone and its various forms.</p><p>If we were to write this as a WSGI middleware we&#8217;d want to take the CAPTCHA generation and checking away from the application, so there are no import dependencies.  In essence, the CAPTCHA field is just a check if the user is human, the simplest one being a simple checkbox.  This isn&#8217;t going to filter out many spambots, but it does capture the essence of the problem, and is very simple to include in forms:</p><pre><code>&lt;input type=\"checkbox\" name=\"isHuman\" id=\"isHuman\" /&gt;</code></pre><p>This can be included in any forms readily, as any form library worth its salt can create a simple checkbox, then the backing code merely ensures that it&#8217;s a required field.  Simples.</p><p>However, we&#8217;ve got all these nice CAPTCHA libraries, so we create a middleware that grabs this from outgoing requests and replaces it with the full CAPTCHA that we&#8217;d otherwise have pulled directly into the form.  When a request comes back through with a CAPTCHA response in it we verify it&#8217;s correct and use that to set the value of <kbd>isHuman</kbd>.  That would look a little like this:</p><pre><code>class CAPTCHAMiddleware(object):

    def __init__(self, app):
        self.app = app

    def __call__(self, environ, start_response):
        req = Request(environ)
        if \"captcha\" in req.params:
           value = req.params[\"captcha\"]
           del req.params[\"captcha\"]
           req.params[\"isHuman\"] = self.verify(value)
        res = req.get_response(self.app)
        XML = lxml.etree.XML(res.body)
        captcha = XML.xpath(\"//input[@name='isHuman']\")
        if captcha:
            new = lxml.etree.XML(self.getCapcha())
            captcha[0].getparent().replace(captcha[0], new)
            res.body = lxml.etree.tostring(XML)
        return res(environ, start_response)</code></pre><p>This method can then be tested to destruction to ensure that there are no ways of circumventing the CAPTCHA.  All the time the site still works with its naïve CAPTCHA in place.  Any updates to the CAPTCHA product can be done, tested and deployed separately to the main site.</p><p>Let&#8217;s do a feature comparison:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><h2>Seamless upgrades of legacy sites</h2><p>So, there&#8217;s a distinct advantage shown above, but it&#8217;s not mind-blowing.  The second element still bothers me.  This would mean that although it&#8217;s easy to create new sites that use this CAPTCHA middleware it&#8217;s not easily backported.  While having this discussion with Alan Hoey of <a href=\"http://www.teamrubber.com\">Team Rubber</a> he suggested that he&#8217;d not use a new input method, but have a configuration file for which forms need CAPTCHAs added, and simply shield the backend from them.</p><p>At first, this sounded like a simple disagreement on implementation, until I realised that it could be elegantly implemented as a second middleware!</p><p>In this case, you&#8217;d not only have the CAPTCHA middleware I describe above, but a second middleware lower down in the stack which takes a configuration file and adds isHuman checkboxes to other forms.  If the isHuman value in the request is set to False for one of these forms it will simply raise an error.</p><p>There is, however, good reason to keep with the original architecture instead of relying on searching for the isHuman checkbox, and that is it allows applications to signal that they&#8217;re aware of how CAPTCHAs work and handle them elegantly.  Also, it allows careful positioning of CAPTCHAs in forms, the opportunity earlier to test they are shown everywhere that is needed and easier handling of dynamic forms, such as comments.</p><p>This new middleware, however, would make integration into older sites easy, and the feature matrix would start to look like:</p><table style=\"border: 1px solid black; clear: both;\"><tbody><tr><th></th><th style=\"text-align: center;\">@@captcha</th><th style=\"text-align: center;\">CAPTCHAMiddleware</th><th style=\"text-align: center;\">Two Middlewares</th></tr><tr><td>Can switch to other implementations</td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works without customising a form</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>Works with any form library OOTB</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr><tr><td>No vendor lock-in</td><td style=\"text-align: center;\"><span style=\"color: #ff0000;\">✘</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td><td style=\"text-align: center;\"><span style=\"color: #00ff00;\">✔</span></td></tr></tbody></table><p>We have a winner! By breaking the problem down into small sections we now have a very extensible system that could be applied to new and old sites with a minimum of effort.  We&#8217;re not tied to Plone, or even Zope, and both the backend application and the CAPTCHA system can be readily tested in isolation.</p><p>It&#8217;s this kind of modularisation that provides the great wins for WSGI.  This originally came out of discussion in #repoze in which it was suggested that the environ could hold a special environment variable and call a special function to add a CAPTCHA to a form.  Such a system would fail all 4 of my tests above, and unfortunately many popular WSGI middlewares are written this way.  Taking the extra time and fitting your problem to normal HTTP requests and responses makes for much more re-usable middlewares.</p><h2>Testing</h2><p>I&#8217;ve mentioned this a few times, but it&#8217;s worth really emphasising.  Many WSGI middlewares will be barely a hundred lines long, many will be much shorter.  The size of the tests for these can be orders of magnitude greater than the code itself.  Many people claim that 100% test coverage just isn&#8217;t possible, but when writing this kind of function it&#8217;s not a very good idea but you can easily write a very comprehensive set of tests in a short period of time.</p><p>As the middleware can evolve on its own, separately from the application that spawned it, it can get new tests and releases as part of the development of other sites.  This means that old applications see benefits of new client work faster and more often than monolithic applications.</p><h2>Outside the process</h2><p>Matt Hamilton&#8217;s excellent <a href=\"http://www.slideshare.net/hammertoe/lipstick-on-a-pig\">Lipstick on a Pig</a> talk is a great example of this.  WSGI middlewares can be layered onto HTTP proxies, allowing them to work on any backend, Python or not.  <a href=\"https://weblion.psu.edu/trac/weblion/wiki/WebServicesApiPlone\">wsapi4plone</a> can work in the same way, it is completely agnostic of whether it is plumbed directly into Zope by a WSGI stack, or if it&#8217;s being proxied out to a different instance.</p><p>By following the WSGI best-practises of depending on HTTP requests and responses rather than making Python calls between layers this kind of flexibility is built directly into your system.  This means a legacy site can easily have WSGI middlewares layered on-top of it <strong>without even restarting the Zope process</strong>.</p><p>Cool, huh?</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=26") (slash:comments nil "10"))) ("Plone 4 faster than WordPress" "<p>“Plone is too slow” – you hear that a lot.  Everyone that has used Plone has been frustrated by it at some point.  When you want to start up an instance it can seem instant or it can seem like it takes an eternity.  The same is true for rendering pages.  More recently seeming instant has become more and more common.</p><p>That’s because work has explicitly gone into making Plone 4 faster.  My friends at <a href=\"http://www.netsight.co.uk\">netsight</a> ran the <a href=\"http://plone.org/events/sprints/past-sprints/bristol-performance-sprint\">Bristol Performance Sprint</a> about year ago explicitly aiming to improve performance.  Plone 4 runs on Python 2.6, has support for BLOBs, and various other changes that all improve performance.</p><p>But has it worked?</p><p>I have been setting up this site in my spare time and pretty soon it was obvious that I needed <a href=\"http://varnish.projects.linpro.no/\">a HTTP cache</a>, but it wasn’t the same realisation as usual: I wasn’t waiting for Plone when I realised.  The slowest bit of the site was the blog.  Now, I don’t claim to be a wordpress expert, so it was an out of the box installation.  However, the Plone site is untuned too and that wasn’t as much of an issue.  At the request of <a href=\"http://limi.net\">Alex Limi</a> I did some quick benchmarks of the <strong><em>uncached</em></strong> site:</p><div id=\"attachment_16\" class=\"wp-caption aligncenter\" style=\"width: 356px\"><a href=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\"><img class=\"size-full wp-image-16\" title=\"Wordpress/Plone speed comparison\" src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\" alt=\"Wordpress 1.7 requests per second - Plone 2.7 requests per second\" width=\"346\" height=\"275\" /></a><p class=\"wp-caption-text\">More is better <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p></div><p>I used apachebench to access the Plone and WordPress sections of the site 150 times and measured how many requests each could serve.  I repeated this both with my theming layer in place and with the standard skin.  For both, the differences between the raw and themed versions were so small to be discounted, but the difference between the two platforms is pronounced.</p><p>So, the next time somebody complains Plone is too slow, remember Plone 4 is just around the corner.</p>" "http://www.circulartriangle.com/blog/?p=15" (19277 25999) new 3 nil nil ((title nil "Plone 4 faster than WordPress") (link nil "http://www.circulartriangle.com/blog/?p=15") (comments nil "http://www.circulartriangle.com/blog/?p=15#comments") (pubDate nil "Wed, 13 Jan 2010 06:17:51 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "performance") (category nil "Plone") (category nil "speed") (category nil "wordpress") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=15") (description nil "&#8220;Plone is too slow&#8221; – you hear that a lot. Everyone that has used Plone has been frustrated by it at some point. When you want to start up an instance it can seem instant or it can seem like it takes an eternity. The same is true for rendering pages. More recently seeming instant [...]") (content:encoded nil "<p>&#8220;Plone is too slow&#8221; – you hear that a lot.  Everyone that has used Plone has been frustrated by it at some point.  When you want to start up an instance it can seem instant or it can seem like it takes an eternity.  The same is true for rendering pages.  More recently seeming instant has become more and more common.</p><p>That&#8217;s because work has explicitly gone into making Plone 4 faster.  My friends at <a href=\"http://www.netsight.co.uk\">netsight</a> ran the <a href=\"http://plone.org/events/sprints/past-sprints/bristol-performance-sprint\">Bristol Performance Sprint</a> about year ago explicitly aiming to improve performance.  Plone 4 runs on Python 2.6, has support for BLOBs, and various other changes that all improve performance.</p><p>But has it worked?</p><p>I have been setting up this site in my spare time and pretty soon it was obvious that I needed <a href=\"http://varnish.projects.linpro.no/\">a HTTP cache</a>, but it wasn&#8217;t the same realisation as usual: I wasn&#8217;t waiting for Plone when I realised.  The slowest bit of the site was the blog.  Now, I don&#8217;t claim to be a wordpress expert, so it was an out of the box installation.  However, the Plone site is untuned too and that wasn&#8217;t as much of an issue.  At the request of <a href=\"http://limi.net\">Alex Limi</a> I did some quick benchmarks of the <strong><em>uncached</em></strong> site:</p><div id=\"attachment_16\" class=\"wp-caption aligncenter\" style=\"width: 356px\"><a href=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\"><img class=\"size-full wp-image-16\" title=\"Wordpress/Plone speed comparison\" src=\"http://www.circulartriangle.com/blog/wp-content/uploads/2010/01/Screen-shot-2010-01-13-at-060028.596.png\" alt=\"Wordpress 1.7 requests per second - Plone 2.7 requests per second\" width=\"346\" height=\"275\" /></a><p class=\"wp-caption-text\">More is better <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p></div><p>I used apachebench to access the Plone and WordPress sections of the site 150 times and measured how many requests each could serve.  I repeated this both with my theming layer in place and with the standard skin.  For both, the differences between the raw and themed versions were so small to be discounted, but the difference between the two platforms is pronounced.</p><p>So, the next time somebody complains Plone is too slow, remember Plone 4 is just around the corner.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=15") (slash:comments nil "6"))) ("Python Meme" "<p><a href=\"http://tarekziade.wordpress.com\">Tarek</a> has come up with a quick <a href=\"http://tarekziade.wordpress.com/2009/12/28/new-years-python-meme/\">questionnaire for Python developers</a>, here are my answers:</p><p><strong>1. What’s the coolest Python application, framework or library you have discovered in 2009 ?</strong></p><p><strong>mr.developer</strong> has completely replaced SVN externals for me.  The main advantage is that you can turn development packages on and off on the command line.  That makes it easy to write a buildout that is identical to a production buildout, but that allows a developer to switch out the bit he’s working on with the current SVN version.  This means that each developer only has the code he’s working on checked out, not everything in the project.  Making a quick change to another package drops from being practically free to being a major time investment (check out package, activate it, rebuildout, test), which means that in a multi-developer environment you get communication rather than hacks.</p><p>It’s also being used as part of the Plone 4 release process, and I have to say it’s a lot nicer to deal with than the email-the-release-manager system.  Anyone can tell at a glance what releases are needed to make the KGS and anyone can easily manipulate that list in the same way they develop, as it’s just a part of a buildout config.</p><p><del><a href=\"http://david.wglick.org/\">David</a> rocks.</del> (Sorry, David wrote mr.igor, which is another one I considered)<br /><strong><a href=\"http://blog.crowproductions.de\">fschulze</a> rocks.</strong></p><p><strong>2. What new programming technique did you learn in 2009 ?</strong></p><p><strong>Test Driven Development</strong>. Ok, it’s a bit of a cop-out answer, as we all know how to do test driven development, but this year I got good enough at it to be able to use it whenever, including rushing to meet deadlines.  Once you have done enough testing in Python you forget why you found it difficult to begin with.  Not only does it mean that I’m more confident with the code I’m writing as the tests are written without any prior knowledge of how the code works, but it means its easier to collaborate.  While I was at <a href=\"http://www.teamrubber.com\">Team Rubber</a> I’d often had to design new parts of applications.  Once the tests, interfaces and docs are written they can be handed off to other people.  Using this pattern lots of interfaces became available for people to work against without the code necessarily being there yet.</p><p><strong>3. What’s the name of the open source project you contributed the most in 2009 ? What did you do ?<br /></strong></p><p><strong>Plone</strong>.  I had the honour of being on the Framework Team for Plone 4, which meant that I have felt closer to the release process for Plone 4 than I have for any other release.  I’ve represented the Plone Foundation for Google Summer of Code and their high-school programme for about 2 years now, have been a foundation member for a little less but being part of in-depth discussions about the future of the project on a regular basis has certainly brought me closer than anything else.  Can’t imagine ever feeling like a core dev with the likes of Hanno and Martin committing every waking minute, though <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p><p><strong>4. What was the Python blog or website you read the most in 2009 ?</strong></p><p>Does Planet Plone count?  I really enjoy the mix there, although I wish there were more contributors, there are some very slow days.  If not, that’d probably be either Chris McDonough’s <a href=\"http://www.plope.com\">plope</a>, he posts a great mix of humour, valuable insight and blasphemy against all that we hold dear.</p><p><strong>5. What are the three top things you want to learn in 2010 ?</strong></p><ul><li>How to survive in Germany.  I’m going to be moving here in 2010, and I’d like to be able to get creature comforts, such as real bread.  I’m already planning what to do on Guy Fawkes’ Night.</li><li>repoze.bfg – I want my next light-weight app to be in BFG, it looks shiny.</li><li>Some nice new pieces of mathematics, I can feel myself getting rusty in an arts faculty.  Perhaps getting really familiar with group theory.</li></ul>" "http://www.circulartriangle.com/blog/?p=10" (19263 52562) new 4 nil nil ((title nil "Python Meme") (link nil "http://www.circulartriangle.com/blog/?p=10") (comments nil "http://www.circulartriangle.com/blog/?p=10#comments") (pubDate nil "Sat, 02 Jan 2010 22:48:50 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "Plone") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=10") (description nil "Tarek has come up with a quick questionnaire for Python developers, here are my answers: 1. What’s the coolest Python application, framework or library you have discovered in 2009 ? mr.developer has completely replaced SVN externals for me.  The main advantage is that you can turn development packages on and off on the command line. [...]") (content:encoded nil "<p><a href=\"http://tarekziade.wordpress.com\">Tarek</a> has come up with a quick <a href=\"http://tarekziade.wordpress.com/2009/12/28/new-years-python-meme/\">questionnaire for Python developers</a>, here are my answers:</p><p><strong>1. What’s the coolest Python application, framework or library you have discovered in 2009 ?</strong></p><p><strong>mr.developer</strong> has completely replaced SVN externals for me.  The main advantage is that you can turn development packages on and off on the command line.  That makes it easy to write a buildout that is identical to a production buildout, but that allows a developer to switch out the bit he&#8217;s working on with the current SVN version.  This means that each developer only has the code he&#8217;s working on checked out, not everything in the project.  Making a quick change to another package drops from being practically free to being a major time investment (check out package, activate it, rebuildout, test), which means that in a multi-developer environment you get communication rather than hacks.</p><p>It&#8217;s also being used as part of the Plone 4 release process, and I have to say it&#8217;s a lot nicer to deal with than the email-the-release-manager system.  Anyone can tell at a glance what releases are needed to make the KGS and anyone can easily manipulate that list in the same way they develop, as it&#8217;s just a part of a buildout config.</p><p><del><a href=\"http://david.wglick.org/\">David</a> rocks.</del> (Sorry, David wrote mr.igor, which is another one I considered)<br /><strong><a href=\"http://blog.crowproductions.de\">fschulze</a> rocks.</strong></p><p><strong>2. What new programming technique did you learn in 2009 ?</strong></p><p><strong>Test Driven Development</strong>. Ok, it&#8217;s a bit of a cop-out answer, as we all know how to do test driven development, but this year I got good enough at it to be able to use it whenever, including rushing to meet deadlines.  Once you have done enough testing in Python you forget why you found it difficult to begin with.  Not only does it mean that I&#8217;m more confident with the code I&#8217;m writing as the tests are written without any prior knowledge of how the code works, but it means its easier to collaborate.  While I was at <a href=\"http://www.teamrubber.com\">Team Rubber</a> I&#8217;d often had to design new parts of applications.  Once the tests, interfaces and docs are written they can be handed off to other people.  Using this pattern lots of interfaces became available for people to work against without the code necessarily being there yet.</p><p><strong>3. What’s the name of the open source project you contributed the most in 2009 ? What did you do ?<br /></strong></p><p><strong>Plone</strong>.  I had the honour of being on the Framework Team for Plone 4, which meant that I have felt closer to the release process for Plone 4 than I have for any other release.  I&#8217;ve represented the Plone Foundation for Google Summer of Code and their high-school programme for about 2 years now, have been a foundation member for a little less but being part of in-depth discussions about the future of the project on a regular basis has certainly brought me closer than anything else.  Can&#8217;t imagine ever feeling like a core dev with the likes of Hanno and Martin committing every waking minute, though <img src='http://www.circulartriangle.com/blog/wp-includes/images/smilies/icon_wink.gif' alt=';)' class='wp-smiley' /></p><p><strong>4. What was the Python blog or website you read the most in 2009 ?</strong></p><p>Does Planet Plone count?  I really enjoy the mix there, although I wish there were more contributors, there are some very slow days.  If not, that&#8217;d probably be either Chris McDonough&#8217;s <a href=\"http://www.plope.com\">plope</a>, he posts a great mix of humour, valuable insight and blasphemy against all that we hold dear.</p><p><strong>5. What are the three top things you want to learn in 2010 ?</strong></p><ul><li>How to survive in Germany.  I&#8217;m going to be moving here in 2010, and I&#8217;d like to be able to get creature comforts, such as real bread.  I&#8217;m already planning what to do on Guy Fawkes&#8217; Night.</li><li>repoze.bfg &#8211; I want my next light-weight app to be in BFG, it looks shiny.</li><li>Some nice new pieces of mathematics, I can feel myself getting rusty in an arts faculty.  Perhaps getting really familiar with group theory.</li></ul>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=10") (slash:comments nil "2"))) ("Back to the blogosphere" "<p>Well, it’s only been just over 100 days since I left Team Rubber (and almost half as long again since I last wrote a blog post), so it’s high time I got a new website set up.</p><p>So I have.</p><p>In the interests of making this at least vaguely technical, I’ve decided to go with a mixture of Plone 4 and WordPress, fronted by deliverance. Plone 4 being entirely distributed as eggs has made setting it up in a WSGI environment even easier, although there are still a few pain points to do with deliverance and the whole setup, especially as both WordPress and Plone make it difficult to change the markup used in their portlets, something for which deliverance isn’t well suited.</p>" "http://www.circulartriangle.com/blog/?p=3" (19244 5649) new 5 nil nil ((title nil "Back to the blogosphere") (link nil "http://www.circulartriangle.com/blog/?p=3") (comments nil "http://www.circulartriangle.com/blog/?p=3#comments") (pubDate nil "Fri, 18 Dec 2009 23:53:53 +0000") (dc:creator nil "Matthew Wilkes") (category nil "Developer") (category nil "Plone") (category nil "wordpress") (guid ((isPermaLink . "false")) "http://www.circulartriangle.com/blog/?p=3") (description nil "Well, it&#8217;s only been just over 100 days since I left Team Rubber (and almost half as long again since I last wrote a blog post), so it&#8217;s high time I got a new website set up. So I have. In the interests of making this at least vaguely technical, I&#8217;ve decided to go with [...]") (content:encoded nil "<p>Well, it&#8217;s only been just over 100 days since I left Team Rubber (and almost half as long again since I last wrote a blog post), so it&#8217;s high time I got a new website set up.</p><p>So I have.</p><p>In the interests of making this at least vaguely technical, I&#8217;ve decided to go with a mixture of Plone 4 and WordPress, fronted by deliverance. Plone 4 being entirely distributed as eggs has made setting it up in a WSGI environment even easier, although there are still a few pain points to do with deliverance and the whole setup, especially as both WordPress and Plone make it difficult to change the markup used in their portlets, something for which deliverance isn&#8217;t well suited.</p>
") (wfw:commentRss nil "http://www.circulartriangle.com/blog/?feed=rss2&p=3") (slash:comments nil "3"))))