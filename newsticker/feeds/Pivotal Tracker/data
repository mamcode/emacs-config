;; -*- coding: utf-8 -*-
(("Pivotal Labs" "Agility Developed" "http://pivotallabs.com" (20852 3167 160758) feed 0 nil nil ((title nil "Pivotal Labs") (atom:link ((href . "http://pivotallabs.com/feed/") (rel . "self") (type . "application/rss+xml"))) (link nil "http://pivotallabs.com") (description nil "Agility Developed") (lastBuildDate nil "Thu, 18 Apr 2013 18:15:17 +0000") (language nil "en-US") (sy:updatePeriod nil "hourly") (sy:updateFrequency nil "1") (generator nil "http://wordpress.org/?v=3.5.1") (item nil (title nil "Not *that* kind of standup") (link nil "http://pivotallabs.com/not-that-kind-of-standup/") (comments nil "http://pivotallabs.com/not-that-kind-of-standup/#comments") (pubDate nil "Thu, 18 Apr 2013 18:15:17 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18412") (description nil "<p></p><p>The post <a href=\"http://pivotallabs.com/not-that-kind-of-standup/\">Not *that* kind of standup</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>The post <a href=\"http://pivotallabs.com/not-that-kind-of-standup/\">Not *that* kind of standup</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/not-that-kind-of-standup/feed/") (slash:comments nil "0")) (item nil (title nil "A light dusting or snow") (link nil "http://pivotallabs.com/a-light-dusting-or-snow/") (comments nil "http://pivotallabs.com/a-light-dusting-or-snow/#comments") (pubDate nil "Thu, 18 Apr 2013 14:11:08 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18411") (description nil "<p>Interestings Sending a JSON array in the POST body When you send an array in your post body, there is a middleware that will put that array into params[:_json]. This is because params has to be a hash.</p><p>The post <a href=\"http://pivotallabs.com/a-light-dusting-or-snow/\">A light dusting or snow</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>Sending a JSON array in the POST body</h3><p>When you send an array in your post body, there is a middleware that will put that array into params[:_json]. This is because params has to be a hash.</p><p>The post <a href=\"http://pivotallabs.com/a-light-dusting-or-snow/\">A light dusting or snow</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/a-light-dusting-or-snow/feed/") (slash:comments nil "0")) (item nil (title nil "Sencha Touch BDD Part 1") (link nil "http://pivotallabs.com/sencha-touch-bdd-part-1/") (comments nil "http://pivotallabs.com/sencha-touch-bdd-part-1/#comments") (pubDate nil "Thu, 18 Apr 2013 04:08:02 +0000") (dc:creator nil "Ken Mayer") (category nil "Labs") (category nil "bdd") (category nil "jasmine") (category nil "javascript") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18405") (description nil "<p>Sencha Touch BDD tl;dr A multi-part series of articles on how to test Sencha Touch applications. It uses Jasmine for unit testing and Siesta for integration testing. Part 1 &#8211; Getting Started In this article you will learn how to set up an application to Jasmine tests in your Opinionated is a good thing In my not-so-humble professional opinion, every modern web framework should provide a testing infrastructure with each newly generated application. I&#8217;m not concerned if it isn&#8217;t my preferred testing package. As long as there&#8217;s something. Testing is not an option, and the framework authors probably (hopefully?) test, so why not offer a serving suggestion for new projects? The worst that can happen is that you, the developer, disagree with the choice of framework. There&#8217;s a little extra bootstrap cost to replace one framework with another. That&#8217;s far less expensive than every new developer discovering a way to&#8230;</p><p>The post <a href=\"http://pivotallabs.com/sencha-touch-bdd-part-1/\">Sencha Touch BDD Part 1</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h1 id=\"senchatouchbdd\">Sencha Touch BDD</h1><h2 id=\"tldr\">tl;dr</h2><p>A multi-part series of articles on how to test Sencha Touch applications. It uses Jasmine for unit testing and Siesta for integration testing.</p><h2 id=\"part1--gettingstarted\">Part 1 &#8211; Getting Started</h2><p>In this article you will learn how to set up an application to Jasmine tests in your</p><h3 id=\"opinionatedisagoodthing\">Opinionated is a good thing</h3><p>In my not-so-humble professional opinion, every modern web framework should provide a testing infrastructure with each newly generated application. I&#8217;m not concerned if it isn&#8217;t my preferred testing package. As long as there&#8217;s <em>something</em>. Testing is not an option, and the framework authors probably (hopefully?) test, so why not offer a serving suggestion for new projects? The worst that can happen is that you, the developer, disagree with the choice of framework. There&#8217;s a little extra bootstrap cost to replace one framework with another. That&#8217;s far less expensive than every new developer discovering a way to test.</p><p>Sencha Touch 2.1 has a generator built into its <code>sencha</code> command line tool, but it does not create a test structure as part of the template. This article is the first in a series of discoveries about how to test Sencha Touch applications. I am not claiming that this is the one true way to test. This is not necessarily the <em>best</em> way, either. It is, however, something that works. It installs easily on my development laptop. It gets you to your first passing test quickly. It saves you the cost of exploring all of the options and making these discoveries for yourself. You have plenty of other things to worry about.</p><h3 id=\"butfirstyouneedawebserver\">But first, you need a web server</h3><p>Once you&#8217;ve installed Sencha Touch and Sencha Command (3.1.0.256 when I wrote this), and you&#8217;ve generated the template application, you&#8217;ll need to serve the pages locally. Most projects will have some sort of app server already running, but it&#8217;s not strictly necessary for testing. When I need to serve pages on my own, I prefer <a href=\"http://pow.cx\">pow</a>. It is a zero-configuration server that can host as many applications as you please. I also like the <a href=\"http://rubygems.org/gems/powder\">powder</a> ruby gem; it adds a nice command line interface to manage <code>pow</code>. If you are worried about adding a ruby dependency to your project, stop worrying. Sencha Touch uses the <a href=\"http://rubygems.org/gems/compass\">compass</a> ruby gem to generate <code>css</code> files; so you already have a ruby dependency.</p><p><code>pow</code> looks for a <a href=\"http://rack.github.io/\">rack</a> app, but in my sample app, I don&#8217;t have one. <code>pow</code> also looks for a directory named <code>public</code> from which it will server static files. The simplest thing that works is to create a symlink named <code>public</code> that points to the root directory of the project.</p><pre><code class=\"sh\"># Generate a new ST app
$ cd &lt;touch toolkit directory&gt;
$ sencha generate app senchaBdd ~/workspace/sencha-bdd

# Set up pow/powder
$ cd ~/workspace/sencha-bdd
$ ln -s . public
$ powder up
$ powder link

# Test the server
$ open http://sencha-bdd.dev</code></pre><p>If all goes well, you should be able to open the application in any web browser at <a href=\"http://sencha-bdd.dev\">http://sencha-bdd.dev</a></p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.50.50-AM-263x300.png?48a6bc\" alt=\"Sencha Touch application\" width=\"263\" height=\"300\" class=\"aligncenter size-medium wp-image-18407\" /></p><figcaption>Running sample app</figcaption></figure><h3 id=\"createadirectorystructurethatmatchesyourapplications\">Create a directory structure that matches your application&#8217;s</h3><p>Your application&#8217;s directory structure should look something like this:</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Add a spec directory that mirrors the <code>app/</code> directory:</p><pre><code>├── spec
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Right now, all of these directories are empty, but we will be adding to them soon.</p><h3 id=\"installjasmine\">Install Jasmine</h3><p>You can get the stand alone version from <a href=\"http://github.com/pivotal/jasmine\">http://github.com/pivotal/jasmine</a>. Install it at the in the spec directory. I include the version number, so I can experiment with different versions, but that&#8217;s a matter of taste.</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
├── public -&gt; .
├── resources/
├── spec/
│   ├── controller
│   ├── jasmine-1.3.1
│   ├── model
│   ├── profile
│   ├── store
│   └── view
└── touch
</code></pre><p>In order to get Jasmine going, you need a special html file named, by convention, <code>SpecRunner</code>. Add it to spec/ as well. It looks like this:</p><script src=\"https://gist.github.com/5409685.js\"></script><noscript><pre><code class=\"language-html html\">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Jasmine Spec Runner&lt;/title&gt;

    &lt;link rel=&quot;shortcut icon&quot; type=&quot;image/png&quot; href=&quot;jasmine-1.3.1/jasmine_favicon.png&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jasmine-1.3.1/jasmine.css&quot;&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine-html.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;http://code.jquery.com/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;

    &lt;!-- include source files here... --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;../touch/sencha-touch-all-debug.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        Ext.Loader.setPath({
            'Ext':       '../touch/src',
            'SenchaBdd': '../app'
        });

        Ext.application({
            name: 'SenchaBdd',

            launch: function () {
                jasmine.getEnv().addReporter(new jasmine.HtmlReporter());
                jasmine.getEnv().execute();
            }
        });
    &lt;/script&gt;

    &lt;!-- include spec files here... --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;support/SpecHelper.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;sanitySpec.js&quot;&gt;&lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;
&lt;div id=&quot;jasmine_content&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre></noscript><p>You will need to modify lines 18 and 22 with the name of your ST app (which can be found in <code>app.json</code> and <code>app.js</code>).</p><h3 id=\"writeonepassingtest\">Write one passing test</h3><p>Create a file, <code>spec/sanitySpec.js</code></p><pre><code class=\"js\">describe(&quot;Sanity&quot;, function() {
  it(&quot;succeeds&quot;, function() {
    expect(true).toEqual(true);
  });
});</code></pre><p>Now load the spec runner into a browser. In the case of this sample app, the url is <a href=\"http://sencha-bdd.dev/spec/SpecRunner.html\">http://sencha-bdd.dev/spec/SpecRunner.html</a></p><p>You should see the test results with one passing spec.</p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.33.58-PM-300x238.png?48a6bc\" alt=\"Passing 1 spec\" width=\"300\" height=\"238\" class=\"aligncenter size-medium wp-image-18406\" /></p><figcaption>Passing jasmine spec</figcaption></figure><p>If you don&#8217;t see this, open up the browser&#8217;s developer console to look for clues.</p><h3 id=\"untilnexttime\">Until next time</h3><p>That&#8217;s it! You now have a complete JavaScript testing framework installed in your application. This is a good time to commit your changes. Celebrate in the glory of the green goodness. You&#8217;ve earned it. </p><p>Next time, I&#8217;ll show you how to actually test a view class.</p><p>The post <a href=\"http://pivotallabs.com/sencha-touch-bdd-part-1/\">Sencha Touch BDD Part 1</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/sencha-touch-bdd-part-1/feed/") (slash:comments nil "0")) (item nil (title nil "Single resource REST Rails routes") (link nil "http://pivotallabs.com/single-resource-rest-rails-routes/") (comments nil "http://pivotallabs.com/single-resource-rest-rails-routes/#comments") (pubDate nil "Tue, 16 Apr 2013 20:19:11 +0000") (dc:creator nil "Robbie Clutton") (category nil "Labs") (category nil "ironblogger") (category nil "rails") (category nil "rest") (category nil "routing") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18250") (description nil "<p>REST principles by default is a fantastic convention within Rails applications. The documentation for how to route HTTP requests are comprehensive and give examples about photo resources within an application. If you&#8217;ve got photo and tag as first class resources of your application, Rails has you covered. But what if you are building an application with a focus on one type of resource, do you really want /resource_type as a prefix to all of your application paths? I certainly don&#8217;t and I&#8217;ll show you how to remove that without diverging from Rails core strenghts. For better or worse, I&#8217;m always conscience of making sure applications I&#8217;m involved in have Cool URIs and sometimes that does mean fighting the Rails conventions. However Rails routing is very flexible and can provide me with the application paths that make me happy. Take Twitter as an example. Every user has their username as a&#8230;</p><p>The post <a href=\"http://pivotallabs.com/single-resource-rest-rails-routes/\">Single resource REST Rails routes</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>REST principles by default is a fantastic convention within Rails applications. The <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a> for how to route HTTP requests are comprehensive and give examples about <code>photo</code> resources within an application. If you&#8217;ve got <code>photo</code> and <code>tag</code> as first class resources of your application, Rails has you covered. But what if you are building an application with a focus on one type of resource, do you really want <code>/resource_type</code> as a prefix to all of your application paths? I certainly don&#8217;t and I&#8217;ll show you how to remove that without diverging from Rails core strenghts.</p><p>For better or worse, I&#8217;m always conscience of making sure applications I&#8217;m involved in have <a href=\"http://www.w3.org/Provider/Style/URI.html\">Cool URIs</a> and sometimes that does mean fighting the Rails conventions. However Rails routing is very flexible and can provide me with the application paths that make me happy.</p><p>Take Twitter as an example. Every user has their username as a top level path, so instead of having <code>/users/robb1e</code>, they simply have <code>/robb1e</code>. When dealing with an application where there is one core resource it can make a lot of sense to strip the resource prefix. This can be achieved through <code>scopes</code> in the routing configuration.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
  end
end
</code></pre><p>Gives you routes which look like</p><pre><code>           GET  /:username(.:format)                users#show
</code></pre><p>If you wanted to see the followers and followees of that user, you have two options. Return to the default <code>resource</code> or use the <code>member</code> block. I&#8217;ll show you both.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
    resource :following, only: [:show]
    resource :followers, only: [:show]
  end
end
</code></pre><p>This adds the routes</p><pre><code>following GET  /:username/following(.:format)      followings#show
followers GET  /:username/followers(.:format)      followers#show
</code></pre><p>Alternatively <code>member</code> can be used to achieve a similar result.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
    get '/following', to: 'user#following'
    get '/followers', to: 'user#followers'
  end
end
</code></pre><p>This gives the paths</p><pre><code>          GET  /:username/following(.:format)      user#following
          GET  /:username/followers(.:format)      user#followers
</code></pre><p>If you are trending into paths unknown, you always have the safety of tests to help you out. Both <a href=\"http://guides.rubyonrails.org/routing.html#testing-routes\">Rails</a> and <a href=\"https://github.com/rspec/rspec-rails#routing-specs\">RSpec</a> have ways to test your application routes.</p><p>One gotcha which using the default resource routing removes is clashing paths. If you decide to build an admin page and want to put that at <code>/admin</code>, that needs to be in the routes config before the scoped block and if a user has given themselves the name of <code>admin</code> then you may be in for some fun.</p><p>So the next time a need arises for an unconventional route, check the <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a>, it&#8217;s probably possible although almost always warants thinking about.</p><p>The post <a href=\"http://pivotallabs.com/single-resource-rest-rails-routes/\">Single resource REST Rails routes</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/single-resource-rest-rails-routes/feed/") (slash:comments nil "0")) (item nil (title nil "Is this thing on?") (link nil "http://pivotallabs.com/is-this-thing-on/") (comments nil "http://pivotallabs.com/is-this-thing-on/#comments") (pubDate nil "Tue, 16 Apr 2013 17:54:47 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18403") (description nil "<p>Interestings Ruby method cache article James Golick wrote an interesting article on MRI&#039;s method cache and how difficult it is to write software that uses it effectively. http://jamesgolick.com/2013/4/14/mris-method-caches.html Google Mirror: API for Google Glass https://developers.google.com/glass/about &#34;The Healthy Programmer&#34; book in Google Drive &#34;The Healthy Programmer&#34; by Joe Kutner, same guy whose video was watched for Monday&#039;s lunch video. Full of amusing chapter titles. Events Tuesday: Pair Exchange</p><p>The post <a href=\"http://pivotallabs.com/is-this-thing-on/\">Is this thing on?</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>Ruby method cache article</h3><p>James Golick wrote an interesting article on MRI&#039;s method cache and how difficult it is to write software that uses it effectively.</p><p><a href=\"http://jamesgolick.com/2013/4/14/mris-method-caches.html\">http://jamesgolick.com/2013/4/14/mris-method-caches.html</a></p><h3>Google Mirror: API for Google Glass</h3><p><a href=\"https://developers.google.com/glass/about\">https://developers.google.com/glass/about</a></p><h3>&quot;The Healthy Programmer&quot; book in Google Drive</h3><p>&quot;The Healthy Programmer&quot; by  Joe Kutner, same guy whose video was watched for Monday&#039;s lunch video.  Full of amusing chapter titles.</p><h2>Events</h2><h3>Tuesday: Pair Exchange</h3><p>The post <a href=\"http://pivotallabs.com/is-this-thing-on/\">Is this thing on?</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/is-this-thing-on/feed/") (slash:comments nil "0")) (item nil (title nil "See Your Work Product in Its Natural Habitat") (link nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/") (comments nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/#comments") (pubDate nil "Tue, 16 Apr 2013 03:45:40 +0000") (dc:creator nil "Trace Wax") (category nil "Labs") (category nil "ironblogger") (category nil "lean") (category nil "users") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18393") (description nil "<p>I took a day off of work recently, and learned more about what I was working on than in several months of coding. My current Pivotal client project is CaseCommons, using web technology to modernize child welfare and foster care so social workers can spend more time with kids and families.  We&#8217;d just completed a large set of work about court hearings, and now I was attending one. I went to see my friends finalize their adoption of two little boys they&#8217;ve been fostering, with their wedding to immediately follow. Everything I&#8217;d done and learned paled compared to seeing the judge and social worker speak about how the kids&#8217; lives improved in my friends&#8217; care. One of the boys was in a wheelchair a year ago, and now here they were joyously laughing and running in circles around their new parents as the adoption was completed and wedding vows were&#8230;</p><p>The post <a href=\"http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/\">See Your Work Product in Its Natural Habitat</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>I took a day off of work recently, and learned more about what I was working on than in several months of coding.</p><p>My current Pivotal client project is <a title=\"Case Commons, LLC\" href=\"http://casecommons.org\">CaseCommons</a>, using web technology to modernize child welfare and foster care so social workers can spend more time with kids and families.  We&#8217;d just completed a large set of work about court hearings, and now I was attending one. I went to see my friends finalize their adoption of two little boys they&#8217;ve been fostering, with their wedding to immediately follow.</p><p>Everything I&#8217;d done and learned paled compared to seeing the judge and social worker speak about how the kids&#8217; lives improved in my friends&#8217; care. One of the boys was in a wheelchair a year ago, and now here they were joyously laughing and running in circles around their new parents as the adoption was completed and wedding vows were spoken.</p><p>I talked to the social worker at length and learned things I hadn&#8217;t yet come across, like how most adoptions are with extended family members, my friends were the exception. I also saw the clerk entering the details of the court hearing into their computer system, which looked like it hadn&#8217;t been updated since the 1990s but it still was blazing fast. They&#8217;re not using our product yet, which is much more streamlined. But they&#8217;ll expect it to be equally responsive.</p><p>Now, whenever I&#8217;m doing a feature or fix for social workers, I see Tania&#8217;s face as she hugs the children and speaks with my friends about the kids. When I work on court hearings, I see the clerk navigating so quickly to enter in all the many details.</p><p>I won&#8217;t always get to work on helping people help kids.  But when I move on to my next Pivotal project I can&#8217;t wait to set aside some time much earlier on, to look users in the eye and truly understand how what we&#8217;re building will make their lives better.</p><p>The post <a href=\"http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/\">See Your Work Product in Its Natural Habitat</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/feed/") (slash:comments nil "0")) (item nil (title nil "Project Monitor, Product Management, Post Meridian, and Other PM Acronyms") (link nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/") (comments nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/#comments") (pubDate nil "Tue, 16 Apr 2013 03:06:45 +0000") (dc:creator nil "Graham Siener") (category nil "Labs") (category nil "information radiator") (category nil "ironblogger") (category nil "product management") (category nil "projectmonitor") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18382") (description nil "<p>Semaphore In agile software development, an information radiator is a (normally large) physical display placed in a prominent location in an office, where passers-by can see it, and which presents an up-to-date summary of the status of a software product or products.[1] The best way we’ve found to keep the team informed of the build status is to display it high on a wall near the team as a big red or green indicator. When there’s only a single project going on, we’ve found that a screen that’s simply all red or all green is effective. At Pivotal Labs, though, we have many projects going on at once. Rather than putting numerous TVs up on the wall, we’ve created an application that aggregates multiple projects onto one page. Tddium Edward announced this four years ago as http://ci.pivotallabs.com.  A year later, we open sourced this as Pivotal Pulse and then renamed&#8230;</p><p>The post <a href=\"http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/\">Project Monitor, Product Management, Post Meridian, and Other PM Acronyms</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h1 dir=\"ltr\">Semaphore</h1><p dir=\"ltr\">In agile software development, an information radiator is a (normally large) physical display placed in a prominent location in an office, where passers-by can see it, and which presents an up-to-date summary of the status of a software product or products.[1]</p><p>The best way we’ve found to keep the team informed of the build status is to display it high on a wall near the team as a big red or green indicator. When there’s only a single project going on, we’ve found that a screen that’s simply all red or all green is effective. At Pivotal Labs, though, we have many projects going on at once. Rather than putting numerous TVs up on the wall, we’ve created an application that aggregates multiple projects onto one page.</p><h1>Tddium</h1><p dir=\"ltr\">Edward <a href=\"http://pivotallabs.com/ci-dot-pivotal-labs-dot-com/\">announced this four years ago</a> as <a href=\"http://ci.pivotallabs.com/\">http://ci.pivotallabs.com</a>.  A year later, <a href=\"http://pivotallabs.com/pivotal-pulse/\">we open sourced</a> this as Pivotal Pulse and then <a href=\"http://pivotallabs.com/cimonitor-n-e-pulse-/\">renamed it</a> CIMonitor.  That lasted a few years, until we integration Pivotal Tracker details, which <a href=\"https://github.com/pivotal/projectmonitor/commit/4231f8408e620264279404fd499df23e0ef40afe\">prompted a rename</a> to Project Monitor last year.</p><h1 dir=\"ltr\">Cruise Control</h1><p dir=\"ltr\">Fast forward to me joining Pivotal Labs in November.  Project Monitor was on the walls of our office, but the radiator had a leak.  Our internal Project Monitor instance was running on a server in our Director of IT’s office.  During Sandy, every monitor in SF timed out trying to connect to our nyc-based ci servers.  We had serious scalability issues that affected polling, the delayed job queue was unreliable, and our codebase needed a code debt payment plan.  There had been a few dedicated sprints to triage open wounds, but a long running branch for an eventmachine based polling refactor had lingered as a pull request from several months ago.</p><p>This is pretty common in older codebases, especially so for internal projects that don’t get any attention unless they’re on fire.  Even worse, the backlog had suffered from being on autopilot for too long.  I’ve seen this happen in many products that have been in the market for a while &#8212; they’ve checked the box on value proposition and moved onto “wouldn’t it be cool if” type functionality.  I was informed that I’d take the reigns as Product Owner and we had a mini-inception on my first day.</p><h1>Team City</h1><p dir=\"ltr\">Beyond ramping myself up on a new codebase, I struggled to sort out who Project Monitor’s stakeholders were and what its remit truly was.  Because consumption is inherently passive, I couldn’t rely on metrics or many of the other tools in my belt.  It was working, but was it solving problems?</p><p>Luckily, two key events helped me crystallize a thesis for what PM should be.  First, during a trip to our SF office, I realized how broken support was for our newest CI, Travis.  The <a href=\"http://cloudfoundry.org/\">CloudFoundry</a> team, which had just moved in-house, was growing frustrated with confusion over which of their (40+?) builds was actually broken vs. broken on a branch vs. just not broken.  With no beach in sight, I carved out some time to push a fix and heard a collective sigh of relief from the CF team.</p><p>Shortly after, a hiring surge paired with a project ramp down created a large team of Pivots ready, willing, and able to tackle our backlog.  My colleague, <a href=\"http://pivotallabs.com/author/jmukai/\">Johnny Mukai</a>, sent on a reflection on how things were going and his concerns for the product’s direction:</p><blockquote><p>It&#8217;s felt great to dig into Project Monitor and take care of some traditionally thorny pieces of the app, merge in some long running branches, and revel in the camaraderie of being on a large team again.</p><p>As we plow through open issues and Project Monitor transitions from &#8216;please fix this&#8217; to a &#8216;what new features shall we implement&#8217; kind of project, I have some reservations.  In my experience, Pivots use Project Monitor for one thing and one thing only and they only want it to do one thing and it had better do that one thing well. (One. Thing.)</p><p>The build goes red, instantly I understand that something has run afoul. On a board of builds where only two things happen, it&#8217;s obvious that I need to immediately address this. On a busy board with a million things going on &#8212; some of them open to subjective interpretation &#8212;  it&#8217;s easy for me to just glaze over. If it were important, there would obviously be a giant red notice for me, somewhere.</p></blockquote><h1 dir=\"ltr\"></h1><h1 dir=\"ltr\">Closer (by Travis) [2]</h1><p dir=\"ltr\">Click.  At that moment it was clear to me that Project Monitor is a dashboard for engineers and product owners building a product.  Not a devops board, not a metrics showcase, just an indicator that someone needs to act.  Not everyone agrees, but being opinionated is the only way to ensure that a product stays relevant.</p><p dir=\"ltr\">We just spent time reimagining the Tracker portion of our status screen, and I’m proud of all the collaboration and feedback the company gave as we broke down the problem, released and refined.[3]  I saw Project Monitor running in a colleague’s office this weekend, and even fielded a support question from a Windows user in Finland!  Stepping into a new product as PM is hard; if you find yourself in that position I encourage you to work on a clear thesis that guides your efforts.</p><p><b><b>Project Monitor today.  See our <a href=\"https://github.com/pivotal/projectmonitor/\">repo</a> for more information on getting started.<br /><img alt=\" \" src=\"https://lh5.googleusercontent.com/ZU-k6eM9hNQcZOWqxYo98L1wKSh_NlkMkB-Xy1VG4PnqnZxFtlRqDoZbKtlmkvAocGe0j-1m28CvcrNX8LFcVsblGOIiJ4Od_5KuJA13vL72han-OOw0a1ULiA\" width=\"464px;\" height=\"263px;\" /></b></b></p><p dir=\"ltr\">[1] <a href=\"http://en.wikipedia.org/wiki/Agile_software_development\">http://en.wikipedia.org/wiki/Agile_software_development</a></p><p dir=\"ltr\">[2] <a href=\"http://open.spotify.com/track/5JPWmf7ZcJTSKOzzyGyPUI\">Travis – Closer</a> (Spotify)</p><p dir=\"ltr\">[3] <a href=\"http://www.webgrrls.com/blog/2011/08/03/step-by-step-lean-user-experience/\">Think, Make, Check!</a></p><p>The post <a href=\"http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/\">Project Monitor, Product Management, Post Meridian, and Other PM Acronyms</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/feed/") (slash:comments nil "0")) (item nil (title nil "What’s (not) in a Name") (link nil "http://pivotallabs.com/not-in-a-name/") (comments nil "http://pivotallabs.com/not-in-a-name/#comments") (pubDate nil "Tue, 16 Apr 2013 01:51:57 +0000") (dc:creator nil "Jonathan Berger") (category nil "Labs") (category nil "design") (category nil "ironblogger") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18383") (description nil "<p>I solve design problems. Sometimes I use hi-res mockups, sometimes I use wireframes. I always use empathy. I always strive to understand the user and design against their needs. What am I? What should I call myself? A User Interface Designer? Maybe a User Experience Designer? No, an Information Architect! A Human Factors Engineer? Is there a meaningful difference between these titles? What should we call themselves? Nanas and Bubbes kvell over doctors and lawyers; why don’t our parents and grandparents know what we do for a living? Why don’t we know what our name is? A few years ago at the Idea Conference, I heard an answer that was so good I’ve been quoting it ever since (and it&#8217;s come up even more now that the words &#8220;agile&#8221; and &#8220;lean&#8221; appear so frequently). It was a two-day conference, and the keynote speaker got sick and was unable to close&#8230;</p><p>The post <a href=\"http://pivotallabs.com/not-in-a-name/\">What&#8217;s (not) in a Name</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>I solve design problems. Sometimes I use hi-res mockups, sometimes I use wireframes. I always use empathy. I always strive to understand the user and design against their needs.</p><p>What am I? What should I call myself?</p><p>A User Interface Designer? Maybe a User Experience Designer? No, an Information Architect! A Human Factors Engineer? Is there a meaningful difference between these titles? What should we call themselves? Nanas and Bubbes kvell over doctors and lawyers; why don’t our parents and grandparents know what we do for a living? Why don’t we know what our name is?</p><p>A few years ago at the <a href=\"http://ideaconference.org/2007/\">Idea Conference</a>, I heard an answer that was so good I’ve been quoting it ever since (and it&#8217;s come up even more now that the words &#8220;agile&#8221; and &#8220;lean&#8221; appear so frequently). It was a two-day conference, and the keynote speaker got sick and was unable to close the conference on the final day. Instead, the organizers asked all the speakers to come up and do a roundtable Q&amp;A with the audience. Attendees lined up at the microphone, and the first question rang out:</p><blockquote><p>What should we call ourselves? User Interface Designers? User Experience? Information Architects? Who are we?!</p></blockquote><p>This was a plea to our elders and wisers to shed some light on our very identity as a community. Each and every one of them—designers, speakers, luminaries—froze in panic. All but one.</p><p>The outsider stood up. <a href=\"http://en.wikipedia.org/wiki/Michael_Wesch\">Michael Wesch</a> (of “<a href=\"http://www.youtube.com/watch?v=NLlGopyXT_g\">The Machines are Us/ing Us</a>” fame) grabbed the mic: “Let me take this one.” He went on to say:</p><blockquote><p>I’m not a designer, but as an anthropologist, I can give you perspective on your community. I don’t know whether ‘UXer’ or ‘UI Designer’ is a better designation, but I can tell you this: as long as there’s debate over what to call yourselves, your very identity, your community is vibrant. The moment you agree on your name, your frozen and a known quantity—and ready to be commodified.</p></blockquote><p>Every time someone asks me “what should we call ourselves?” I tell that story. I love being part of a community that is vibrant. I embrace the questions and challenges and learnings that keep us, for now, impervious to commodification. And I still hope I’ll figure out a way to explain to my grandmother what exactly it is that I do all day.</p><p><iframe src=\"http://www.youtube.com/embed/NLlGopyXT_g\" height=\"315\" width=\"420\" allowfullscreen=\" \" frameborder=\"0\"></iframe></p><p>The post <a href=\"http://pivotallabs.com/not-in-a-name/\">What&#8217;s (not) in a Name</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/not-in-a-name/feed/") (slash:comments nil "0")) (item nil (title nil "Pizza will be served") (link nil "http://pivotallabs.com/pizza-will-be-served/") (comments nil "http://pivotallabs.com/pizza-will-be-served/#comments") (pubDate nil "Mon, 15 Apr 2013 16:10:09 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18378") (description nil "<p>Interestings 0 duration != no animation UIView documentation for animateWithDuration:animations: says: &#34;If you specify a negative value or 0, the changes are made without animating them.&#34; but specifying a zero duration is not the same as not using animations at all. Specifically, constraints still animate even if the duration is 0.</p><p>The post <a href=\"http://pivotallabs.com/pizza-will-be-served/\">Pizza will be served</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>0 duration != no animation</h3><p>UIView documentation for animateWithDuration:animations: says: &quot;If you specify a negative value or 0, the changes are made without animating them.&quot; but specifying a zero duration is not the same as not using animations at all. Specifically, constraints still animate even if the duration is 0.</p><p>The post <a href=\"http://pivotallabs.com/pizza-will-be-served/\">Pizza will be served</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/pizza-will-be-served/feed/") (slash:comments nil "0")) (item nil (title nil "Mark Your Place: Bookmarks in RubyMine") (link nil "http://pivotallabs.com/mark-your-place-bookmarks-in-rubymine/") (comments nil "http://pivotallabs.com/mark-your-place-bookmarks-in-rubymine/#comments") (pubDate nil "Sun, 14 Apr 2013 16:35:34 +0000") (dc:creator nil "Jared Carroll") (category nil "Labs") (category nil "keyboard") (category nil "mouse-free development") (category nil "productivity") (category nil "rubymine") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18339") (description nil "<p>Like many text editors, RubyMine supports bookmarks. A bookmark is a reference to a particular line in a file. They are visually indicated by an icon in the editor gutter. Bookmarks can be used as a form of navigation based on interested parts of a codebase. In this post, we&#8217;ll explore (using the Mac OS X 10.5+ keymap) the three types of bookmarks in RubyMine: anonymous, numbered, and lettered. Anonymous Bookmarks Anonymous bookmarks can be created with F3. They appear as a checkmark icon in the editor gutter. Unfortunately, there are no default keyboard shortcuts to navigate anonymous bookmarks. Instead, use the Find Action command,command + shift + A, to search for the &#8220;Next Bookmark&#8221; and &#8220;Previous Bookmark&#8221; anonymous bookmark navigation commands. These commands will only navigate through anonymous bookmarks in the current file. Mnemonic Bookmarks There are two types of mnemonic bookmarks: numbered and lettered. Numbered Bookmarks You can&#8230;</p><p>The post <a href=\"http://pivotallabs.com/mark-your-place-bookmarks-in-rubymine/\">Mark Your Place: Bookmarks in RubyMine</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>
Like many text editors, RubyMine supports bookmarks.  A <strong>bookmark</strong> is a reference to a particular line in a file. They are visually indicated by an icon in the editor gutter.  Bookmarks can be used as a form of navigation based on interested parts of a codebase.  In this post, we&#8217;ll explore (using the <a href=\"http://www.jetbrains.com/ruby/docs/RubyMine_ReferenceCard_Mac.pdf\">Mac OS X 10.5+ keymap</a>) the three types of bookmarks in RubyMine: anonymous, numbered, and lettered.
</p><h2>Anonymous Bookmarks</h2><p>
Anonymous bookmarks can be created with <code>F3</code>. They appear as a checkmark icon in the editor gutter.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/anonymous-bookmark.png?48a6bc\" alt=\"anonymous bookmark\" /></p><p>
Unfortunately, there are no default keyboard shortcuts to navigate anonymous bookmarks.  Instead, use the Find Action command,<code>command + shift + A</code>, to search for the &#8220;Next Bookmark&#8221; and &#8220;Previous Bookmark&#8221; anonymous bookmark navigation commands. These commands will <em>only</em> navigate through anonymous bookmarks in the current file.
</p><h2>Mnemonic Bookmarks</h2><p>There are two types of mnemonic bookmarks: numbered and lettered.</p><h3>Numbered Bookmarks</h3><p>
You can have up to 10 numbered bookmarks: 0-9. To create a numbered bookmark, press <code>control + shift + &lt;number&gt;</code>, e.g., <code>control + shift + 4</code>.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/numbered-bookmark.png?48a6bc\" alt=\"numbered bookmark\" /></p><p>
To navigate to a numbered bookmark press <code>control + &lt;number&gt;</code>, e.g., <code>control + 4</code>.
</p><h3>Lettered Bookmarks</h3><p>
You can have up to 26 lettered bookmarks: A-Z. To create a lettered bookmark press <code>option + F3</code>, then choose a letter to use for the bookmark.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/lettered-bookmark.png?48a6bc\" alt=\"lettered bookmark\" /></p><p>
To navigate lettered bookmarks, use the bookmarks dialog (discussed below), <code>command + F3</code>.
</p><h2>Deleting Bookmarks</h2><p>
All three types of bookmarks can be deleted by pressing <code>F3</code> when on the bookmarked line.
</p><h2>Viewing Bookmarks</h2><p>
You can view all existing bookmarks with <code>command + F3</code>.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/bookmarks-dialog.png?48a6bc\" alt=\"bookmarks dialog\" /></p><p>
This dialog also allows you to delete, and navigate bookmarks.
</p><h2>Last Edit Location &#8220;Bookmark&#8221;</h2><p>
When editing, it&#8217;s common to stop for a second to view another part of the file (or a different file), and then navigate back to the original edit location.
</p><p>
Instead of using bookmarks to quickly navigate back to the original edit location, use the Last Edit Location command, <code>command + shift + Backspace</code>.
</p><h2>Experimenting with Bookmark Navigation</h2><p>
After trying out the different types of bookmarks in RubyMine, I find numbered bookmarks to be the most useful. They are both easy to create and navigate. Lettered bookmarks offer a greater number of possible bookmarks, but navigating them requires several commands. I think anonymous bookmarks could also be useful, if you create shortcuts for their navigation commands.</p><p>
Try them all and see what works best for you.</p><p>The post <a href=\"http://pivotallabs.com/mark-your-place-bookmarks-in-rubymine/\">Mark Your Place: Bookmarks in RubyMine</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/mark-your-place-bookmarks-in-rubymine/feed/") (slash:comments nil "0")))) ("Not *that* kind of standup" "<p>The post <a href=\"http://pivotallabs.com/not-that-kind-of-standup/\">Not *that* kind of standup</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/not-that-kind-of-standup/" (20848 14389) old 3 nil nil ((title nil "Not *that* kind of standup") (link nil "http://pivotallabs.com/not-that-kind-of-standup/") (comments nil "http://pivotallabs.com/not-that-kind-of-standup/#comments") (pubDate nil "Thu, 18 Apr 2013 18:15:17 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18412") (description nil "<p></p><p>The post <a href=\"http://pivotallabs.com/not-that-kind-of-standup/\">Not *that* kind of standup</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>The post <a href=\"http://pivotallabs.com/not-that-kind-of-standup/\">Not *that* kind of standup</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/not-that-kind-of-standup/feed/") (slash:comments nil "0"))) ("A light dusting or snow" "<h2>Interestings</h2><h3>Sending a JSON array in the POST body</h3><p>When you send an array in your post body, there is a middleware that will put that array into params[:_json]. This is because params has to be a hash.</p><p>The post <a href=\"http://pivotallabs.com/a-light-dusting-or-snow/\">A light dusting or snow</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/a-light-dusting-or-snow/" (20847 65276) old 4 nil nil ((title nil "A light dusting or snow") (link nil "http://pivotallabs.com/a-light-dusting-or-snow/") (comments nil "http://pivotallabs.com/a-light-dusting-or-snow/#comments") (pubDate nil "Thu, 18 Apr 2013 14:11:08 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18411") (description nil "<p>Interestings Sending a JSON array in the POST body When you send an array in your post body, there is a middleware that will put that array into params[:_json]. This is because params has to be a hash.</p><p>The post <a href=\"http://pivotallabs.com/a-light-dusting-or-snow/\">A light dusting or snow</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>Sending a JSON array in the POST body</h3><p>When you send an array in your post body, there is a middleware that will put that array into params[:_json]. This is because params has to be a hash.</p><p>The post <a href=\"http://pivotallabs.com/a-light-dusting-or-snow/\">A light dusting or snow</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/a-light-dusting-or-snow/feed/") (slash:comments nil "0"))) ("Sencha Touch BDD Part 1" "<h1 id=\"senchatouchbdd\">Sencha Touch BDD</h1><h2 id=\"tldr\">tl;dr</h2><p>A multi-part series of articles on how to test Sencha Touch applications. It uses Jasmine for unit testing and Siesta for integration testing.</p><h2 id=\"part1--gettingstarted\">Part 1 – Getting Started</h2><p>In this article you will learn how to set up an application to Jasmine tests in your</p><h3 id=\"opinionatedisagoodthing\">Opinionated is a good thing</h3><p>In my not-so-humble professional opinion, every modern web framework should provide a testing infrastructure with each newly generated application. I’m not concerned if it isn’t my preferred testing package. As long as there’s <em>something</em>. Testing is not an option, and the framework authors probably (hopefully?) test, so why not offer a serving suggestion for new projects? The worst that can happen is that you, the developer, disagree with the choice of framework. There’s a little extra bootstrap cost to replace one framework with another. That’s far less expensive than every new developer discovering a way to test.</p><p>Sencha Touch 2.1 has a generator built into its <code>sencha</code> command line tool, but it does not create a test structure as part of the template. This article is the first in a series of discoveries about how to test Sencha Touch applications. I am not claiming that this is the one true way to test. This is not necessarily the <em>best</em> way, either. It is, however, something that works. It installs easily on my development laptop. It gets you to your first passing test quickly. It saves you the cost of exploring all of the options and making these discoveries for yourself. You have plenty of other things to worry about.</p><h3 id=\"butfirstyouneedawebserver\">But first, you need a web server</h3><p>Once you’ve installed Sencha Touch and Sencha Command (3.1.0.256 when I wrote this), and you’ve generated the template application, you’ll need to serve the pages locally. Most projects will have some sort of app server already running, but it’s not strictly necessary for testing. When I need to serve pages on my own, I prefer <a href=\"http://pow.cx\">pow</a>. It is a zero-configuration server that can host as many applications as you please. I also like the <a href=\"http://rubygems.org/gems/powder\">powder</a> ruby gem; it adds a nice command line interface to manage <code>pow</code>. If you are worried about adding a ruby dependency to your project, stop worrying. Sencha Touch uses the <a href=\"http://rubygems.org/gems/compass\">compass</a> ruby gem to generate <code>css</code> files; so you already have a ruby dependency.</p><p><code>pow</code> looks for a <a href=\"http://rack.github.io/\">rack</a> app, but in my sample app, I don’t have one. <code>pow</code> also looks for a directory named <code>public</code> from which it will server static files. The simplest thing that works is to create a symlink named <code>public</code> that points to the root directory of the project.</p><pre><code class=\"sh\"># Generate a new ST app
$ cd &lt;touch toolkit directory&gt;
$ sencha generate app senchaBdd ~/workspace/sencha-bdd
# Set up pow/powder
$ cd ~/workspace/sencha-bdd
$ ln -s . public
$ powder up
$ powder link
# Test the server
$ open http://sencha-bdd.dev</code></pre><p>If all goes well, you should be able to open the application in any web browser at <a href=\"http://sencha-bdd.dev\">http://sencha-bdd.dev</a></p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.50.50-AM-263x300.png?48a6bc\" alt=\"Sencha Touch application\" width=\"263\" height=\"300\" class=\"aligncenter size-medium wp-image-18407\" /></p><figcaption>Running sample app</figcaption></figure><h3 id=\"createadirectorystructurethatmatchesyourapplications\">Create a directory structure that matches your application’s</h3><p>Your application’s directory structure should look something like this:</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Add a spec directory that mirrors the <code>app/</code> directory:</p><pre><code>├── spec
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Right now, all of these directories are empty, but we will be adding to them soon.</p><h3 id=\"installjasmine\">Install Jasmine</h3><p>You can get the stand alone version from <a href=\"http://github.com/pivotal/jasmine\">http://github.com/pivotal/jasmine</a>. Install it at the in the spec directory. I include the version number, so I can experiment with different versions, but that’s a matter of taste.</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
├── public -&gt; .
├── resources/
├── spec/
│   ├── controller
│   ├── jasmine-1.3.1
│   ├── model
│   ├── profile
│   ├── store
│   └── view
└── touch
</code></pre><p>In order to get Jasmine going, you need a special html file named, by convention, <code>SpecRunner</code>. Add it to spec/ as well. It looks like this:</p><script src=\"https://gist.github.com/5409685.js\"></script><noscript><pre><code class=\"language-html html\">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Jasmine Spec Runner&lt;/title&gt;
&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/png&quot; href=&quot;jasmine-1.3.1/jasmine_favicon.png&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jasmine-1.3.1/jasmine.css&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine-html.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;http://code.jquery.com/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;
&lt;!-- include source files here... --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;../touch/sencha-touch-all-debug.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
Ext.Loader.setPath({
'Ext':       '../touch/src',
'SenchaBdd': '../app'
});
Ext.application({
name: 'SenchaBdd',
launch: function () {
jasmine.getEnv().addReporter(new jasmine.HtmlReporter());
jasmine.getEnv().execute();
}
});
&lt;/script&gt;
&lt;!-- include spec files here... --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;support/SpecHelper.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;sanitySpec.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=&quot;jasmine_content&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre></noscript><p>You will need to modify lines 18 and 22 with the name of your ST app (which can be found in <code>app.json</code> and <code>app.js</code>).</p><h3 id=\"writeonepassingtest\">Write one passing test</h3><p>Create a file, <code>spec/sanitySpec.js</code></p><pre><code class=\"js\">describe(&quot;Sanity&quot;, function() {
it(&quot;succeeds&quot;, function() {
expect(true).toEqual(true);
});
});</code></pre><p>Now load the spec runner into a browser. In the case of this sample app, the url is <a href=\"http://sencha-bdd.dev/spec/SpecRunner.html\">http://sencha-bdd.dev/spec/SpecRunner.html</a></p><p>You should see the test results with one passing spec.</p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.33.58-PM-300x238.png?48a6bc\" alt=\"Passing 1 spec\" width=\"300\" height=\"238\" class=\"aligncenter size-medium wp-image-18406\" /></p><figcaption>Passing jasmine spec</figcaption></figure><p>If you don’t see this, open up the browser’s developer console to look for clues.</p><h3 id=\"untilnexttime\">Until next time</h3><p>That’s it! You now have a complete JavaScript testing framework installed in your application. This is a good time to commit your changes. Celebrate in the glory of the green goodness. You’ve earned it. </p><p>Next time, I’ll show you how to actually test a view class.</p><p>The post <a href=\"http://pivotallabs.com/sencha-touch-bdd-part-1/\">Sencha Touch BDD Part 1</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/sencha-touch-bdd-part-1/" (20847 29090) old 5 nil nil ((title nil "Sencha Touch BDD Part 1") (link nil "http://pivotallabs.com/sencha-touch-bdd-part-1/") (comments nil "http://pivotallabs.com/sencha-touch-bdd-part-1/#comments") (pubDate nil "Thu, 18 Apr 2013 04:08:02 +0000") (dc:creator nil "Ken Mayer") (category nil "Labs") (category nil "bdd") (category nil "jasmine") (category nil "javascript") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18405") (description nil "<p>Sencha Touch BDD tl;dr A multi-part series of articles on how to test Sencha Touch applications. It uses Jasmine for unit testing and Siesta for integration testing. Part 1 &#8211; Getting Started In this article you will learn how to set up an application to Jasmine tests in your Opinionated is a good thing In my not-so-humble professional opinion, every modern web framework should provide a testing infrastructure with each newly generated application. I&#8217;m not concerned if it isn&#8217;t my preferred testing package. As long as there&#8217;s something. Testing is not an option, and the framework authors probably (hopefully?) test, so why not offer a serving suggestion for new projects? The worst that can happen is that you, the developer, disagree with the choice of framework. There&#8217;s a little extra bootstrap cost to replace one framework with another. That&#8217;s far less expensive than every new developer discovering a way to&#8230;</p><p>The post <a href=\"http://pivotallabs.com/sencha-touch-bdd-part-1/\">Sencha Touch BDD Part 1</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h1 id=\"senchatouchbdd\">Sencha Touch BDD</h1><h2 id=\"tldr\">tl;dr</h2><p>A multi-part series of articles on how to test Sencha Touch applications. It uses Jasmine for unit testing and Siesta for integration testing.</p><h2 id=\"part1--gettingstarted\">Part 1 &#8211; Getting Started</h2><p>In this article you will learn how to set up an application to Jasmine tests in your</p><h3 id=\"opinionatedisagoodthing\">Opinionated is a good thing</h3><p>In my not-so-humble professional opinion, every modern web framework should provide a testing infrastructure with each newly generated application. I&#8217;m not concerned if it isn&#8217;t my preferred testing package. As long as there&#8217;s <em>something</em>. Testing is not an option, and the framework authors probably (hopefully?) test, so why not offer a serving suggestion for new projects? The worst that can happen is that you, the developer, disagree with the choice of framework. There&#8217;s a little extra bootstrap cost to replace one framework with another. That&#8217;s far less expensive than every new developer discovering a way to test.</p><p>Sencha Touch 2.1 has a generator built into its <code>sencha</code> command line tool, but it does not create a test structure as part of the template. This article is the first in a series of discoveries about how to test Sencha Touch applications. I am not claiming that this is the one true way to test. This is not necessarily the <em>best</em> way, either. It is, however, something that works. It installs easily on my development laptop. It gets you to your first passing test quickly. It saves you the cost of exploring all of the options and making these discoveries for yourself. You have plenty of other things to worry about.</p><h3 id=\"butfirstyouneedawebserver\">But first, you need a web server</h3><p>Once you&#8217;ve installed Sencha Touch and Sencha Command (3.1.0.256 when I wrote this), and you&#8217;ve generated the template application, you&#8217;ll need to serve the pages locally. Most projects will have some sort of app server already running, but it&#8217;s not strictly necessary for testing. When I need to serve pages on my own, I prefer <a href=\"http://pow.cx\">pow</a>. It is a zero-configuration server that can host as many applications as you please. I also like the <a href=\"http://rubygems.org/gems/powder\">powder</a> ruby gem; it adds a nice command line interface to manage <code>pow</code>. If you are worried about adding a ruby dependency to your project, stop worrying. Sencha Touch uses the <a href=\"http://rubygems.org/gems/compass\">compass</a> ruby gem to generate <code>css</code> files; so you already have a ruby dependency.</p><p><code>pow</code> looks for a <a href=\"http://rack.github.io/\">rack</a> app, but in my sample app, I don&#8217;t have one. <code>pow</code> also looks for a directory named <code>public</code> from which it will server static files. The simplest thing that works is to create a symlink named <code>public</code> that points to the root directory of the project.</p><pre><code class=\"sh\"># Generate a new ST app
$ cd &lt;touch toolkit directory&gt;
$ sencha generate app senchaBdd ~/workspace/sencha-bdd

# Set up pow/powder
$ cd ~/workspace/sencha-bdd
$ ln -s . public
$ powder up
$ powder link

# Test the server
$ open http://sencha-bdd.dev</code></pre><p>If all goes well, you should be able to open the application in any web browser at <a href=\"http://sencha-bdd.dev\">http://sencha-bdd.dev</a></p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.50.50-AM-263x300.png?48a6bc\" alt=\"Sencha Touch application\" width=\"263\" height=\"300\" class=\"aligncenter size-medium wp-image-18407\" /></p><figcaption>Running sample app</figcaption></figure><h3 id=\"createadirectorystructurethatmatchesyourapplications\">Create a directory structure that matches your application&#8217;s</h3><p>Your application&#8217;s directory structure should look something like this:</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Add a spec directory that mirrors the <code>app/</code> directory:</p><pre><code>├── spec
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
</code></pre><p>Right now, all of these directories are empty, but we will be adding to them soon.</p><h3 id=\"installjasmine\">Install Jasmine</h3><p>You can get the stand alone version from <a href=\"http://github.com/pivotal/jasmine\">http://github.com/pivotal/jasmine</a>. Install it at the in the spec directory. I include the version number, so I can experiment with different versions, but that&#8217;s a matter of taste.</p><pre><code>├── app
│   ├── controller
│   ├── model
│   ├── profile
│   ├── store
│   └── view
├── public -&gt; .
├── resources/
├── spec/
│   ├── controller
│   ├── jasmine-1.3.1
│   ├── model
│   ├── profile
│   ├── store
│   └── view
└── touch
</code></pre><p>In order to get Jasmine going, you need a special html file named, by convention, <code>SpecRunner</code>. Add it to spec/ as well. It looks like this:</p><script src=\"https://gist.github.com/5409685.js\"></script><noscript><pre><code class=\"language-html html\">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Jasmine Spec Runner&lt;/title&gt;

    &lt;link rel=&quot;shortcut icon&quot; type=&quot;image/png&quot; href=&quot;jasmine-1.3.1/jasmine_favicon.png&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jasmine-1.3.1/jasmine.css&quot;&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;jasmine-1.3.1/jasmine-html.js&quot;&gt;&lt;/script&gt;

    &lt;script src=&quot;http://code.jquery.com/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt;

    &lt;!-- include source files here... --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;../touch/sencha-touch-all-debug.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        Ext.Loader.setPath({
            'Ext':       '../touch/src',
            'SenchaBdd': '../app'
        });

        Ext.application({
            name: 'SenchaBdd',

            launch: function () {
                jasmine.getEnv().addReporter(new jasmine.HtmlReporter());
                jasmine.getEnv().execute();
            }
        });
    &lt;/script&gt;

    &lt;!-- include spec files here... --&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;support/SpecHelper.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;sanitySpec.js&quot;&gt;&lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;
&lt;div id=&quot;jasmine_content&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre></noscript><p>You will need to modify lines 18 and 22 with the name of your ST app (which can be found in <code>app.json</code> and <code>app.js</code>).</p><h3 id=\"writeonepassingtest\">Write one passing test</h3><p>Create a file, <code>spec/sanitySpec.js</code></p><pre><code class=\"js\">describe(&quot;Sanity&quot;, function() {
  it(&quot;succeeds&quot;, function() {
    expect(true).toEqual(true);
  });
});</code></pre><p>Now load the spec runner into a browser. In the case of this sample app, the url is <a href=\"http://sencha-bdd.dev/spec/SpecRunner.html\">http://sencha-bdd.dev/spec/SpecRunner.html</a></p><p>You should see the test results with one passing spec.</p><figure><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/Screen-Shot-2013-04-17-at-8.33.58-PM-300x238.png?48a6bc\" alt=\"Passing 1 spec\" width=\"300\" height=\"238\" class=\"aligncenter size-medium wp-image-18406\" /></p><figcaption>Passing jasmine spec</figcaption></figure><p>If you don&#8217;t see this, open up the browser&#8217;s developer console to look for clues.</p><h3 id=\"untilnexttime\">Until next time</h3><p>That&#8217;s it! You now have a complete JavaScript testing framework installed in your application. This is a good time to commit your changes. Celebrate in the glory of the green goodness. You&#8217;ve earned it. </p><p>Next time, I&#8217;ll show you how to actually test a view class.</p><p>The post <a href=\"http://pivotallabs.com/sencha-touch-bdd-part-1/\">Sencha Touch BDD Part 1</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/sencha-touch-bdd-part-1/feed/") (slash:comments nil "0"))) ("Single resource REST Rails routes" "<p>REST principles by default is a fantastic convention within Rails applications. The <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a> for how to route HTTP requests are comprehensive and give examples about <code>photo</code> resources within an application. If you’ve got <code>photo</code> and <code>tag</code> as first class resources of your application, Rails has you covered. But what if you are building an application with a focus on one type of resource, do you really want <code>/resource_type</code> as a prefix to all of your application paths? I certainly don’t and I’ll show you how to remove that without diverging from Rails core strenghts.</p><p>For better or worse, I’m always conscience of making sure applications I’m involved in have <a href=\"http://www.w3.org/Provider/Style/URI.html\">Cool URIs</a> and sometimes that does mean fighting the Rails conventions. However Rails routing is very flexible and can provide me with the application paths that make me happy.</p><p>Take Twitter as an example. Every user has their username as a top level path, so instead of having <code>/users/robb1e</code>, they simply have <code>/robb1e</code>. When dealing with an application where there is one core resource it can make a lot of sense to strip the resource prefix. This can be achieved through <code>scopes</code> in the routing configuration.</p><pre><code>Your::Application.routes.draw do
scope \":username\" do
get '', to: 'users#show'
end
end
</code></pre><p>Gives you routes which look like</p><pre><code>           GET  /:username(.:format)                users#show
</code></pre><p>If you wanted to see the followers and followees of that user, you have two options. Return to the default <code>resource</code> or use the <code>member</code> block. I’ll show you both.</p><pre><code>Your::Application.routes.draw do
scope \":username\" do
get '', to: 'users#show'
resource :following, only: [:show]
resource :followers, only: [:show]
end
end
</code></pre><p>This adds the routes</p><pre><code>following GET  /:username/following(.:format)      followings#show
followers GET  /:username/followers(.:format)      followers#show
</code></pre><p>Alternatively <code>member</code> can be used to achieve a similar result.</p><pre><code>Your::Application.routes.draw do
scope \":username\" do
get '', to: 'users#show'
get '/following', to: 'user#following'
get '/followers', to: 'user#followers'
end
end
</code></pre><p>This gives the paths</p><pre><code>          GET  /:username/following(.:format)      user#following
GET  /:username/followers(.:format)      user#followers
</code></pre><p>If you are trending into paths unknown, you always have the safety of tests to help you out. Both <a href=\"http://guides.rubyonrails.org/routing.html#testing-routes\">Rails</a> and <a href=\"https://github.com/rspec/rspec-rails#routing-specs\">RSpec</a> have ways to test your application routes.</p><p>One gotcha which using the default resource routing removes is clashing paths. If you decide to build an admin page and want to put that at <code>/admin</code>, that needs to be in the routes config before the scoped block and if a user has given themselves the name of <code>admin</code> then you may be in for some fun.</p><p>So the next time a need arises for an unconventional route, check the <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a>, it’s probably possible although almost always warants thinking about.</p><p>The post <a href=\"http://pivotallabs.com/single-resource-rest-rails-routes/\">Single resource REST Rails routes</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/single-resource-rest-rails-routes/" (20845 45631) old 6 nil nil ((title nil "Single resource REST Rails routes") (link nil "http://pivotallabs.com/single-resource-rest-rails-routes/") (comments nil "http://pivotallabs.com/single-resource-rest-rails-routes/#comments") (pubDate nil "Tue, 16 Apr 2013 20:19:11 +0000") (dc:creator nil "Robbie Clutton") (category nil "Labs") (category nil "ironblogger") (category nil "rails") (category nil "rest") (category nil "routing") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18250") (description nil "<p>REST principles by default is a fantastic convention within Rails applications. The documentation for how to route HTTP requests are comprehensive and give examples about photo resources within an application. If you&#8217;ve got photo and tag as first class resources of your application, Rails has you covered. But what if you are building an application with a focus on one type of resource, do you really want /resource_type as a prefix to all of your application paths? I certainly don&#8217;t and I&#8217;ll show you how to remove that without diverging from Rails core strenghts. For better or worse, I&#8217;m always conscience of making sure applications I&#8217;m involved in have Cool URIs and sometimes that does mean fighting the Rails conventions. However Rails routing is very flexible and can provide me with the application paths that make me happy. Take Twitter as an example. Every user has their username as a&#8230;</p><p>The post <a href=\"http://pivotallabs.com/single-resource-rest-rails-routes/\">Single resource REST Rails routes</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>REST principles by default is a fantastic convention within Rails applications. The <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a> for how to route HTTP requests are comprehensive and give examples about <code>photo</code> resources within an application. If you&#8217;ve got <code>photo</code> and <code>tag</code> as first class resources of your application, Rails has you covered. But what if you are building an application with a focus on one type of resource, do you really want <code>/resource_type</code> as a prefix to all of your application paths? I certainly don&#8217;t and I&#8217;ll show you how to remove that without diverging from Rails core strenghts.</p><p>For better or worse, I&#8217;m always conscience of making sure applications I&#8217;m involved in have <a href=\"http://www.w3.org/Provider/Style/URI.html\">Cool URIs</a> and sometimes that does mean fighting the Rails conventions. However Rails routing is very flexible and can provide me with the application paths that make me happy.</p><p>Take Twitter as an example. Every user has their username as a top level path, so instead of having <code>/users/robb1e</code>, they simply have <code>/robb1e</code>. When dealing with an application where there is one core resource it can make a lot of sense to strip the resource prefix. This can be achieved through <code>scopes</code> in the routing configuration.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
  end
end
</code></pre><p>Gives you routes which look like</p><pre><code>           GET  /:username(.:format)                users#show
</code></pre><p>If you wanted to see the followers and followees of that user, you have two options. Return to the default <code>resource</code> or use the <code>member</code> block. I&#8217;ll show you both.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
    resource :following, only: [:show]
    resource :followers, only: [:show]
  end
end
</code></pre><p>This adds the routes</p><pre><code>following GET  /:username/following(.:format)      followings#show
followers GET  /:username/followers(.:format)      followers#show
</code></pre><p>Alternatively <code>member</code> can be used to achieve a similar result.</p><pre><code>Your::Application.routes.draw do
  scope \":username\" do
    get '', to: 'users#show'
    get '/following', to: 'user#following'
    get '/followers', to: 'user#followers'
  end
end
</code></pre><p>This gives the paths</p><pre><code>          GET  /:username/following(.:format)      user#following
          GET  /:username/followers(.:format)      user#followers
</code></pre><p>If you are trending into paths unknown, you always have the safety of tests to help you out. Both <a href=\"http://guides.rubyonrails.org/routing.html#testing-routes\">Rails</a> and <a href=\"https://github.com/rspec/rspec-rails#routing-specs\">RSpec</a> have ways to test your application routes.</p><p>One gotcha which using the default resource routing removes is clashing paths. If you decide to build an admin page and want to put that at <code>/admin</code>, that needs to be in the routes config before the scoped block and if a user has given themselves the name of <code>admin</code> then you may be in for some fun.</p><p>So the next time a need arises for an unconventional route, check the <a href=\"http://guides.rubyonrails.org/routing.html\">documentation</a>, it&#8217;s probably possible although almost always warants thinking about.</p><p>The post <a href=\"http://pivotallabs.com/single-resource-rest-rails-routes/\">Single resource REST Rails routes</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/single-resource-rest-rails-routes/feed/") (slash:comments nil "0"))) ("Is this thing on?" "<h2>Interestings</h2><h3>Ruby method cache article</h3><p>James Golick wrote an interesting article on MRI's method cache and how difficult it is to write software that uses it effectively.</p><p><a href=\"http://jamesgolick.com/2013/4/14/mris-method-caches.html\">http://jamesgolick.com/2013/4/14/mris-method-caches.html</a></p><h3>Google Mirror: API for Google Glass</h3><p><a href=\"https://developers.google.com/glass/about\">https://developers.google.com/glass/about</a></p><h3>&quot;The Healthy Programmer&quot; book in Google Drive</h3><p>&quot;The Healthy Programmer&quot; by  Joe Kutner, same guy whose video was watched for Monday's lunch video.  Full of amusing chapter titles.</p><h2>Events</h2><h3>Tuesday: Pair Exchange</h3><p>The post <a href=\"http://pivotallabs.com/is-this-thing-on/\">Is this thing on?</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/is-this-thing-on/" (20845 36967) old 7 nil nil ((title nil "Is this thing on?") (link nil "http://pivotallabs.com/is-this-thing-on/") (comments nil "http://pivotallabs.com/is-this-thing-on/#comments") (pubDate nil "Tue, 16 Apr 2013 17:54:47 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18403") (description nil "<p>Interestings Ruby method cache article James Golick wrote an interesting article on MRI&#039;s method cache and how difficult it is to write software that uses it effectively. http://jamesgolick.com/2013/4/14/mris-method-caches.html Google Mirror: API for Google Glass https://developers.google.com/glass/about &#34;The Healthy Programmer&#34; book in Google Drive &#34;The Healthy Programmer&#34; by Joe Kutner, same guy whose video was watched for Monday&#039;s lunch video. Full of amusing chapter titles. Events Tuesday: Pair Exchange</p><p>The post <a href=\"http://pivotallabs.com/is-this-thing-on/\">Is this thing on?</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>Ruby method cache article</h3><p>James Golick wrote an interesting article on MRI&#039;s method cache and how difficult it is to write software that uses it effectively.</p><p><a href=\"http://jamesgolick.com/2013/4/14/mris-method-caches.html\">http://jamesgolick.com/2013/4/14/mris-method-caches.html</a></p><h3>Google Mirror: API for Google Glass</h3><p><a href=\"https://developers.google.com/glass/about\">https://developers.google.com/glass/about</a></p><h3>&quot;The Healthy Programmer&quot; book in Google Drive</h3><p>&quot;The Healthy Programmer&quot; by  Joe Kutner, same guy whose video was watched for Monday&#039;s lunch video.  Full of amusing chapter titles.</p><h2>Events</h2><h3>Tuesday: Pair Exchange</h3><p>The post <a href=\"http://pivotallabs.com/is-this-thing-on/\">Is this thing on?</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/is-this-thing-on/feed/") (slash:comments nil "0"))) ("See Your Work Product in Its Natural Habitat" "<p>I took a day off of work recently, and learned more about what I was working on than in several months of coding.</p><p>My current Pivotal client project is <a title=\"Case Commons, LLC\" href=\"http://casecommons.org\">CaseCommons</a>, using web technology to modernize child welfare and foster care so social workers can spend more time with kids and families.  We’d just completed a large set of work about court hearings, and now I was attending one. I went to see my friends finalize their adoption of two little boys they’ve been fostering, with their wedding to immediately follow.</p><p>Everything I’d done and learned paled compared to seeing the judge and social worker speak about how the kids’ lives improved in my friends’ care. One of the boys was in a wheelchair a year ago, and now here they were joyously laughing and running in circles around their new parents as the adoption was completed and wedding vows were spoken.</p><p>I talked to the social worker at length and learned things I hadn’t yet come across, like how most adoptions are with extended family members, my friends were the exception. I also saw the clerk entering the details of the court hearing into their computer system, which looked like it hadn’t been updated since the 1990s but it still was blazing fast. They’re not using our product yet, which is much more streamlined. But they’ll expect it to be equally responsive.</p><p>Now, whenever I’m doing a feature or fix for social workers, I see Tania’s face as she hugs the children and speaks with my friends about the kids. When I work on court hearings, I see the clerk navigating so quickly to enter in all the many details.</p><p>I won’t always get to work on helping people help kids.  But when I move on to my next Pivotal project I can’t wait to set aside some time much earlier on, to look users in the eye and truly understand how what we’re building will make their lives better.</p><p>The post <a href=\"http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/\">See Your Work Product in Its Natural Habitat</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/" (20844 51556) old 8 nil nil ((title nil "See Your Work Product in Its Natural Habitat") (link nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/") (comments nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/#comments") (pubDate nil "Tue, 16 Apr 2013 03:45:40 +0000") (dc:creator nil "Trace Wax") (category nil "Labs") (category nil "ironblogger") (category nil "lean") (category nil "users") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18393") (description nil "<p>I took a day off of work recently, and learned more about what I was working on than in several months of coding. My current Pivotal client project is CaseCommons, using web technology to modernize child welfare and foster care so social workers can spend more time with kids and families.  We&#8217;d just completed a large set of work about court hearings, and now I was attending one. I went to see my friends finalize their adoption of two little boys they&#8217;ve been fostering, with their wedding to immediately follow. Everything I&#8217;d done and learned paled compared to seeing the judge and social worker speak about how the kids&#8217; lives improved in my friends&#8217; care. One of the boys was in a wheelchair a year ago, and now here they were joyously laughing and running in circles around their new parents as the adoption was completed and wedding vows were&#8230;</p><p>The post <a href=\"http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/\">See Your Work Product in Its Natural Habitat</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>I took a day off of work recently, and learned more about what I was working on than in several months of coding.</p><p>My current Pivotal client project is <a title=\"Case Commons, LLC\" href=\"http://casecommons.org\">CaseCommons</a>, using web technology to modernize child welfare and foster care so social workers can spend more time with kids and families.  We&#8217;d just completed a large set of work about court hearings, and now I was attending one. I went to see my friends finalize their adoption of two little boys they&#8217;ve been fostering, with their wedding to immediately follow.</p><p>Everything I&#8217;d done and learned paled compared to seeing the judge and social worker speak about how the kids&#8217; lives improved in my friends&#8217; care. One of the boys was in a wheelchair a year ago, and now here they were joyously laughing and running in circles around their new parents as the adoption was completed and wedding vows were spoken.</p><p>I talked to the social worker at length and learned things I hadn&#8217;t yet come across, like how most adoptions are with extended family members, my friends were the exception. I also saw the clerk entering the details of the court hearing into their computer system, which looked like it hadn&#8217;t been updated since the 1990s but it still was blazing fast. They&#8217;re not using our product yet, which is much more streamlined. But they&#8217;ll expect it to be equally responsive.</p><p>Now, whenever I&#8217;m doing a feature or fix for social workers, I see Tania&#8217;s face as she hugs the children and speaks with my friends about the kids. When I work on court hearings, I see the clerk navigating so quickly to enter in all the many details.</p><p>I won&#8217;t always get to work on helping people help kids.  But when I move on to my next Pivotal project I can&#8217;t wait to set aside some time much earlier on, to look users in the eye and truly understand how what we&#8217;re building will make their lives better.</p><p>The post <a href=\"http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/\">See Your Work Product in Its Natural Habitat</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/see-your-work-product-in-its-natural-habitat/feed/") (slash:comments nil "0"))) ("Project Monitor, Product Management, Post Meridian, and Other PM Acronyms" "<h1 dir=\"ltr\">Semaphore</h1><p dir=\"ltr\">In agile software development, an information radiator is a (normally large) physical display placed in a prominent location in an office, where passers-by can see it, and which presents an up-to-date summary of the status of a software product or products.[1]</p><p>The best way we’ve found to keep the team informed of the build status is to display it high on a wall near the team as a big red or green indicator. When there’s only a single project going on, we’ve found that a screen that’s simply all red or all green is effective. At Pivotal Labs, though, we have many projects going on at once. Rather than putting numerous TVs up on the wall, we’ve created an application that aggregates multiple projects onto one page.</p><h1>Tddium</h1><p dir=\"ltr\">Edward <a href=\"http://pivotallabs.com/ci-dot-pivotal-labs-dot-com/\">announced this four years ago</a> as <a href=\"http://ci.pivotallabs.com/\">http://ci.pivotallabs.com</a>.  A year later, <a href=\"http://pivotallabs.com/pivotal-pulse/\">we open sourced</a> this as Pivotal Pulse and then <a href=\"http://pivotallabs.com/cimonitor-n-e-pulse-/\">renamed it</a> CIMonitor.  That lasted a few years, until we integration Pivotal Tracker details, which <a href=\"https://github.com/pivotal/projectmonitor/commit/4231f8408e620264279404fd499df23e0ef40afe\">prompted a rename</a> to Project Monitor last year.</p><h1 dir=\"ltr\">Cruise Control</h1><p dir=\"ltr\">Fast forward to me joining Pivotal Labs in November.  Project Monitor was on the walls of our office, but the radiator had a leak.  Our internal Project Monitor instance was running on a server in our Director of IT’s office.  During Sandy, every monitor in SF timed out trying to connect to our nyc-based ci servers.  We had serious scalability issues that affected polling, the delayed job queue was unreliable, and our codebase needed a code debt payment plan.  There had been a few dedicated sprints to triage open wounds, but a long running branch for an eventmachine based polling refactor had lingered as a pull request from several months ago.</p><p>This is pretty common in older codebases, especially so for internal projects that don’t get any attention unless they’re on fire.  Even worse, the backlog had suffered from being on autopilot for too long.  I’ve seen this happen in many products that have been in the market for a while — they’ve checked the box on value proposition and moved onto “wouldn’t it be cool if” type functionality.  I was informed that I’d take the reigns as Product Owner and we had a mini-inception on my first day.</p><h1>Team City</h1><p dir=\"ltr\">Beyond ramping myself up on a new codebase, I struggled to sort out who Project Monitor’s stakeholders were and what its remit truly was.  Because consumption is inherently passive, I couldn’t rely on metrics or many of the other tools in my belt.  It was working, but was it solving problems?</p><p>Luckily, two key events helped me crystallize a thesis for what PM should be.  First, during a trip to our SF office, I realized how broken support was for our newest CI, Travis.  The <a href=\"http://cloudfoundry.org/\">CloudFoundry</a> team, which had just moved in-house, was growing frustrated with confusion over which of their (40+?) builds was actually broken vs. broken on a branch vs. just not broken.  With no beach in sight, I carved out some time to push a fix and heard a collective sigh of relief from the CF team.</p><p>Shortly after, a hiring surge paired with a project ramp down created a large team of Pivots ready, willing, and able to tackle our backlog.  My colleague, <a href=\"http://pivotallabs.com/author/jmukai/\">Johnny Mukai</a>, sent on a reflection on how things were going and his concerns for the product’s direction:</p><blockquote><p>It’s felt great to dig into Project Monitor and take care of some traditionally thorny pieces of the app, merge in some long running branches, and revel in the camaraderie of being on a large team again.</p><p>As we plow through open issues and Project Monitor transitions from ‘please fix this’ to a ‘what new features shall we implement’ kind of project, I have some reservations.  In my experience, Pivots use Project Monitor for one thing and one thing only and they only want it to do one thing and it had better do that one thing well. (One. Thing.)</p><p>The build goes red, instantly I understand that something has run afoul. On a board of builds where only two things happen, it’s obvious that I need to immediately address this. On a busy board with a million things going on — some of them open to subjective interpretation —  it’s easy for me to just glaze over. If it were important, there would obviously be a giant red notice for me, somewhere.</p></blockquote><h1 dir=\"ltr\"></h1><h1 dir=\"ltr\">Closer (by Travis) [2]</h1><p dir=\"ltr\">Click.  At that moment it was clear to me that Project Monitor is a dashboard for engineers and product owners building a product.  Not a devops board, not a metrics showcase, just an indicator that someone needs to act.  Not everyone agrees, but being opinionated is the only way to ensure that a product stays relevant.</p><p dir=\"ltr\">We just spent time reimagining the Tracker portion of our status screen, and I’m proud of all the collaboration and feedback the company gave as we broke down the problem, released and refined.[3]  I saw Project Monitor running in a colleague’s office this weekend, and even fielded a support question from a Windows user in Finland!  Stepping into a new product as PM is hard; if you find yourself in that position I encourage you to work on a clear thesis that guides your efforts.</p><p><b><b>Project Monitor today.  See our <a href=\"https://github.com/pivotal/projectmonitor/\">repo</a> for more information on getting started.<br /><img alt=\" \" src=\"https://lh5.googleusercontent.com/ZU-k6eM9hNQcZOWqxYo98L1wKSh_NlkMkB-Xy1VG4PnqnZxFtlRqDoZbKtlmkvAocGe0j-1m28CvcrNX8LFcVsblGOIiJ4Od_5KuJA13vL72han-OOw0a1ULiA\" width=\"464px;\" height=\"263px;\" /></b></b></p><p dir=\"ltr\">[1] <a href=\"http://en.wikipedia.org/wiki/Agile_software_development\">http://en.wikipedia.org/wiki/Agile_software_development</a></p><p dir=\"ltr\">[2] <a href=\"http://open.spotify.com/track/5JPWmf7ZcJTSKOzzyGyPUI\">Travis – Closer</a> (Spotify)</p><p dir=\"ltr\">[3] <a href=\"http://www.webgrrls.com/blog/2011/08/03/step-by-step-lean-user-experience/\">Think, Make, Check!</a></p><p>The post <a href=\"http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/\">Project Monitor, Product Management, Post Meridian, and Other PM Acronyms</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/" (20844 49221) old 9 nil nil ((title nil "Project Monitor, Product Management, Post Meridian, and Other PM Acronyms") (link nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/") (comments nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/#comments") (pubDate nil "Tue, 16 Apr 2013 03:06:45 +0000") (dc:creator nil "Graham Siener") (category nil "Labs") (category nil "information radiator") (category nil "ironblogger") (category nil "product management") (category nil "projectmonitor") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18382") (description nil "<p>Semaphore In agile software development, an information radiator is a (normally large) physical display placed in a prominent location in an office, where passers-by can see it, and which presents an up-to-date summary of the status of a software product or products.[1] The best way we’ve found to keep the team informed of the build status is to display it high on a wall near the team as a big red or green indicator. When there’s only a single project going on, we’ve found that a screen that’s simply all red or all green is effective. At Pivotal Labs, though, we have many projects going on at once. Rather than putting numerous TVs up on the wall, we’ve created an application that aggregates multiple projects onto one page. Tddium Edward announced this four years ago as http://ci.pivotallabs.com.  A year later, we open sourced this as Pivotal Pulse and then renamed&#8230;</p><p>The post <a href=\"http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/\">Project Monitor, Product Management, Post Meridian, and Other PM Acronyms</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h1 dir=\"ltr\">Semaphore</h1><p dir=\"ltr\">In agile software development, an information radiator is a (normally large) physical display placed in a prominent location in an office, where passers-by can see it, and which presents an up-to-date summary of the status of a software product or products.[1]</p><p>The best way we’ve found to keep the team informed of the build status is to display it high on a wall near the team as a big red or green indicator. When there’s only a single project going on, we’ve found that a screen that’s simply all red or all green is effective. At Pivotal Labs, though, we have many projects going on at once. Rather than putting numerous TVs up on the wall, we’ve created an application that aggregates multiple projects onto one page.</p><h1>Tddium</h1><p dir=\"ltr\">Edward <a href=\"http://pivotallabs.com/ci-dot-pivotal-labs-dot-com/\">announced this four years ago</a> as <a href=\"http://ci.pivotallabs.com/\">http://ci.pivotallabs.com</a>.  A year later, <a href=\"http://pivotallabs.com/pivotal-pulse/\">we open sourced</a> this as Pivotal Pulse and then <a href=\"http://pivotallabs.com/cimonitor-n-e-pulse-/\">renamed it</a> CIMonitor.  That lasted a few years, until we integration Pivotal Tracker details, which <a href=\"https://github.com/pivotal/projectmonitor/commit/4231f8408e620264279404fd499df23e0ef40afe\">prompted a rename</a> to Project Monitor last year.</p><h1 dir=\"ltr\">Cruise Control</h1><p dir=\"ltr\">Fast forward to me joining Pivotal Labs in November.  Project Monitor was on the walls of our office, but the radiator had a leak.  Our internal Project Monitor instance was running on a server in our Director of IT’s office.  During Sandy, every monitor in SF timed out trying to connect to our nyc-based ci servers.  We had serious scalability issues that affected polling, the delayed job queue was unreliable, and our codebase needed a code debt payment plan.  There had been a few dedicated sprints to triage open wounds, but a long running branch for an eventmachine based polling refactor had lingered as a pull request from several months ago.</p><p>This is pretty common in older codebases, especially so for internal projects that don’t get any attention unless they’re on fire.  Even worse, the backlog had suffered from being on autopilot for too long.  I’ve seen this happen in many products that have been in the market for a while &#8212; they’ve checked the box on value proposition and moved onto “wouldn’t it be cool if” type functionality.  I was informed that I’d take the reigns as Product Owner and we had a mini-inception on my first day.</p><h1>Team City</h1><p dir=\"ltr\">Beyond ramping myself up on a new codebase, I struggled to sort out who Project Monitor’s stakeholders were and what its remit truly was.  Because consumption is inherently passive, I couldn’t rely on metrics or many of the other tools in my belt.  It was working, but was it solving problems?</p><p>Luckily, two key events helped me crystallize a thesis for what PM should be.  First, during a trip to our SF office, I realized how broken support was for our newest CI, Travis.  The <a href=\"http://cloudfoundry.org/\">CloudFoundry</a> team, which had just moved in-house, was growing frustrated with confusion over which of their (40+?) builds was actually broken vs. broken on a branch vs. just not broken.  With no beach in sight, I carved out some time to push a fix and heard a collective sigh of relief from the CF team.</p><p>Shortly after, a hiring surge paired with a project ramp down created a large team of Pivots ready, willing, and able to tackle our backlog.  My colleague, <a href=\"http://pivotallabs.com/author/jmukai/\">Johnny Mukai</a>, sent on a reflection on how things were going and his concerns for the product’s direction:</p><blockquote><p>It&#8217;s felt great to dig into Project Monitor and take care of some traditionally thorny pieces of the app, merge in some long running branches, and revel in the camaraderie of being on a large team again.</p><p>As we plow through open issues and Project Monitor transitions from &#8216;please fix this&#8217; to a &#8216;what new features shall we implement&#8217; kind of project, I have some reservations.  In my experience, Pivots use Project Monitor for one thing and one thing only and they only want it to do one thing and it had better do that one thing well. (One. Thing.)</p><p>The build goes red, instantly I understand that something has run afoul. On a board of builds where only two things happen, it&#8217;s obvious that I need to immediately address this. On a busy board with a million things going on &#8212; some of them open to subjective interpretation &#8212;  it&#8217;s easy for me to just glaze over. If it were important, there would obviously be a giant red notice for me, somewhere.</p></blockquote><h1 dir=\"ltr\"></h1><h1 dir=\"ltr\">Closer (by Travis) [2]</h1><p dir=\"ltr\">Click.  At that moment it was clear to me that Project Monitor is a dashboard for engineers and product owners building a product.  Not a devops board, not a metrics showcase, just an indicator that someone needs to act.  Not everyone agrees, but being opinionated is the only way to ensure that a product stays relevant.</p><p dir=\"ltr\">We just spent time reimagining the Tracker portion of our status screen, and I’m proud of all the collaboration and feedback the company gave as we broke down the problem, released and refined.[3]  I saw Project Monitor running in a colleague’s office this weekend, and even fielded a support question from a Windows user in Finland!  Stepping into a new product as PM is hard; if you find yourself in that position I encourage you to work on a clear thesis that guides your efforts.</p><p><b><b>Project Monitor today.  See our <a href=\"https://github.com/pivotal/projectmonitor/\">repo</a> for more information on getting started.<br /><img alt=\" \" src=\"https://lh5.googleusercontent.com/ZU-k6eM9hNQcZOWqxYo98L1wKSh_NlkMkB-Xy1VG4PnqnZxFtlRqDoZbKtlmkvAocGe0j-1m28CvcrNX8LFcVsblGOIiJ4Od_5KuJA13vL72han-OOw0a1ULiA\" width=\"464px;\" height=\"263px;\" /></b></b></p><p dir=\"ltr\">[1] <a href=\"http://en.wikipedia.org/wiki/Agile_software_development\">http://en.wikipedia.org/wiki/Agile_software_development</a></p><p dir=\"ltr\">[2] <a href=\"http://open.spotify.com/track/5JPWmf7ZcJTSKOzzyGyPUI\">Travis – Closer</a> (Spotify)</p><p dir=\"ltr\">[3] <a href=\"http://www.webgrrls.com/blog/2011/08/03/step-by-step-lean-user-experience/\">Think, Make, Check!</a></p><p>The post <a href=\"http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/\">Project Monitor, Product Management, Post Meridian, and Other PM Acronyms</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/project-monitor-product-management-post-meridian-and-other-pm-acronyms/feed/") (slash:comments nil "0"))) ("What’s (not) in a Name" "<p>I solve design problems. Sometimes I use hi-res mockups, sometimes I use wireframes. I always use empathy. I always strive to understand the user and design against their needs.</p><p>What am I? What should I call myself?</p><p>A User Interface Designer? Maybe a User Experience Designer? No, an Information Architect! A Human Factors Engineer? Is there a meaningful difference between these titles? What should we call themselves? Nanas and Bubbes kvell over doctors and lawyers; why don’t our parents and grandparents know what we do for a living? Why don’t we know what our name is?</p><p>A few years ago at the <a href=\"http://ideaconference.org/2007/\">Idea Conference</a>, I heard an answer that was so good I’ve been quoting it ever since (and it’s come up even more now that the words “agile” and “lean” appear so frequently). It was a two-day conference, and the keynote speaker got sick and was unable to close the conference on the final day. Instead, the organizers asked all the speakers to come up and do a roundtable Q&amp;A with the audience. Attendees lined up at the microphone, and the first question rang out:</p><blockquote><p>What should we call ourselves? User Interface Designers? User Experience? Information Architects? Who are we?!</p></blockquote><p>This was a plea to our elders and wisers to shed some light on our very identity as a community. Each and every one of them—designers, speakers, luminaries—froze in panic. All but one.</p><p>The outsider stood up. <a href=\"http://en.wikipedia.org/wiki/Michael_Wesch\">Michael Wesch</a> (of “<a href=\"http://www.youtube.com/watch?v=NLlGopyXT_g\">The Machines are Us/ing Us</a>” fame) grabbed the mic: “Let me take this one.” He went on to say:</p><blockquote><p>I’m not a designer, but as an anthropologist, I can give you perspective on your community. I don’t know whether ‘UXer’ or ‘UI Designer’ is a better designation, but I can tell you this: as long as there’s debate over what to call yourselves, your very identity, your community is vibrant. The moment you agree on your name, your frozen and a known quantity—and ready to be commodified.</p></blockquote><p>Every time someone asks me “what should we call ourselves?” I tell that story. I love being part of a community that is vibrant. I embrace the questions and challenges and learnings that keep us, for now, impervious to commodification. And I still hope I’ll figure out a way to explain to my grandmother what exactly it is that I do all day.</p><p><iframe src=\"http://www.youtube.com/embed/NLlGopyXT_g\" height=\"315\" width=\"420\" allowfullscreen=\" \" frameborder=\"0\"></iframe></p><p>The post <a href=\"http://pivotallabs.com/not-in-a-name/\">What’s (not) in a Name</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/not-in-a-name/" (20844 44733) old 10 nil nil ((title nil "What’s (not) in a Name") (link nil "http://pivotallabs.com/not-in-a-name/") (comments nil "http://pivotallabs.com/not-in-a-name/#comments") (pubDate nil "Tue, 16 Apr 2013 01:51:57 +0000") (dc:creator nil "Jonathan Berger") (category nil "Labs") (category nil "design") (category nil "ironblogger") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18383") (description nil "<p>I solve design problems. Sometimes I use hi-res mockups, sometimes I use wireframes. I always use empathy. I always strive to understand the user and design against their needs. What am I? What should I call myself? A User Interface Designer? Maybe a User Experience Designer? No, an Information Architect! A Human Factors Engineer? Is there a meaningful difference between these titles? What should we call themselves? Nanas and Bubbes kvell over doctors and lawyers; why don’t our parents and grandparents know what we do for a living? Why don’t we know what our name is? A few years ago at the Idea Conference, I heard an answer that was so good I’ve been quoting it ever since (and it&#8217;s come up even more now that the words &#8220;agile&#8221; and &#8220;lean&#8221; appear so frequently). It was a two-day conference, and the keynote speaker got sick and was unable to close&#8230;</p><p>The post <a href=\"http://pivotallabs.com/not-in-a-name/\">What&#8217;s (not) in a Name</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>I solve design problems. Sometimes I use hi-res mockups, sometimes I use wireframes. I always use empathy. I always strive to understand the user and design against their needs.</p><p>What am I? What should I call myself?</p><p>A User Interface Designer? Maybe a User Experience Designer? No, an Information Architect! A Human Factors Engineer? Is there a meaningful difference between these titles? What should we call themselves? Nanas and Bubbes kvell over doctors and lawyers; why don’t our parents and grandparents know what we do for a living? Why don’t we know what our name is?</p><p>A few years ago at the <a href=\"http://ideaconference.org/2007/\">Idea Conference</a>, I heard an answer that was so good I’ve been quoting it ever since (and it&#8217;s come up even more now that the words &#8220;agile&#8221; and &#8220;lean&#8221; appear so frequently). It was a two-day conference, and the keynote speaker got sick and was unable to close the conference on the final day. Instead, the organizers asked all the speakers to come up and do a roundtable Q&amp;A with the audience. Attendees lined up at the microphone, and the first question rang out:</p><blockquote><p>What should we call ourselves? User Interface Designers? User Experience? Information Architects? Who are we?!</p></blockquote><p>This was a plea to our elders and wisers to shed some light on our very identity as a community. Each and every one of them—designers, speakers, luminaries—froze in panic. All but one.</p><p>The outsider stood up. <a href=\"http://en.wikipedia.org/wiki/Michael_Wesch\">Michael Wesch</a> (of “<a href=\"http://www.youtube.com/watch?v=NLlGopyXT_g\">The Machines are Us/ing Us</a>” fame) grabbed the mic: “Let me take this one.” He went on to say:</p><blockquote><p>I’m not a designer, but as an anthropologist, I can give you perspective on your community. I don’t know whether ‘UXer’ or ‘UI Designer’ is a better designation, but I can tell you this: as long as there’s debate over what to call yourselves, your very identity, your community is vibrant. The moment you agree on your name, your frozen and a known quantity—and ready to be commodified.</p></blockquote><p>Every time someone asks me “what should we call ourselves?” I tell that story. I love being part of a community that is vibrant. I embrace the questions and challenges and learnings that keep us, for now, impervious to commodification. And I still hope I’ll figure out a way to explain to my grandmother what exactly it is that I do all day.</p><p><iframe src=\"http://www.youtube.com/embed/NLlGopyXT_g\" height=\"315\" width=\"420\" allowfullscreen=\" \" frameborder=\"0\"></iframe></p><p>The post <a href=\"http://pivotallabs.com/not-in-a-name/\">What&#8217;s (not) in a Name</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/not-in-a-name/feed/") (slash:comments nil "0"))) ("UTC FTW" "<h2>Interestings</h2><h3>Date.yesterday is a lie</h3><p>Rails provides a handy 'Date.yesterday' method. This effectively uses 'Time.zone.today' to calculate yesterday as per the configured timezone.</p><p>Ruby's 'Date.today' method uses the system's timezone via a call to localtime(). Therefore, if your Rails app is configured in UTC and you live on the West Coast, tests that assert that 'yesterday &lt; today' will start failing at around 5pm.</p><p>The post <a href=\"http://pivotallabs.com/utc-ftw/\">UTC FTW</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/utc-ftw/" (20850 7854) old 2 nil nil ((title nil "UTC FTW") (link nil "http://pivotallabs.com/utc-ftw/") (comments nil "http://pivotallabs.com/utc-ftw/#comments") (pubDate nil "Sat, 20 Apr 2013 04:50:54 +0000") (dc:creator nil "whiteboard") (category nil "Standup") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18423") (description nil "<p>Interestings Date.yesterday is a lie Rails provides a handy &#039;Date.yesterday&#039; method. This effectively uses &#039;Time.zone.today&#039; to calculate yesterday as per the configured timezone. Ruby&#039;s &#039;Date.today&#039; method uses the system&#039;s timezone via a call to localtime(). Therefore, if your Rails app is configured in UTC and you live on the West Coast, tests that assert that &#039;yesterday &#60; today&#039; will start failing at around 5pm.</p><p>The post <a href=\"http://pivotallabs.com/utc-ftw/\">UTC FTW</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<h2>Interestings</h2><h3>Date.yesterday is a lie</h3><p>Rails provides a handy &#039;Date.yesterday&#039; method. This effectively uses &#039;Time.zone.today&#039; to calculate yesterday as per the configured timezone.</p><p>Ruby&#039;s &#039;Date.today&#039; method uses the system&#039;s timezone via a call to localtime(). Therefore, if your Rails app is configured in UTC and you live on the West Coast, tests that assert that &#039;yesterday &lt; today&#039; will start failing at around 5pm.</p><p>The post <a href=\"http://pivotallabs.com/utc-ftw/\">UTC FTW</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/utc-ftw/feed/") (slash:comments nil "0"))) ("Searching Code with RubyMine’s Usage Search" "<p>
When browsing a codebase, you often want to view the definition of a particular class, method, or variable.  However, sometimes you want to do the reverse; you want to see where a particular class, method, or variable is used. Typically this involves using your editor’s text search, or a command line tool, such as <code>grep</code> or <code>ack</code>. Unfortunately, text searches may return false positives, such as log file data, or similarly named constructs. The problem is that you want to search code <em>not</em> text.
</p><p>
RubyMine has text search, but it also includes a powerful, code-based usage search. Usage search is smarter than text search, because RubyMine is aware of code constructs such as classes, methods, and variables.  This results in a more accurate search; allowing you to quickly view and navigate actual usages. In this post, we’ll explore RubyMine’s usage search on <a href=\"http://www.jetbrains.com/ruby/docs/RubyMine_ReferenceCard_Mac.pdf\">OS X</a>.
</p><h2>Find Usages</h2><p>
To find where a particular class, method, variable (instance or local), or parameter is used, place your cursor on it, and press <code>alt/option + F7</code>. Results will be displayed in the Find tool window.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/find-usages.png?48a6bc\" alt=\"find usages\" /></p><p><code>command + alt/option + Up/Down</code> navigates the results. Use <code>F4</code> to jump to the source code of a particular usage.
</p><p>
Recent usage search results can be viewed again with <code>command + E</code>.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/recent-usages.png?48a6bc\" alt=\"recent usages\" /></p><h2>Find Usages in File</h2><p>
By default, find usages is scoped to the entire project. To scope it to the current file, use <code>command + F7</code>. <code>command + G</code> and <code>command + shift + G</code> navigate the results.
</p><h2>Show Usages</h2><p><code>command + alt/option + F7</code> can be used to show usages inline. Instead of displaying usages in the Find tool window, they appear in a pop-up window.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/show-usages.png?48a6bc\" alt=\"show usages\" /></p><h2>Searching Code</h2><p>
RubyMine’s usage search demonstrates an advantage an IDE has over a text editor.  By being aware of code constructs, such as classes, methods, and variables, IDEs can offer powerful tools that allow you to quickly <em>and</em> accurately explore a codebase.</p><p>The post <a href=\"http://pivotallabs.com/searching-code-with-rubymines-usage-search/\">Searching Code with RubyMine’s Usage Search</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>" "http://pivotallabs.com/searching-code-with-rubymines-usage-search/" (20852 2672) new 1 nil nil ((title nil "Searching Code with RubyMine’s Usage Search") (link nil "http://pivotallabs.com/searching-code-with-rubymines-usage-search/") (comments nil "http://pivotallabs.com/searching-code-with-rubymines-usage-search/#comments") (pubDate nil "Sun, 21 Apr 2013 15:49:04 +0000") (dc:creator nil "Jared Carroll") (category nil "Labs") (category nil "keyboard") (category nil "mouse-free development") (category nil "productivity") (category nil "rubymine") (guid ((isPermaLink . "false")) "http://pivotallabs.com/?p=18426") (description nil "<p>When browsing a codebase, you often want to view the definition of a particular class, method, or variable. However, sometimes you want to do the reverse; you want to see where a particular class, method, or variable is used. Typically this involves using your editor&#8217;s text search, or a command line tool, such as grep or ack. Unfortunately, text searches may return false positives, such as log file data, or similarly named constructs. The problem is that you want to search code not text. RubyMine has text search, but it also includes a powerful, code-based usage search. Usage search is smarter than text search, because RubyMine is aware of code constructs such as classes, methods, and variables. This results in a more accurate search; allowing you to quickly view and navigate actual usages. In this post, we&#8217;ll explore RubyMine&#8217;s usage search on OS X. Find Usages To find where a&#8230;</p><p>The post <a href=\"http://pivotallabs.com/searching-code-with-rubymines-usage-search/\">Searching Code with RubyMine&#8217;s Usage Search</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (content:encoded nil "<p>
When browsing a codebase, you often want to view the definition of a particular class, method, or variable.  However, sometimes you want to do the reverse; you want to see where a particular class, method, or variable is used. Typically this involves using your editor&#8217;s text search, or a command line tool, such as <code>grep</code> or <code>ack</code>. Unfortunately, text searches may return false positives, such as log file data, or similarly named constructs. The problem is that you want to search code <em>not</em> text.
</p><p>
RubyMine has text search, but it also includes a powerful, code-based usage search. Usage search is smarter than text search, because RubyMine is aware of code constructs such as classes, methods, and variables.  This results in a more accurate search; allowing you to quickly view and navigate actual usages. In this post, we&#8217;ll explore RubyMine&#8217;s usage search on <a href=\"http://www.jetbrains.com/ruby/docs/RubyMine_ReferenceCard_Mac.pdf\">OS X</a>.
</p><h2>Find Usages</h2><p>
To find where a particular class, method, variable (instance or local), or parameter is used, place your cursor on it, and press <code>alt/option + F7</code>. Results will be displayed in the Find tool window.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/find-usages.png?48a6bc\" alt=\"find usages\" /></p><p><code>command + alt/option + Up/Down</code> navigates the results. Use <code>F4</code> to jump to the source code of a particular usage.
</p><p>
Recent usage search results can be viewed again with <code>command + E</code>.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/recent-usages.png?48a6bc\" alt=\"recent usages\" /></p><h2>Find Usages in File</h2><p>
By default, find usages is scoped to the entire project. To scope it to the current file, use <code>command + F7</code>. <code>command + G</code> and <code>command + shift + G</code> navigate the results.
</p><h2>Show Usages</h2><p><code>command + alt/option + F7</code> can be used to show usages inline. Instead of displaying usages in the Find tool window, they appear in a pop-up window.
</p><p><img src=\"http://pivotallabs.com/wordpress/wp-content/uploads/2013/04/show-usages.png?48a6bc\" alt=\"show usages\" /></p><h2>Searching Code</h2><p>
RubyMine&#8217;s usage search demonstrates an advantage an IDE has over a text editor.  By being aware of code constructs, such as classes, methods, and variables, IDEs can offer powerful tools that allow you to quickly <em>and</em> accurately explore a codebase.</p><p>The post <a href=\"http://pivotallabs.com/searching-code-with-rubymines-usage-search/\">Searching Code with RubyMine&#8217;s Usage Search</a> appeared first on <a href=\"http://pivotallabs.com\">Pivotal Labs</a>.</p>") (wfw:commentRss nil "http://pivotallabs.com/searching-code-with-rubymines-usage-search/feed/") (slash:comments nil "0"))))