;; -*- coding: utf-8 -*-
(("Planeta Plone.es" nil nil (20849 32412 137821) feed 0 nil nil ((access:restriction ((xmlns:access . "http://www.bloglines.com/about/specs/fac-1.0") (relationship . "deny"))) (title nil "Planeta Plone.es") (updated nil "2013-04-16T02:00:09Z") (generator ((uri . "http://intertwingly.net/code/venus/")) "Venus") (author nil (name nil "Plone.es Team") (email nil "plone-usuarios-plone@lists.plone.org")) (id nil "http://plone.es/atom.xml") (link ((href . "http://plone.es/atom.xml") (rel . "self") (type . "application/atom+xml"))) (link ((href . "http://plone.es/planet") (rel . "alternate"))) (entry ((xml:lang . "es")) (id nil "http://lcaballero.wordpress.com/?p=1241") (link ((href . "http://lcaballero.wordpress.com/2013/03/20/instalacion-de-paquetes-python-con-distribute-y-pip/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (title nil "Instalación de paquetes Python con Distribute y pip") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) "Previamente explique como hacer instalar paquetes Python con setuptools y EasyInstall y ahora le presento la manera actualmente mas recomendada para instalar paquetes Python con las herramientas Distribute y pip. Introducción Python, Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, … " (span ((class . "more-link")) (a ((href . "http://lcaballero.wordpress.com/2013/03/20/instalacion-de-paquetes-python-con-distribute-y-pip/")) "Continuar leyendo »")) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1241&subd=lcaballero&ref=&feed=1") (width . "1"))))) (content ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (p nil "Previamente explique como hacer instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank") (title . "Instalación de paquetes Python con setuptools y EasyInstall")) "setuptools y EasyInstall") " y ahora le presento la manera actualmente mas recomendada para instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con las herramientas " (strong nil "Distribute") " y " (strong nil "pip") ".") (h1 nil "Introducción") (div ((class . "wp-caption aligncenter") (style . "width: 310px;")) (a ((href . "http://python.org/") (target . "_blank")) (img ((alt . "Python") (class . "  ") (height . "89") (src . "http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png") (width . "300")))) (p ((class . "wp-caption-text")) "Python")) (p nil (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") ", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.") (div ((id . "que-es-distribute")) (h2 nil "¿Qué es Distribute?") (p nil (a ((href . "http://packages.python.org/distribute")) "Distribute") " es un conjunto de mejoras en el módulo de la biblioteca estándar de Python: " (a ((href . "http://docs.python.org/3/library/distutils.html")) "distutils") " (para Python 2.3.5 y hasta en la mayoría de las plataformas, plataformas de 64 bits requieren como mínimo de Python 2.4) que le permite crear con más facilidad la distribución de paquetes de Python, en especial los que tienen las dependencias de otros paquetes.") (p nil (strong nil (tt nil "Distribute")) " se creó porque el " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) (em nil "paquete Setuptools")) " actualmente ya no se mantiene. Los paquetes de terceros, es probable que requieran " (strong nil "setuptools") ", que es proporcionado por el paquete " (strong nil (tt nil "Distribute")) ". Por lo tanto, en cualquier momento si los paquetes dependen del " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) (em nil "paquete Setuptools")) ", " (strong nil (tt nil "Distribute")) " intervendrá para decir que ya ofrece el módulo de " (strong nil (tt nil "setuptools")) ".") (p nil (img ((alt . "Move from Setuptools to Distribute") (class . "aligncenter") (src . "http://plone-spanish-docs.readthedocs.org/en/latest/_images/pip_distribute.png")))) (div ((id . "estado-actual-del-empaquetamiento-en-python")) (h3 nil "Estado actual del Empaquetamiento en Python") (p nil "El módulo " (strong nil (tt nil "distutils")) " es parte de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") " de Python y aun lo será hasta la versión Python 3.3.") (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Nota:")) " El módulo " (strong nil (tt nil "distutils")) " será descontinuado en Python 3.3.") (p nil "El módulo " (strong nil (tt nil "distutils2")) " (note el número " (strong nil "dos") ") tendrá compatibilidad hacia atrás hasta Python 2.4 en adelante; y será parte de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") " en la versión Python 3.3.") (p nil "El módulo " (strong nil (tt nil "distutils")) " provee las bases para empaquetar aplicaciones Python. Desafortunadamente, el módulo " (strong nil (tt nil "distutils")) " está plagado de problemas, razón por la cual un pequeño grupo de programadores de Python están trabajando en " (strong nil (tt nil "distutils2")) ". Sin embargo, hasta que " (strong nil (tt nil "distutils2")) " este completado, se recomienda que en el desarrollador pueda usar tanto el paquete " (strong nil (tt nil "distutils")) " como el paquete " (strong nil (tt nil "Distribute")) " para empaquetar software Python.") (p nil "Al mismo tiempo, si un paquete requiere el " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "paquete Setuptools")) ", la recomendación es que instale el paquete " (strong nil (tt nil "Distribute")) ", el cual provee una versión más actualizada del " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "paquete Setuptools")) " que el " (a ((href . "http://pypi.python.org/pypi/setuptools/") (target . "_blank")) "paquete original de Setuptools") ".") (p nil "En el " (a ((href . "http://guide.python-distribute.org/future.html") (target . "_blank")) "futuro") " " (strong nil (tt nil "distutils2")) " remplazará a " (strong nil (tt nil "setuptools")) " y " (strong nil (tt nil "distutils")) ", le cual también removerá la necesidad de " (strong nil (tt nil "Distribute")) ". El como del estado anterior " (strong nil (tt nil "distutils")) " será removido de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") ". Para más información, por favor, consulte el " (a ((href . "http://guide.python-distribute.org/future.html") (target . "_blank")) "Futuro del Empaquetado") " en Python.") (p nil (img ((alt . "El estado actual de Empaquetado en Python") (class . "aligncenter") (src . "http://plone-spanish-docs.readthedocs.org/en/latest/_images/state_of_packaging.jpg")))) (div nil (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Consejo"))) (p ((style . "padding-left: 30px;")) "Ver el vídeo de la " (a ((href . "http://us.pycon.org/2011/schedule/presentations/81/") (target . "_blank")) "PyCon 2011 – Packaging, from Distutils to Distutils2") ", Packaging or installing a Python application can be extremely painful por " (a ((href . "http://tarekziade.wordpress.com/") (target . "_blank")) "Tarek Ziadé") " esta charla le sumergiera dentro de las nuevas características de Distutils2 y explica como usted puede usarlo en su proyecto " (em nil "hoy") " para hacer más fácil la vida para todo el mundo (usuarios, administradores de paquetes de Sistemas operativos, programadores, etc.).") (p ((style . "padding-left: 30px;")) "Para descargar el vídeo " (a ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (target . "_blank")) "haga clic aquí") " (" (strong nil (em nil "Tamaño 294 mb")) ") y para ver por vídeo Stream haga " (a ((href . "http://pycon.blip.tv/file/4880990") (target . "_blank")) "clic aquí") ".")))) (div ((id . "que-es-pip")) (h2 nil "¿Qué es pip?") (p nil (a ((href . "http://pypi.python.org/pypi/pip") (target . "_blank")) "pip") " es una herramienta para instalar y administrar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) ", como los que podemos encontrar en el Índice de Paquetes de Python - " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ".") (p ((style . "padding-left: 30px;")) (strong nil (span ((style . "text-decoration: underline;")) "Truco"))) (p ((style . "padding-left: 30px;")) "Esta herramienta es el remplazo para la famosa herramienta " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "easy_install")) ".") (p nil "En su mayoría, " (strong nil (tt nil "pip")) " utiliza las mismas técnicas para encontrar los paquetes, por lo que los paquetes que se instalaban usando la herramienta " (strong nil (tt nil "easy_install")) "  también deben ser instalables con la herramienta " (strong nil (tt nil "pip")) ".") (p nil "Esto significa que usted puede utilizar con el siguiente comando:") (div nil (div nil (pre nil "$ pip install AlgunPaquete"))) (p nil "En lugar del tradicional comando usado con la herramienta " (strong nil (tt nil "easy_install")) " como se describe a continuación:") (div nil (div nil (pre nil "$ easy_install AlgunPaquete"))) (div ((id . "pip-comparado-con-easy-install")) (h3 nil "pip comparado con easy_install") (p nil (strong nil (tt nil "pip")) " ofrece mejoras a la herramienta " (strong nil "easy_install") ". Algunas de las mejoras son:") (ul nil (li nil "Todos los paquetes se descargan antes de iniciar la instalación. Una instalación parcialmente completada no se produce como resultado.") (li nil "Tiene cuidado de presentar una salida útil en la consola.") (li nil "Las razones de las acciones de instalación se le aplica un seguimiento. Por ejemplo, si un paquete se está instalando, " (strong nil (tt nil "pip")) " sigue la pista de por qué ese paquete era necesario.") (li nil "Los mensajes de error debe ser útiles.") (li nil "El código fuente es relativamente conciso y coherente, por lo que es más fácil de usar mediante programación.") (li nil "Ofrece soporte nativo para otros sistemas de control de versiones (Git, Mercurial y Bazaar)") (li nil "Tiene un mecanismo de desinstalación de paquetes.") (li nil "Fácil de definir conjuntos de requerimientos y reproducir de forma fiable un conjunto de paquetes.") (li nil "Los paquetes no tienen que ser instaladas como archivos de huevo, que pueden ser instalados en forma plana (mientras cuida la " (em nil "metadata") " de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) ")."))) (div ((id . "pip-no-hacer-todo-lo-que-se-easy-install-en-concreto")) (h3 nil "pip no hacer todo lo que se easy_install. En concreto:") (ul nil (li nil "No se puede instalar a partir de " (a ((href . "http://lcaballero.wordpress.com/tag/plone/glosario.html#term-paquetes-egg")) (em ((title . "See the definition")) "paquetes Egg")) ". Sólo se instala desde el código fuente. (En el futuro será bueno si se pudiera instalar los binarios de Windows EXE o MSI -.. pero instalar paquetes binarios para otras plataformas no es una prioridad).") (li nil "No entiende la sección " (em nil "SetupTools Extras") " (como package[test]). Esto podría ser agregado eventualmente.") (li nil "Es incompatible con algunos paquetes que tienen muchas personalizaciones " (strong nil (tt nil "distutils")) " o " (strong nil (tt nil "setuptools")) " en sus archivos " (strong nil "setup.py") ".")))) (div ((id . "instrucciones-de-instalacion")) (div ((id . "instrucciones-de-instalacion")) (h2 nil "Instrucciones de Instalación" (a ((href . "http://lcaballero.wordpress.com/tag/plone/feed/#instrucciones-de-instalacion") (title . "Enlazar permanentemente con este título")) (br nil))) (p nil "Siempre existen más de dos formas de instalar paquetes Python con " (strong nil (tt nil "Distribute")) " y " (strong nil (tt nil "pip")) " ;)") (div ((id . "requerimientos-previos")) (h3 nil "Requerimientos previos") (p nil "Es necesario que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev python-setuptools")))) (div ((id . "instalacion-con-paquetes-egg")) (h3 nil "Instalación con Paquetes Egg") (p nil "Para instalar " (strong nil (tt nil "Distribute")) " ejecute el siguiente comando:") (div nil (div nil (pre nil "# easy_install -U distribute"))) (p nil "También para instalar " (strong nil (tt nil "pip")) " ejecute el siguiente comando:") (div nil (div nil (pre nil "# easy_install -U pip")))) (div ((id . "instalacion-en-sistemas-debian")) (h3 nil "Instalación en sistemas Debian") (p nil "La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (pre nil "# aptitude install build-essential python-dev python-pip"))))) (div ((id . "ejemplos-de-uso-de-pip")) (h2 nil "Ejemplos de uso de pip") (p nil "El script " (strong nil (tt nil "pip")) " ofrece varias formas de uso, para instalar los paquetes de diversas fuentes:") (p ((style . "padding-left: 30px;")) (strong nil "Consejo:") " Para poder utilizar el " (strong nil (tt nil "pip")) ", primero debe instalar " (strong nil (tt nil "setuptools")) " o " (strong nil (tt nil "distribute")) ". Si utiliza " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "virtualenv")) (em nil "virtualenv")) ", una copia del " (strong nil (tt nil "pip ")) "será automáticamente instalados en cada entorno virtual que usted crea.") (p ((style . "padding-left: 30px;")) (strong nil "easy_install") " se puede complementar con " (strong nil "virtualenv") ", y se recomienda que lo utilice para " (em nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "aislar a la instalación")) "aislar a la instalación") " ") "de los " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank") (title . "paquetes Egg")) (em ((title . "See the definition")) "paquetes Egg")) ".") (p nil (strong nil "Ejemplo 1.") " Instalar un paquete su nombre en su versión más reciente, buscando en " (a ((href . "http://lcaballero.wordpress.com/tag/plone/glosario.html#term-pypi")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ pip install SQLObject"))) (p nil (strong nil "Ejemplo 2.") " Instalar o actualizar un paquete por nombre y versión utilizando una dirección URL donde encontradas en una “página de descargas”:") (div nil (pre nil "$ pip install -f http://dist.plone.org/packages/ 'Pillow==1.7.3'")) (p nil (strong nil "Ejemplo 3.") " Instalar o actualizar un paquete desde su propio " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi") (target . "_blank")) (em nil "replica del repositorio PyPI")) " o su repositorio de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " privados:") (div nil (div nil (pre nil "$ pip install -i http://pypi.ejemplo.com/simple SQLObject"))) (p nil (strong nil "Ejemplo 4.") " Descargar e instalar una distribución de código fuente:") (div nil (div nil (pre nil "$ pip install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz"))) (p nil (strong nil "Ejemplo 5.") " Instalar un paquete con una versión especifica:") (div nil (div nil (pre nil "$ pip install 'ZopeSkel==2.21.2'"))) (p nil (strong nil "Ejemplo 6.") " Instalar todas las dependencias de mi proyecto Python usando un archivo de dependencias requeridas para instalar:") (div nil (div nil (pre nil "$ pip install -r ./requirements.txt"))) (p nil "Un ejemplo del archivo " (strong nil (tt nil "requirements.txt")) " puede ser el siguiente:") (div nil (div nil (pre nil "python-ldap
django
buildbot
buildbot-slave
PyYAML
south"))) (p nil (strong nil "Ejemplo 7.") " Actualizar un paquete ya instalado con la versión más reciente de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ pip install --upgrade PyProtocols"))) (p nil (strong nil "Ejemplo 8.") " Para usar realizar búsquedas de paquetes disponibles para instalar desde los repositorios por definidos:") (div nil (div nil (pre nil "$ pip search plonetheme-*"))) (p nil (strong nil "Ejemplo 9.") " Para remover un " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg") (target . "_blank")) (em ((title . "See the definition")) "paquete Egg"))) (div nil (div nil (pre nil "$ pip uninstall SQLObject"))) (p nil "Para más información consulte la ayuda disponible por que paquete " (strong nil (tt nil "pip")) " ejecutando el siguiente comando:") (div nil (div nil (pre nil "$ pip help")))) (div ((id . "distribute-en-zc-buildout")) (h2 nil "Distribute en zc.buildout") (p nil "Puede usar " (strong nil "Distribute") " en " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", habilitando el uso de este por medio de un parámetro adicional en su archivo " (strong nil (tt nil "bootstrap.py")) " de la siguiente manera:") (div nil (div nil (pre nil "$ python bootstrap.py --distribute")))) (div ((id . "pip-en-zc-buildout")) (h2 nil "pip en zc.buildout") (p nil "Existen varias estrategias para integrar " (strong nil (tt nil "pip")) " en " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", a continuación se describen algunas formas:") (p nil (a ((href . "http://pypi.python.org/pypi/gp.recipe.pip") (target . "_blank")) "gp.recipe.pip") ", ese paquete es un récipe de " (strong nil (tt nil "zc.buildout")) " el cual permite instalar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-python") (target . "_blank")) (em ((title . "See the definition")) "Paquete Python")) " usando " (strong nil (tt nil "pip")) ". A continuación se explica un ejemplo de configuración " (strong nil (tt nil "zc.buildout")) " con este récipe se puede usar:") (ol nil (li nil "El récipe agrega un " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank")) (em nil "virtualenv")) " en el directorio " (strong nil (tt nil "parts/")) " de su instalación buildout, entonces genera este binario para generar un scripts ejecutable Python. Así que tienes un área de pruebas " (strong nil "limpia") " de instalaciones previas.") (li nil "El récipe esta basado en " (a ((href . "http://pypi.python.org/pypi/zc.recipe.egg#id23") (target . "_blank")) "zc.recipe.egg#scripts") " para que pueda compartir sus " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " entre buildouts como de costumbre.") (li nil "Por supuesto, usted puede instalar algunos archivos " (strong nil ".pybundle") ".") (li nil "Usted puede construir paquetes desde un repositorio SVN con la opción " (strong nil (tt nil "editables")) ".") (li nil "Cada linea encontrada en la opción " (strong nil (tt nil "install")) " es la última parte de un comando de " (strong nil (tt nil "pip")) ". Esta le permitirá a usted construir " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " con sus dependencias. Por ejemplo, instalar la librería " (a ((href . "http://codespeak.net/lxml/") (target . "_blank")) "lxml") " en un área de prueba pura, sin tener instalado " (strong nil (tt nil "libxml2")) " y " (strong nil (tt nil "libxslt")) ", usted necesita tener instalado " (strong nil (tt nil "Cython")) " y con esta línea de comando " (strong nil (tt nil "python setup.py install --static-deps")) " para instalar el paquete " (a ((href . "http://codespeak.net/lxml/") (target . "_blank")) "lxml") ".")) (p nil "A continuación un ejemplo de configuración " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ":") (div nil (div nil (pre nil "[buildout]
# the cache dir is used by buildout & pip
download-cache = download
parts = eggs

[eggs]
recipe = gp.recipe.pip

# eggs installed by pip (also add the Deliverance bundle)
install =
    Cython
    --install-option=--static-deps lxml==2.2alpha1

http://deliverance.openplans.org/dist/Deliverance-snapshot-latest.pybundle

# eggs installed by zc.recipe.egg
eggs =
    Paste
    pyquery"))) (p nil "Otra forma de usar " (strong nil (tt nil "pip")) " es a través de una extensión " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) " llamada " (a ((href . "http://pypi.python.org/pypi/gp.vcsdevelop/") (target . "_blank")) "gp.vcsdevelop") ", para hacer checkout de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " desde varios " (a ((href . "http://es.wikipedia.org/wiki/Control_de_versiones") (target . "_blank")) "sistemas de control de versiones") ". A continuación se muestra un ejemplo de configuración " (strong nil (tt nil "zc.buildout")) " con esta extensión:") (div nil (div nil (pre nil "[buildout]
...
extensions = gp.vcsdevelop
develop-dir = ./requirements
requirements = requirements.txt
parts = eggs
...
[eggs]
recipe = zc.recipe.egg
eggs = ${buildout:requirements-eggs}
interpreter = python
..."))) (p nil "Un ejemplo del archivo " (strong nil (tt nil "requirements.txt")) " puede ser el siguiente:") (div nil (div nil (pre nil "ConfigObject>=1.0
-e git+git://github.com/bearstech/PloneTerminal.git#egg=PloneTerminal")))) (div ((id . "referencias")) (h1 nil "Ver también") (p nil "Le recomiendo consultar las siguientes enlaces para complementar el conocimiento adquirido en esta entrada en mi blog.") (ul nil (li nil (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank") (title . "Instalación de paquetes Python con setuptools y EasyInstall")) "Instalación de paquetes Python con setuptools y EasyInstall")) (li nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "Creación de entornos virtuales Python")) "Creación de entornos virtuales Python"))) (p nil "Espero sea de utilidad esta entrada en mi blog. Ayúdame a seguir escribiendo en mi blog y dona 1 dolar " (a ((href . "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted") (target . "_blank") (title . "Ayúdame y dona 1 dolar!")) "aquí") ".") (h2 nil "Referencias") (ul nil (li nil "El articulo " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/distribute_pip.html") (target . "_blank") (title . "Distribute y pip")) "Distribute y pip") " desde la documentación de Plone en Español.") (li nil (a ((href . "http://guide.python-distribute.org/installation.html") (target . "_blank")) "Installing the Package Tools") ".") (li nil (a ((href . "http://www.pip-installer.org/en/latest/index.html") (target . "_blank")) "pip v1.0.2 documentation") ".") (li nil (a ((href . "http://www.gawel.org/weblog/en/2008/12/combine-zc.buildout-an-pip-benefits") (target . "_blank")) "Combine zc.buildout and pip benefits") "."))) (br nil) (a ((href . "http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1241/") (rel . "nofollow")) (img ((alt . " ") (border . "0") (src . "http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1241/")))) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1241&subd=lcaballero&ref=&feed=1") (width . "1"))))) (updated nil "2013-03-20T18:35:36Z") (category ((term . "Articulos"))) (category ((term . "Desarrollo y programación"))) (category ((term . "GULMER"))) (category ((term . "Linux"))) (category ((term . "Python"))) (category ((term . "Python Venezuela"))) (category ((term . "Distribute"))) (category ((term . "distutils"))) (category ((term . "Egg"))) (category ((term . "entornos virtuales"))) (category ((term . "Paquetes Egg"))) (category ((term . "Paquetes Python"))) (category ((term . "pip"))) (category ((term . "Plone"))) (category ((term . "Software libre"))) (category ((term . "virtualenv"))) (category ((term . "Zope"))) (category ((term . "ZopeSkel"))) (author nil (name nil "macagua")) (source nil (id nil "http://lcaballero.wordpress.com") (logo nil "http://s2.wp.com/i/buttonw-com.png") (link ((href . "http://lcaballero.wordpress.com/tag/plone/feed/") (rel . "self") (type . "application/rss+xml"))) (link ((href . "http://lcaballero.wordpress.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://lcaballero.wordpress.com/osd.xml") (rel . "search") (title . "Leonardo J. Caballero G.") (type . "application/opensearchdescription+xml"))) (link ((href . "http://lcaballero.wordpress.com/?pushpress=hub") (rel . "hub") (type . "text/html"))) (subtitle nil "macagua@debian:~/public_html#") (title nil "Leonardo J. Caballero G. » Plone") (updated nil "2013-04-12T17:00:11Z"))) (entry ((xml:lang . "es")) (id nil "http://lcaballero.wordpress.com/?p=1147") (link ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (rel . "alternate") (type . "text/html"))) (title nil "Instalación de paquetes Python con setuptools y EasyInstall") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) "Este articulo explica como instalar paquetes Python con setuptools y EasyInstall. Introducción Python, Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un … " (span ((class . "more-link")) (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) "Continuar leyendo »")) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1147&subd=lcaballero&ref=&feed=1") (width . "1"))))) (content ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((id . "que-es-setuptools")) (p nil "Este articulo explica como instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con " (strong nil (tt nil "setuptools")) " y " (strong nil (tt nil "EasyInstall")) ".") (h1 nil "Introducción") (div ((class . "wp-caption aligncenter") (style . "width: 310px;")) (a ((href . "http://python.org/") (target . "_blank")) (img ((alt . "Python") (class . "  ") (height . "89") (src . "http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png") (width . "300")))) (p ((class . "wp-caption-text")) "Python")) (p nil (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") ", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.") (h1 nil "¿Qué es Setuptools?") (p nil (a ((href . "http://pypi.python.org/pypi/setuptools/") (target . "_blank")) "Setuptools") ", es una colección de mejoras para el módulo distutils de Python, que permiten a un desarrollador construir y distribuir " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " de forma sencilla, en especial cuando dependen de otros " (em ((title . "See the definition")) (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) "Paquetes Python") " ") "para funcionar.") (p nil "Entre sus características principales están:") (ul nil (li nil "Por defecto, utiliza " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) " para buscar los paquetes, lo que permite acceso inmediato e instalación transparente de miles de paquetes.") (li nil "Permite crear " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " Python, que son " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " empaquetados en un sólo archivo para su distribución.") (li nil "Incluye archivos de configuración y todos los archivos que forman parte del directorio de trabajo, sin necesidad de listarlos individualmente o crear archivos de manifiesto."))) (div ((id . "que-es-easyinstall")) (h1 nil "¿Qué es EasyInstall?") (p nil (a ((href . "http://peak.telecommunity.com/DevCenter/EasyInstall") (target . "_blank")) "easy_install") ", es una herramienta que se basa en " (cite nil "Setuptools") " para automáticamente encontrar y descargar desde Internet las dependencias, para instalarlas o actualizarlas al momento de construir, que además esta herramienta es capaz de bajar de Internet las dependencias utilizando HTTP, FTP, sistema de control de versiones como " (em nil "Subversion") ", " (em nil "Git") ", " (em nil "Mercurial") ", entre otros o desde forjas como " (em nil "SourceForge.net") ", " (em nil "Launchpad.net") ", " (em nil "Github.com") ", " (em nil "Bitbucket.org") ", etc.")) (div ((id . "instrucciones-de-instalacion")) (h1 nil "Instrucciones de Instalación") (p nil "Siempre existen más de dos formas de instalar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " con " (strong nil "setuptools") " y " (strong nil "easy_install") (img ((alt . ";)") (class . "wp-smiley") (src . "http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif")))) (div ((id . "instalacion-manual")) (h2 nil "Instalación manual") (p nil "Para ambas es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev"))) (p nil "La instalación es muy sencilla, solo se necesita bajar de Internet el archivo " (a ((href . "http://peak.telecommunity.com/dist/ez_setup.py") (target . "_blank")) "ez_setup.py") " y ejecutarlo con el Python que se desea utilizar, con los siguientes comandos:") (div nil (div nil (pre nil "# wget http://peak.telecommunity.com/dist/ez_setup.py
# python ez_setup.py"))) (p nil "Esto instalará un programa llamado " (strong nil (tt nil "easy_install")) " junto a los demás ejecutables de Python.")) (div ((id . "instalacion-en-sistemas-debian")) (h2 nil "Instalación en sistemas Debian") (p nil "La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev python-setuptools"))) (p nil "Esto instalará un programa llamado " (strong nil (tt nil "easy_install")) " junto a los demás ejecutables de Python."))) (div ((id . "ejemplos-de-uso")) (h1 nil "Ejemplos de uso") (p nil "El programa " (strong nil (tt nil "easy_install")) " ofrece varias formas de uso, para instalar los paquetes de diversas fuentes, como se describe a continuación con los siguientes ejemplos:") (div nil (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Consejo:")) " Para poder utilizar el " (strong nil (tt nil "easy_install")) ", primero debe instalar " (strong nil (tt nil "setuptools")) ". Si utiliza " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "virtualenv")) (em nil "virtualenv")) ", una copia del " (strong nil (tt nil "easy_install")) " será automáticamente instalados en cada entorno virtual que usted crea.") (p ((style . "padding-left: 30px;")) (strong nil (tt nil "easy_install")) " se puede complementar con " (strong nil (tt nil "virtualenv")) ", y se recomienda que lo utilice para " (em nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "aislar a la instalación")) "aislar a la instalación") " ") "de los " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank") (title . "paquetes Egg")) (em ((title . "See the definition")) "paquetes Egg")) ".")) (p nil (strong nil "Ejemplo 1.") " Instalar un paquete por nombre, buscando en " (em ((title . "See the definition")) (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) "PyPI") " ") " la versión más reciente:") (div nil (div nil (pre nil "$ easy_install SQLObject"))) (p nil (strong nil "Ejemplo 2.") " Instalar o actualizar un paquete por nombre y versión utilizando los enlaces encontrados en una “página de descargas”:") (div nil (div nil (pre nil "$ easy_install -f http://pythonpaste.org/package_index.html SQLObject"))) (p nil (strong nil "Ejemplo 3.") " Instalar o actualizar un paquete desde su propio " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi") (target . "_blank")) (em nil "replica del repositorio PyPI")) " o su repositorio de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " privado:") (div nil (div nil (pre nil "$ easy_install -i http://pypi.ejemplo.com/simple SQLObject"))) (p nil (strong nil "Ejemplo 4.") " Descargar e instalar una distribución de código fuente:") (div nil (div nil (pre nil "$ easy_install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz"))) (p nil (strong nil "Ejemplo 5.") " Instalar un " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg") (target . "_blank")) (em ((title . "See the definition")) "paquete Egg")) " ya descargado:") (div nil (div nil (pre nil "$ easy_install ./Descargas/OtroPaquete-3.2.1-py2.7.egg"))) (p nil (strong nil "Ejemplo 6.") " Instalar un paquete con una versión especifica:") (div nil (div nil (pre nil "$ easy_install \"ZopeSkel==2.21.2\""))) (p nil (strong nil "Ejemplo 7.") " Actualizar un paquete ya instalado con la versión más reciente de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ easy_install --upgrade PyProtocols"))) (p nil "Para más información consulte la ayuda disponible por que paquete " (strong nil (tt nil "easy_install")) " ejecutando el siguiente comando:") (div nil (div nil (pre nil "$ easy_install --help")))) (div ((id . "utilizacion-con-zope-plone")) (h1 nil "Utilización con Zope/Plone") (p nil "El mecanismo más moderno para la instalación de distribuciones de Zope y Plone, llamado " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "buildout")) ", formalmente " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", hace uso de " (strong nil (tt nil "easy_install")) " para obtener e instalar todas las dependencias.") (p nil "Adicionalmente, existe una herramienta llamada " (strong nil "ZopeSkel") " que permite crear fácilmente “esqueletos” de distintos tipos de proyectos de Zope y Plone, mediante una herramienta llamada " (strong nil (tt nil "paster")) " y un sistema de plantillas. Es recomendado instalar esta última herramienta para proyectos nuevos, de la siguiente manera:") (div nil (div nil (pre nil "$ easy_install \"ZopeSkel==2.21.2\""))) (p nil "Una vez instalado, ofrece una buena variedad de esqueletos para diversos tipos de proyectos, como temas visuales, componentes de Plone, buildouts, tipos de contenido con Archetypes o entre otros mas.") (p nil "Se utiliza mediante el comando de sistema " (strong nil (tt nil "paster")) ", pasando la opción " (strong nil (tt nil "create")) " para crear un proyecto y la opción " (strong nil (tt nil "--list-templates")) " ver las diversas plantillas de proyectos disponibles para crear, como se muestra a continuación:") (div nil (div nil (pre nil "$ paster create --list-templates
Available templates:
  archetype:          A Plone project that uses Archetypes
  basic_namespace:    A project with a namespace package
  basic_package:      A basic setuptools-enabled package
  basic_zope:         A Zope project
  kss_plugin:         A KSS plugin template
  nested_namespace:   A project with two nested namespaces.
  paste_deploy:       A web application deployed through paste.deploy
  plone:              A Plone project
  plone2.5_buildout:  A buildout for Plone 2.5 projects
  plone2.5_theme:     A Theme for Plone 2.5
  plone2_theme:       A Theme Product for Plone 2.1 & Plone 2.5
  plone3_buildout:    A buildout for Plone 3 projects
  plone3_portlet:     A Plone 3 portlet
  plone3_theme:       A Theme for Plone 3.0
  plone_app:          A Plone App project
  plone_hosting:      Plone hosting: buildout with ZEO and any Plone version
  plone_pas:          A Plone PAS project
  recipe:             A recipe project for zc.buildout
  silva_buildout:     A buildout for Silva projects
  zope_app:           Package that contains a Zope application
  zope_deploy:        (Paste) deployment of a Zope application")))) (div ((id . "referencia")) (div ((id . "utilizacion-con-zope-plone")) (p nil "Para mas información de las opciones disponibles de " (strong nil (tt nil "ZopeSkel")) ", ejecute el siguiente comando:") (div nil (pre nil "$ paster --help
  Usage: paster [paster_options] COMMAND [command_options]

  Options:
    --version         show program's version number and exit
    --plugin=PLUGINS  Add a plugin to the list of commands (plugins are Egg
                      specs; will also require() the Egg)
    -h, --help        Show this help message

  Commands:
    create       Create the file layout for a Python distribution
    help         Display help
    make-config  Install a package and create a fresh config file/directory
    points       Show information about entry points
    post         Run a request for the described application
    request      Run a request for the described application
    serve        Serve the described application
    setup-app    Setup an application, given a config file"))) (div ((id . "referencia")) (p nil "Y así de esta forma ¡usted ahora puede instalar paquetes Python con setuptools y EasyInstall!") (p nil "Ayúdame a seguir escribiendo en mi blog y dona 1 dolar " (a ((href . "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted") (target . "_blank") (title . "Ayúdame y dona 1 dolar!")) "aquí") ".") (h1 nil "Referencia")) (ul nil (li nil (a ((href . "http://plone.org/countries/mx/instalacion-de-setuptools-y-easyinstall-para-python") (target . "_blank")) "Instalación de setuptools y EasyInstall para Python") " desde la comunidad Plone México."))) (br nil) (a ((href . "http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1147/") (rel . "nofollow")) (img ((alt . " ") (border . "0") (src . "http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1147/")))) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1147&subd=lcaballero&ref=&feed=1") (width . "1"))))) (updated nil "2013-03-14T18:07:28Z") (category ((term . "Articulos"))) (category ((term . "GULMER"))) (category ((term . "Linux"))) (category ((term . "Python"))) (category ((term . "Python Venezuela"))) (category ((term . "Software libre"))) (category ((term . "Desarrollo y programación"))) (category ((term . "distutils"))) (category ((term . "Egg"))) (category ((term . "entornos virtuales"))) (category ((term . "Paquetes Egg"))) (category ((term . "Paquetes Python"))) (category ((term . "Plone"))) (category ((term . "Setuptools"))) (category ((term . "virtualenv"))) (category ((term . "Zope"))) (category ((term . "ZopeSkel"))) (author nil (name nil "macagua")) (source nil (id nil "http://lcaballero.wordpress.com") (logo nil "http://s2.wp.com/i/buttonw-com.png") (link ((href . "http://lcaballero.wordpress.com/tag/plone/feed/") (rel . "self") (type . "application/rss+xml"))) (link ((href . "http://lcaballero.wordpress.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://lcaballero.wordpress.com/osd.xml") (rel . "search") (title . "Leonardo J. Caballero G.") (type . "application/opensearchdescription+xml"))) (link ((href . "http://lcaballero.wordpress.com/?pushpress=hub") (rel . "hub") (type . "text/html"))) (subtitle nil "macagua@debian:~/public_html#") (title nil "Leonardo J. Caballero G. » Plone") (updated nil "2013-04-12T17:00:11Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/conferencia-plone-2012-2") (link ((href . "http://www.codesyntax.com/es/blog/conferencia-plone-2012-2") (rel . "alternate") (type . "text/html"))) (title nil "Conferencia Plone 2012") (summary nil "El 9 de octubre comenzó la reunión anual de los Ploneros: la Plone Conference. Este año se ha celebrado en la ciudad holandesa de Arnhem y nos hemos reunido unos 400 ploneros.Sirva este artículo como resumen de lo visto allí.") (updated nil "2013-02-11T14:11:42Z") (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "lur")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/actualizacion-de-seguridad-en-plone") (link ((href . "http://www.codesyntax.com/es/blog/actualizacion-de-seguridad-en-plone") (rel . "alternate") (type . "text/html"))) (title nil "Actualización de seguridad en Plone") (summary nil "El Equipo de Seguridad de Plone ha informado sobre una actualización de seguridad. Este parche de seguridad se dará a conocer el martes y se recomienda instalarlo de manera correcta.") (updated nil "2013-02-11T14:09:59Z") (category ((term . "plone"))) (category ((term . "seguridad"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/productos-interesantes-en-la-primera-jornada-de-la-conferencia-plone") (link ((href . "http://www.codesyntax.com/es/blog/productos-interesantes-en-la-primera-jornada-de-la-conferencia-plone") (rel . "alternate") (type . "text/html"))) (title nil "Productos interesantes en la primera jornada de la Conferencia Plone") (summary nil "Aquí estamos pues, en la sede de Market Street de la San Francisco State Universitiy en la Conferencia  Plone de 2011. Hemos venido Lur Ibargutxi y Mikel Larreategi de CodeSyntax y este es el resumen del primer día.") (updated nil "2013-02-11T14:09:04Z") (category ((term . "ploneconf2011"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry ((xml:lang . "en-us")) (id nil "http://blog.noenieto.com/blog/html/2013/01/25/tips_para_ir_al_pycon_2013.html") (link ((href . "http://blog.noenieto.com/blog/html/2013/01/25/tips_para_ir_al_pycon_2013.html") (rel . "alternate") (type . "text/html"))) (title nil "Tips para ir al PyCON 2013") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "tips-para-ir-al-pycon-2013")) (h1 nil "Tips para ir al PyCON 2013") (p nil "Se viene el PyCON 2013, es su segunda edición en la bella ciudad de Santa Clara, California (Osea,
silicon valley). Vale toda la pena ir para allá.") (p nil "Lástima que me lo voy a perder por que ando de viaje en Argentina.") (p nil "Pero tengo varios cuates que van por primera vez al PyCON y algunos van por primera vez a EU, así
que aquí les pongo unos consejos.") (div ((class . "section") (id . "pasaporte")) (h2 nil "Pasaporte") (p nil "El pasaporte debe de estar vigente para las fechas que viajas a EU. Si no tienes pasaporte, entonces
lo tienes que empezar a tramitar ¡YA MISMO!") (p nil "Tienes que hacer cita previa para el trámite del pasaporte y por desgracia, algunas veces te dan la
cita hasta después de varias semanas.") (p nil "El sitio donde debes de hacer tu cita es este: " (a ((class . "reference external") (href . "http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes")) "http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes")) (p nil "Lee todo lo de la página y comienza a juntar tus requisitos.") (p nil "Ten cuidado con las fotos, por que luego no aceptan las fotos que hacen en cualquier estudio
fotográfico. Para más seguridad, elige estudios fotográficos que estan cerca de la delegación donde
tienes que hacer tu trámite. Las fotos cuestan entre $50 y $100 pesos.") (p nil "Un tip estratégico es que si en tu ciudad esta muy lleno y no te dan cita pronto, entonces puedes
pedir una cita urgente (con ninguna garantía) o pedir la cita en la delegación de una ciudad
cercana. Todo esto depende de qué tantos recursos tengas para viajar a otra ciudad.") (p nil "Por cierto, ¿Ya sabes dónde esta tu delegación de la SRE? " (a ((class . "reference external") (href . "http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte")) "http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte")) (p nil "Por último, el pasaporte te lo entregan el mismo día, como a las 3 y media de la tarde.")) (div ((class . "section") (id . "visa")) (h2 nil "Visa") (p nil "Para entrar a Estados Unidos desde México tienes que tener VISA. Punto. No hay de otra. Ni siquiera
te dejan abordar el avión en México si no traes VISA.") (p nil "Entonces a tramitarla.") (p nil "Primero tramita el pasaporte. Lo vas a necesitar a fuerza.") (p nil "Después entra al sitio oficial de las visas de estados unidos, haz tu cuenta e inicia una aplicación
de VISA. Todo esta en inglés y te preguntan un montón de idioteces.") (p nil (a ((class . "reference external") (href . "http://usvisa-info.com/es-MX/selfservice/ss_country_welcome")) "http://usvisa-info.com/es-MX/selfservice/ss_country_welcome")) (p nil "Pero te lo voy a hacer fácil.") (ul nil (li nil (p ((class . "first")) "Vas a Santa Clara, CA.")) (li nil (p ((class . "first")) "Te vas a hospedar en el hotel sede del PyCON: HYATT Regency Santa Clara.") (p nil "5101 Great America Parkway,
Santa Clara, California, USA 95054
Tel: +1 408 200 1234    Fax: +1 408 510 6449")) (li nil (p ((class . "first")) "No importa que no vayas a dormir justo en el hotel sede, pero ahí vas a estar casi todo el rato,
así que no estas mintiendo. Vas a ir ahí.")) (li nil (p ((class . "first")) "Consigue una tarjeta de crédito, a tu nombre. Así te será más fácil contestar la pregunta de
“¿Quién va a pagar los gastos de viaje y estancia?”.")) (li nil (p ((class . "first")) "Los del PYCON te pueden dar cartas de recomendación para hacerte más fácil el trámite de la visa.")) (li nil (p ((class . "first")) "¡Aguas con el tiempo! Las citas para entrevista te las pueden dar hasta después de varias semanas.
Y si te dan la visa, también tardará varias semanas ¡Estas contra reloj!")) (li nil (p ((class . "first")) "El derecho de la entrevista con el cónsul cuesta como 150 usd y se puede pagar en línea.
Esa a fuerza la tienes que pagar y no hay ninguna garantía de que te den la visa.")) (li nil (p ((class . "first")) "Aguas con la lana. Probablemente tengas que viajar a otra ciudad para tu entrevista en la
embajada de EU. Nada es gratis.")) (li nil (p ((class . "first")) "No te lleves casi nada a la entrevista. No te van a dejar pasar ni celulares, ni laptops ni
bolsas, ni mochilas, ni llaves, ni nada. Sólo tus papeles. Una vez dentro de la embajada estas en
territorio gringo, osea que se ponen mamones y no te dejan salir si no te toca salir. Es más, ve a
miar y a cagar minutos antes de tu hora de entrevista.")) (li nil (p ((class . "first")) "Si estas titulado y tienes chamba y das clases o eres estudiante, y además vas a un congreso,
con todo bien programado, entonces es bastante probable que den la visa.")))) (div ((class . "section") (id . "los-boletos-de-avion")) (h2 nil "Los boletos de avión") (p nil "Compra los boletos de avión YA. No esperes a la visa (El pasaporte si te lo piden para el boleto).
La razón de comprar los boletos ya, es que puedes agarrar mejores ofertas que si te esperas al
último minuto.") (p nil "Hay varias aerolíneas. Esta Volaris (la mas recomendable de viaje de ida), y las usuales, American
Airlines, etc. Los boletos de Alaska Airlines suelen estar baratos, aunque sean guajolojet :P.") (p nil "El año pasado los del PyCON recomendaron Kayak.com para hacer comparaciones de precios.") (p nil "Por último, puedes llegar a varios aeropuertos. El más cómodo es el de San Jose International
Airport (SJC), pues esta en la misma ciudad. Renta un auto (necesitarás tarjeta de crédito y licencia de manejo mexicana, que si
vale allá.) o vete en taxi al hotel. Será más fácil. O si llegas con @erik_river o @") (p nil "Otro tip es ver quiénes van llegando al aeropuerto, y si les ves cara de geek pregúntales que si van
para el PYCON y si te les puedes pegar. Puede que tengas suerte y renten un auto y te lleven gratis
al hotel(Así nos pasó el año pasado :D).") (p nil "También puedes llegar a el Aeropuerto de San Francisco (SFO), o al de Oakland (OAK). Desde esos dos
sale el tren hacia  Santa Clara y es experiencia chida. Desde la estación de trenes de Santa Clara,
tendrás que tomar Taxi hacia al hotel y te la van a dejar caer en no menos de 40 USD.")) (div ((class . "section") (id . "fin")) (h2 nil "Fin") (p nil "¡No olvides, pásala chido, aprende mucho y conoce mucha gente!"))))) (updated nil "2013-01-25T03:00:00Z") (category ((term . "Python"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z"))) (entry ((xml:lang . "en-us")) (id nil "http://blog.noenieto.com/blog/html/2013/01/06/cuatro_atajos_del_teclado_de_gnome3.html") (link ((href . "http://blog.noenieto.com/blog/html/2013/01/06/cuatro_atajos_del_teclado_de_gnome3.html") (rel . "alternate") (type . "text/html"))) (title nil "Cuatro atajos del teclado de Gnome3") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "cuatro-atajos-del-teclado-de-gnome3")) (h1 nil "Cuatro atajos del teclado de Gnome3") (p nil "En los últimos días me he encontrado cuatro combinaciones de teclas que me ahorrarán muchos clicks.
Se trata de la combinación de la tecla " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) " o “Windows” y la teclas de dirección. Aquí les va la
tabla de lo que hace cada una:") (table ((border . "1") (class . "docutils")) (colgroup nil (col ((width . "26%"))) (col ((width . "74%")))) (thead ((valign . "bottom")) (tr ((class . "row-odd")) (th ((class . "head")) "Combinación de teclas") (th ((class . "head")) "Acción"))) (tbody ((valign . "top")) (tr ((class . "row-even")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Arriba"))) (td nil "Maximizar la ventana actual.")) (tr ((class . "row-odd")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Abajo"))) (td nil "Desmaximizar la ventana actual.")) (tr ((class . "row-even")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Derecha"))) (td nil "Alinear la ventana para que ocupe el 50% de la pantalla hacia la derecha.*")) (tr ((class . "row-odd")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Izquierda"))) (td nil "Alinear la ventana para que ocupe el 50% de la pantalla " (em nil "hacia la izquierda."))))) (p nil "A excepción de " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Abajo")) ", todos los demás atajos alternan entre el tamaño y posiciones
anteriores y el nuevo tamaño/posición. Por ejemlo, supongamos que la ventana estaba maximizada y la
acomodas para que tome el 50% de la izquierda con " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Izquierda")) ", si presionas la misma
combinación, la ventana volverá a su tamaño maximizado.") (p nil "¿Ya lo probaste?")))) (updated nil "2013-01-06T03:00:00Z") (category ((term . "Gnome"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/begira-sitio-web-de-la-revista-del-grupo-ulma") (link ((href . "http://www.codesyntax.com/es/blog/begira-sitio-web-de-la-revista-del-grupo-ulma") (rel . "alternate") (type . "text/html"))) (title nil "Begira, sitio web de la revista del Grupo Ulma") (summary nil "El Grupo Ulma lleva unos cuantos años editando una revista de papel en la que publican sus noticias propias. El alcance de estas noticias se limitaba hasta sus socios y empleados, y con este nuevo sitio web pretende alcanzar más difusión") (updated nil "2012-12-04T12:53:05Z") (category ((term . "proyectos"))) (category ((term . "plone"))) (author nil (name nil "mlizarralde")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry ((xml:lang . "en-us")) (id nil "http://blog.noenieto.com/blog/html/2012/11/20/tutorial_de_git_con_windoze.html") (link ((href . "http://blog.noenieto.com/blog/html/2012/11/20/tutorial_de_git_con_windoze.html") (rel . "alternate") (type . "text/html"))) (title nil "Tutorial de Git con windoze") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "tutorial-de-git-con-windoze")) (h1 nil "Tutorial de Git con windoze") (p nil "Este es mi tutorial de " (a ((class . "reference external") (href . "http://git-scm.com/")) "git") " para Winshit. Me caga usar
winblows, pero reconozco que no todo el mundo es perfecto y muchas veces hay
que trabajar con lo que hay.") (p nil "Además, tengo un amigo que es diseñador y pues nos interesa mas que diseñe
bonito a que se vuelva experto en git, así que por eso hago este tutorial.") (p nil "Hay un montón de documentación acerca de git en español en inglés y me dió
flojera revisarla, así que pensé que esto sería buen tema para escribir en mi
blog. Solo voy a resumir el " (a ((class . "reference external") (href . "http://git-scm.com/book")) "libro de git") " (que
esta en inglés), pero en español y con mis propias palabras.") (div ((class . "section") (id . "primero-la-historia-de-git")) (h2 nil "Primero la historia de Git") (p nil (a ((class . "reference external") (href . "https://plus.google.com/+LinusTorvalds")) "Linus Torvalds") " escribió el kernel
de Linux y por muchos años estuvo administrando las colaboraciones de cientos
de personas mediante emails y parches. Pero llegó un momento en que las cosas
se volvieron demasiado grandes y hubo que empezar a usar un sistema de control
de versiones. Como a Linus le asqueaba CVS (un sistema de control de versiones
de la era del caldo) y SVN, comenzó a usar un sistema propietario llamado
BitKeeper. La decisión le cayó de la patada a la comunidad de software libre,
pero a Linus le importó un bledo hasta que las limitaciones de BitKeeper le
asquearon también y prefirió escribir su propio sistema de control de
versiones desde cero ¡Vaya tipo!") (p nil "Puedes leer la mini-historia oficial en la " (a ((class . "reference external") (href . "http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git")) "página oficial de git") " que esta en inglés,
por supuesto.")) (div ((class . "section") (id . "que-eso-de-control-de-versiones")) (h2 nil "¿Qué eso de control de versiones?") (p nil "Es un sistema ideado para mantener un registro al por menor de los cambios que
se le hacen a un proyecto que contiene archivos de computadora. El sistema de
control sirve para responder cuestiones bastante importantes en ciertos casos
como:") (blockquote nil (div nil (ul ((class . "simple")) (li nil "Modifiqué un montón de cosas y ahora el proyecto ya no funciona ¿Qué fue lo
que le cambié? ¿Cómo lo regreso a la normalidad?") (li nil "¿Quién fue el que descompuso el proyecto?") (li nil "Hace varias semanas borramos algunas partes del proyecto y ahora hay que
volver a hacerlas. ¿Puedo regresar el tiempo para ver cómo estaba el
proyecto antes y copiar lo que necesito ahora?") (li nil "Fulano, Mengano y Perengano me estan mandando sus cambios, pero lo que me
mandan no sirve por que no tiene integrado mis últimas modificaciones y tengo
que estar adaptándolas ¿Hay manera de que ellos siempre esten en sincronía con
mi versión del proyecto?") (li nil "Un hacker/virus/troyano se metió a mi compu y se conectó a todos mis sitios web
e inyectó código malicioso en mis páginas con PHP y ahora Chrome y Firefox
sacan alarmas de todo tipo por que dicen que mis sitios están reportados como
sitios que bajan troyanos y virus. ¿Cómo se qué archivos fueron modificados?")))) (p nil "¿Te identificas con alguna de estas situaciones? Si la respuesta es " (em nil "no") "
entonces significa que use malos ejemplos y que tendrás que buscar otros por
que nos movemos a lo que sigue XD. Pero el chiste es que tener un sistema de
control de versiones es buena idea y además es estar a la moda. Punto.") (p nil "Luego, hay diferentes maneras de mantener el control de los cambios de tus
proyectos. Por ejemplo, la manera más común en la que la gente mantiene
control de las versiones de sus proyectos es haciendo copias de la carpeta del
proyecto cada vez que hacen cambios. Sería una cosa parecida a esto:") (div ((class . "highlight-python")) (pre nil "proyecto_chido_1/
proyecto_chido_1_bis/
proyecto_chido_pepis/
proyecto_chIdo_lfkjf/
proyecto_chido_22-feb-200/
proyecto_chido_bueno+++.zip
proyecto_chido_bueno--++.zip.doc")) (p nil "Y así ... ewwww") (p nil "Entonces vienen los sistemitas de control de versiones y ahora solo tendrías
una carpeta por cada proyecto:") (div ((class . "highlight-python")) (pre nil "mis_proyectos/
              cliente_a/
              cliente_b/
              cliente_c/")) (p nil "Todo más ordenado ¿No?")) (div ((class . "section") (id . "centralizado-vs-local")) (h2 nil "Centralizado vs local") (p nil "Cuando un sistema de control de versiones está centralizado, significa que hay
una computadora central conectada a la red con la que te debes de comunicar
cuando quieras registrar cambios. Subversion es uno de esos.") (p nil "Cuando un sistema de control de versiones es local, significa que hay cierta
base de datos en el disco duro de tu computadora que va registrando los
cambios. " (strong nil "Git") " es uno de esos y registra los cambios que vayas haciendo en
una carpeta especial en el directorio principal de tu proyecto.") (p nil "Si quieres más detalles de las diferencias " (a ((class . "reference external") (href . "http://git-scm.com/book/en/Getting-Started-About-Version-Control")) "lee aquí") ".") (p nil "Pero " (strong nil "Git") " es algo flexible y aunque todos tus cambios se deben registrar
localmente, " (strong nil "git") " lo hace relativamente fácil para subir y bajar cambios
desde y hacia una computadora central. Osea que Linus si hizo bien su trabajo
y tenemos lo mejor de los dos mundos.")) (div ((class . "section") (id . "instalando-git-en-tu-winshit")) (h2 nil "Instalando git en tu winshit") (p nil "Ahora un poquito de “Next, next, next”. Métete a " (a ((class . "reference external") (href . "http://windows.github.com")) "http://windows.github.com") "
y picale en el botón grande verde que dice “Download”  y corre el programita
que baja. A la hora de escribir esto el programa se llamaba
" (tt ((class . "docutils literal")) (span ((class . "pre")) "GitHubSetup.exe")) " pero igual y luego se les aloca a los de GitHub y le
cambian el nombre. Sólo asegurate de lo estes bajando de la web de github.") (p nil "Nota: Resulta que este programa que acabas de instalar esta hecho por
GitHub Inc. y obviamente todo tendrá que ver con GitHub. Si no usas GitHub
aún puedes usar la linea de comandos de windows para clonar un repositorio
y administrarlo con este software.") (p nil "La línea de comandos de git la encuentras en: " (tt ((class . "docutils literal")) (span ((class . "pre")) "Programas") (span ((class . "pre")) "->") (span ((class . "pre")) "GitHub,") (span ((class . "pre")) "Inc.") (span ((class . "pre")) "->") (span ((class . "pre")) "Git") (span ((class . "pre")) "Shell")) ". Cuando lo ejecutas sale una consola de windows (o de PowerShell
si es que lo tienes instalado.) Considera esto como el modo " (em nil "avanzado") " de git
y ahí no hay botoncitos. Tendrás que escribir cosas como si escribieras en la
barra de búsqueda del navegador web o de Google.")) (div ((class . "section") (id . "te-acuerdas-de-ms-dos")) (h2 nil "¿Te acuerdas de MS-DOS?") (p nil "No se si llegaste a usar MS-DOS. Muchos usuarios de computadora de hoy en día
no lo conocieron o nunca lo aprendieron a usar. El predecesor de Windows fue
MS-DOS (también distribuido por Microsoft). MS-DOS no era gráfico ni tenía
botoncitos, imagenes ni todas esas chuladas con las que ahora se entretienen
los usuarios de computadora. MS-DOS era puro texto y se manejaba con
" (em nil "comandos") ". El modo texto no se ha desvanecido, al contrario, gracias a Linux
y OSX la interfaz de línea de comando se ha quedado muy engranada en el
corazón de los usuarios de computadora expertos, pues puedes hacer cosas mucho
más rápido que con el mouse y los botones.") (p nil "Aquí te van algunos comandos que te van a servir.") (p nil "Comenzamos con lo básico de invocar invocar algún programa, simplemente
escribes su nombre y después presionas la tecla " (tt ((class . "docutils literal")) (span ((class . "pre")) "<<enter>>>")) ". Por ejemplo,
el nombre del administrador de archivos es es: " (tt ((class . "docutils literal")) (span ((class . "pre")) "explorer.exe")) " y para lanzar
una ventana de este simplemente escribes:") (div ((class . "highlight-python")) (div ((class . "highlight")) (pre nil (span ((class . "n")) "explorer")))) (p nil "o:") (div ((class . "highlight-python")) (div ((class . "highlight")) (pre nil (span ((class . "n")) "explorer") (span ((class . "o")) ".") (span ((class . "n")) "exe")))) (p nil "Pero " (tt ((class . "docutils literal")) (span ((class . "pre")) "explorer")) " es más corto ¿No?") (p nil "Recuerda, en MS-DOS las cosas no son automáticas y MS-DOS se quedará esperando
a que le des instrucciones (escritas) y aún así no hará nada hasta que
presiones " (tt ((class . "docutils literal")) (span ((class . "pre")) "<<enter>>")) " MS-DOS es tonto y poderoso. Solo necesita un cerebro y
tu se lo vas a dar.") (p nil "Luego, para listar los contenidos de un directorio puedes usar el comando
" (tt ((class . "docutils literal")) (span ((class . "pre")) "dir")) " y el resultado de este comando es algo así:") (div ((class . "highlight-python")) (pre nil "C:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub>dir
 El volumen de la unidad C no tiene etiqueta.
 El número de serie del volumen es: F85F-6785

 Directorio de C:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub

13/11/2012  21:51    <DIR>          .
13/11/2012  21:51    <DIR>          ..
13/11/2012  21:17    <DIR>          directorio
13/11/2012  21:17                   archivo.txt
               0 archivos              0 bytes
               3 dirs   5.772.095.488 bytes libres")) (p nil "Luego, para cambiarte de directorio:") (div ((class . "highlight-python")) (pre nil "cd directorio
cd c:\\windows
cd \"c:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub\\mi_repo\"")) (p nil "En MS-DOS y en Winshit, los nombres de archivo y directorio no tienen
distinción por minúsculas o mayúsculas. Entonces, el archivo odio_windows.txt
y OdIo_WinDoWS.TxT es el mismo. Esto no se cumple, por fortuna, para sistemas
tipo unix como Linux, OSX o Ios.") (p nil "Para hacer un directorio puedes usar " (tt ((class . "docutils literal")) (span ((class . "pre")) "mkdir")) ":") (div ((class . "highlight-python")) (pre nil "mkdir mi_repositorio")) (p nil "Para cambiarte de unidad simplemente escribes la letra de la unidad seguida de
dos puntos:") (div ((class . "highlight-python")) (pre nil "c:
d:
e:
f:")) (p nil "Y eso es todo de MS-DOS. Hay mucho más, pero confío en que sabrás buscarlo en
google o que te esperes a que escriba algo al respecto.")) (div ((class . "section") (id . "ahora-si-el-workflow")) (h2 nil "Ahora si, el workflow") (p nil "Pensaba centrarme principalmente en poner fotitos de dónde picarle en en la
aplicación de GitHub, pero mejor te voy a enseñar la manera geek de usar git.
No es tan difícil y sólo necesitas un par de comandos de MS-DOS (ver arriba).") (div ((class . "section") (id . "crear-un-repo")) (h3 nil "0.- Crear un repo") (p nil "Este puede ser el primer paso o no. Realmente solo se hace una vez y se trata
de convertir un directorio común y corriente en un repositorio local de Git:") (div ((class . "highlight-python")) (pre nil "git init")) (p nil "¡Eso es todo!")) (div ((class . "section") (id . "clonar-un-repo")) (h3 nil "1.- Clonar un repo") (p nil "Generalmente este es el primer paso del flujo de trabajo. Tienes que obtener
una copia del repositorio en tu disco duro y lo más común es obtenerlo de un
repositorio remoto como GitHub, BitBucket o Assembla:") (div ((class . "highlight-python")) (pre nil "git clone <dirección_del_repositorio>")) (p nil "La dirección del repositorio tiene un esquema parecido al de una URL. Puede
empezar con " (tt ((class . "docutils literal")) (span ((class . "pre")) "http://")) " o con " (tt ((class . "docutils literal")) (span ((class . "pre")) "git://")) " e incluso con " (tt ((class . "docutils literal")) (span ((class . "pre")) "ssh://")) ". Para este
último tendremos que tener configurada una llave SSH.")) (div ((class . "section") (id . "bajar-los-cambios-que-otros-han-hecho")) (h3 nil "2.- Bajar los cambios que otros han hecho") (p nil "Si clonaste un repo es muy probable que estes colaborando con otros. Si es
así, lo primero que debes hacer es bajar los cambios que hayan realizado tus
colegas para que tengas un repositorio fresco y no tengas conflictos. También
realiza esto cuando te avisen que metieron cambios a tu repositorio:") (div ((class . "highlight-python")) (pre nil "git pull origin master")) (p nil "Algunas veces es suficiente con escribir " (tt ((class . "docutils literal")) (span ((class . "pre")) "git") (span ((class . "pre")) "pull")))) (div ((class . "section") (id . "hacer-tus-cambios")) (h3 nil "3.- Hacer tus cambios") (p nil "Es solo un directorio con archivos. Ya sabes qué hacer.")) (div ((class . "section") (id . "saber-lo-que-has-cambiado")) (h3 nil "4.- Saber lo que has cambiado") (p nil "Git controla los cambios que le vas haciendo a los archivos de un repositorio.
Esto es muy útil para hacer una revisión de lo que has hecho.:") (div ((class . "highlight-python")) (pre nil "git diff")) (p nil "El comando git diff imprimirá en la consola un listado de las diferencias que
hay entre la última version del repositorio y lo que has cambiado. Lo nuevo se
verá en color verde y lo que has borrado se verá en color rojo.") (p nil "Obviamente, para archivos binarios (como imágenes o archivos de word) sólo
verás un resúmen de cuántos bytes se han insertado y cuántos se han borrado.")) (div ((class . "section") (id . "registrar-o-guardar-tus-cambios")) (h3 nil "5.- Registrar o guardar tus cambios") (p nil "Cuando has terminado de hacer tus cambios es hora de hacer un " (em nil "commit") ". Esto
equivale a darle un “Guardar” en tu editor de texto favorito, pero para el
repositorio.") (p nil "La manera más fácil (aunque no la única) es:") (div ((class . "highlight-python")) (pre nil "git commit -am \"Descripción de los cambios\"")) (p nil "No olvides poner los espacios y poner un mensaje descriptivo de los cambios
entre comillas. No seas flojo y describe bien las cosas que has hecho.")) (div ((class . "section") (id . "compartir-tus-cambios")) (h3 nil "6.- Compartir tus cambios") (p nil "Este es el paso final de un típico día de trabajo con Git. Ya sincronizaste tu
repositorio con los últimos cambios (si es que estas colaborando con alguien),
hiciste tu trabajo y cambiaste algunos archivos y por último registraste tus
cambios en tu copia local.") (p nil "Ahora es momento de compartir tus cambios con tus colegas.:") (div ((class . "highlight-python")) (pre nil "git push")) (p nil "¡Y eso es todo! ¿Se ve difícil?"))) (div ((class . "section") (id . "mas-informacion-acerca-de-git")) (h2 nil "Más información acerca de Git") (ul ((class . "simple")) (li nil "El libro de git en spanglish –> " (a ((class . "reference external") (href . "http://git-scm.com/book/es/")) "http://git-scm.com/book/es/")) (li nil "La página de wikipedia acerca de Git –> " (a ((class . "reference external") (href . "http://es.wikipedia.org/wiki/Git")) "http://es.wikipedia.org/wiki/Git")) (li nil "Chistes gráficos acerca de Git –> " (a ((class . "reference external") (href . "http://wheningit.tumblr.com/")) "http://wheningit.tumblr.com/"))))))) (updated nil "2012-11-20T03:00:00Z") (category ((term . "Español"))) (category ((term . "Programación"))) (category ((term . "Git"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/plone-4-mejoras-y-ventajas") (link ((href . "http://www.codesyntax.com/es/blog/plone-4-mejoras-y-ventajas") (rel . "alternate") (type . "text/html"))) (title nil "Plone 4, mejoras y ventajas") (summary nil "Gran parte de los proyectos que desarrollamos en nuestra empresa los hacemos utilizando  el gestor de contenidos de software libre Plone. Este CMS basado en Zope es una de nuestras señas tecnológicas, junto a Django, ya que lo usamos y promovemos desde hace años.") (updated nil "2012-10-31T10:07:16Z") (category ((term . "plone"))) (author nil (name nil "mlizarralde")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/plone-app-multilingual-multilinguismo-de-nueva-generacion-para-plone") (link ((href . "http://www.codesyntax.com/es/blog/plone-app-multilingual-multilinguismo-de-nueva-generacion-para-plone") (rel . "alternate") (type . "text/html"))) (title nil "plone.app.multilingual: multilingüismo de nueva generación para Plone") (summary nil "Con la inclusión de Dexterity en el paquete de base de Plone, la parte de multilingüe se quedaba coja en Plone al no funcionar LinguaPlone con Dexterity. plone.app.multilingual (o pam como les gusta a los autores que se le llame al producto), viene a solucionar dicho problema: un sustituto puro de LinguaPlone y funcionamiento tanto en Archetypes como en Dexterity. ¿Quién da más?") (updated nil "2012-10-24T13:46:41Z") (category ((term . "i18n"))) (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/nuevo-sitio-web-de-bilbao-kirolak") (link ((href . "http://www.codesyntax.com/es/blog/nuevo-sitio-web-de-bilbao-kirolak") (rel . "alternate") (type . "text/html"))) (title nil "Nuevo sitio web de Bilbao Kirolak") (summary nil "Después de trabajar arduamente durante varios meses, ayer 17 de mayo, publicamos el nuevo sitio web de Bilbao Kirolak, la entidad entidad pública encargada del desarrollo del deporte en Bilbao.") (updated nil "2012-10-24T12:59:42Z") (category ((term . "proyectos"))) (category ((term . "bilbaokirolak"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/estado-del-arte-en-plone-2011") (link ((href . "http://www.codesyntax.com/es/blog/estado-del-arte-en-plone-2011") (rel . "alternate") (type . "text/html"))) (title nil "Estado del arte en Plone, 2011") (summary nil "Después de la crónica del primer día que hicimos en el blog desde la Conferencia Plone de San Francisco, hemos recogido otro montón de apuntes de las presentaciones y charlas rápidas que nos parecieron más interesantes. Dejaremos para un artículo final el caso de las tres D's (Deco, Dexterity, Diazo), pero en este post de hoy, tenéis todo un potpourri que describe, en cierta manera, cual es el estado del arte en el CMS Plone, a finales de 2011.") (updated nil "2012-10-24T12:57:05Z") (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "lur")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry nil (id nil "http://www.codesyntax.com/es/blog/preparando-las-maletas-para-arnhem") (link ((href . "http://www.codesyntax.com/es/blog/preparando-las-maletas-para-arnhem") (rel . "alternate") (type . "text/html"))) (title nil "Preparando las maletas para Arnhem") (summary nil "La conferencia Plone de este año se organizará en Holanda, en Arnhem, donde nos juntaremos usuarios y desarrolladores venidos de todo el mundo.") (updated nil "2012-10-24T12:56:32Z") (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z"))) (entry ((xml:lang . "en-us")) (id nil "http://blog.noenieto.com/blog/html/2012/10/20/my_first_issue_with_meteor_solved.html") (link ((href . "http://blog.noenieto.com/blog/html/2012/10/20/my_first_issue_with_meteor_solved.html") (rel . "alternate") (type . "text/html"))) (title nil "My first issue with meteor solved quickly") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "my-first-issue-with-meteor-solved-quickly")) (h1 nil "My first issue with meteor solved quickly") (p nil "Today I was hacking on my first app with " (a ((class . "reference external") (href . "http://meteor.com/")) "Meteor") " and I
stumbled upon the following issue right after running the application for the
first time:") (div ((class . "highlight-javascript")) (pre nil "[tzicatl@hormiga-gris preguntame]$ meteor
[[[[[ ~/Aplicaciones/Codigo/Meteor/preguntame ]]]]]

Running on: http://localhost:3000/

fs.js:837
    throw errnoException(errno, 'watch');
          ^
Error: watch ENOSPC
    at errnoException (fs.js:806:11)
    at FSWatcher.start (fs.js:837:11)
    at Object.fs.watch (fs.js:861:11)
    at _.extend._scan (/usr/lib64/meteor/app/meteor/run.js:355:24)
    at Array.forEach (native)
    at Function._.each._.forEach (/usr/lib64/meteor/app/lib/third/underscore.js:76:11)
    at new DependencyWatcher (/usr/lib64/meteor/app/meteor/run.js:291:5)
    at exports.run.start_watching (/usr/lib64/meteor/app/meteor/run.js:490:17)
    at exports.run.restart_server (/usr/lib64/meteor/app/meteor/run.js:547:5)
    at /usr/lib64/meteor/app/meteor/run.js:607:9")) (p nil "I found " (a ((class . "reference external") (href . "http://stackoverflow.com/questions/10129496/error-starting-todos-example")) "this thread") " on StackOverflow, but that specific workaround
didn’t work out well. So the user " (em nil "Lander") " gave me a kind hand and suggested
that I should tweak " (tt ((class . "docutils literal")) (span ((class . "pre")) "fs.inotify.max_user_watches")) " and set it to " (tt ((class . "docutils literal")) (span ((class . "pre")) "10000")) ".") (p nil "So, I combined both solutions (the one from StackOverflow and the other form
Lander) and this fixed the issue:") (div ((class . "highlight-javascript")) (pre nil "# echo 10000 > /proc/sys/fs/inotify/max_user_watches
# echo 10000 > /proc/sys/fs/inotify/max_user_instances")) (p nil "Back to hacking again :)")))) (updated nil "2012-10-20T03:00:00Z") (category ((term . "English"))) (category ((term . "Programming"))) (category ((term . "JavaScript"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z"))))) ("Instalación de paquetes Python con Distribute y pip" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (p nil \"Previamente explique como hacer instalar paquetes \" (a ((href . \"http://python.org/\") (target . \"_blank\") (title . \"Python\")) \"Python\") \" con \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\") (target . \"_blank\") (title . \"Instalación de paquetes Python con setuptools y EasyInstall\")) \"setuptools y EasyInstall\") \" y ahora le presento la manera actualmente mas recomendada para instalar paquetes \" (a ((href . \"http://python.org/\") (target . \"_blank\") (title . \"Python\")) \"Python\") \" con las herramientas \" (strong nil \"Distribute\") \" y \" (strong nil \"pip\") \".\") (h1 nil \"Introducción\") (div ((class . \"wp-caption aligncenter\") (style . \"width: 310px;\")) (a ((href . \"http://python.org/\") (target . \"_blank\")) (img ((alt . \"Python\") (class . \"  \") (height . \"89\") (src . \"http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png\") (width . \"300\")))) (p ((class . \"wp-caption-text\")) \"Python\")) (p nil (a ((href . \"http://python.org/\") (target . \"_blank\") (title . \"Python\")) \"Python\") \", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.\") (div ((id . \"que-es-distribute\")) (h2 nil \"¿Qué es Distribute?\") (p nil (a ((href . \"http://packages.python.org/distribute\")) \"Distribute\") \" es un conjunto de mejoras en el módulo de la biblioteca estándar de Python: \" (a ((href . \"http://docs.python.org/3/library/distutils.html\")) \"distutils\") \" (para Python 2.3.5 y hasta en la mayoría de las plataformas, plataformas de 64 bits requieren como mínimo de Python 2.4) que le permite crear con más facilidad la distribución de paquetes de Python, en especial los que tienen las dependencias de otros paquetes.\") (p nil (strong nil (tt nil \"Distribute\")) \" se creó porque el \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\")) (em nil \"paquete Setuptools\")) \" actualmente ya no se mantiene. Los paquetes de terceros, es probable que requieran \" (strong nil \"setuptools\") \", que es proporcionado por el paquete \" (strong nil (tt nil \"Distribute\")) \". Por lo tanto, en cualquier momento si los paquetes dependen del \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\")) (em nil \"paquete Setuptools\")) \", \" (strong nil (tt nil \"Distribute\")) \" intervendrá para decir que ya ofrece el módulo de \" (strong nil (tt nil \"setuptools\")) \".\") (p nil (img ((alt . \"Move from Setuptools to Distribute\") (class . \"aligncenter\") (src . \"http://plone-spanish-docs.readthedocs.org/en/latest/_images/pip_distribute.png\")))) (div ((id . \"estado-actual-del-empaquetamiento-en-python\")) (h3 nil \"Estado actual del Empaquetamiento en Python\") (p nil \"El módulo \" (strong nil (tt nil \"distutils\")) \" es parte de la \" (a ((href . \"http://guide.python-distribute.org/glossary.html#term-standard-library\") (target . \"_blank\")) \"librería estándar\") \" de Python y aun lo será hasta la versión Python 3.3.\") (p ((style . \"padding-left: 30px;\")) (span ((style . \"text-decoration: underline;\")) (strong nil \"Nota:\")) \" El módulo \" (strong nil (tt nil \"distutils\")) \" será descontinuado en Python 3.3.\") (p nil \"El módulo \" (strong nil (tt nil \"distutils2\")) \" (note el número \" (strong nil \"dos\") \") tendrá compatibilidad hacia atrás hasta Python 2.4 en adelante; y será parte de la \" (a ((href . \"http://guide.python-distribute.org/glossary.html#term-standard-library\") (target . \"_blank\")) \"librería estándar\") \" en la versión Python 3.3.\") (p nil \"El módulo \" (strong nil (tt nil \"distutils\")) \" provee las bases para empaquetar aplicaciones Python. Desafortunadamente, el módulo \" (strong nil (tt nil \"distutils\")) \" está plagado de problemas, razón por la cual un pequeño grupo de programadores de Python están trabajando en \" (strong nil (tt nil \"distutils2\")) \". Sin embargo, hasta que \" (strong nil (tt nil \"distutils2\")) \" este completado, se recomienda que en el desarrollador pueda usar tanto el paquete \" (strong nil (tt nil \"distutils\")) \" como el paquete \" (strong nil (tt nil \"Distribute\")) \" para empaquetar software Python.\") (p nil \"Al mismo tiempo, si un paquete requiere el \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\") (target . \"_blank\")) (em nil \"paquete Setuptools\")) \", la recomendación es que instale el paquete \" (strong nil (tt nil \"Distribute\")) \", el cual provee una versión más actualizada del \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\") (target . \"_blank\")) (em nil \"paquete Setuptools\")) \" que el \" (a ((href . \"http://pypi.python.org/pypi/setuptools/\") (target . \"_blank\")) \"paquete original de Setuptools\") \".\") (p nil \"En el \" (a ((href . \"http://guide.python-distribute.org/future.html\") (target . \"_blank\")) \"futuro\") \" \" (strong nil (tt nil \"distutils2\")) \" remplazará a \" (strong nil (tt nil \"setuptools\")) \" y \" (strong nil (tt nil \"distutils\")) \", le cual también removerá la necesidad de \" (strong nil (tt nil \"Distribute\")) \". El como del estado anterior \" (strong nil (tt nil \"distutils\")) \" será removido de la \" (a ((href . \"http://guide.python-distribute.org/glossary.html#term-standard-library\") (target . \"_blank\")) \"librería estándar\") \". Para más información, por favor, consulte el \" (a ((href . \"http://guide.python-distribute.org/future.html\") (target . \"_blank\")) \"Futuro del Empaquetado\") \" en Python.\") (p nil (img ((alt . \"El estado actual de Empaquetado en Python\") (class . \"aligncenter\") (src . \"http://plone-spanish-docs.readthedocs.org/en/latest/_images/state_of_packaging.jpg\")))) (div nil (p ((style . \"padding-left: 30px;\")) (span ((style . \"text-decoration: underline;\")) (strong nil \"Consejo\"))) (p ((style . \"padding-left: 30px;\")) \"Ver el vídeo de la \" (a ((href . \"http://us.pycon.org/2011/schedule/presentations/81/\") (target . \"_blank\")) \"PyCon 2011 – Packaging, from Distutils to Distutils2\") \", Packaging or installing a Python application can be extremely painful por \" (a ((href . \"http://tarekziade.wordpress.com/\") (target . \"_blank\")) \"Tarek Ziadé\") \" esta charla le sumergiera dentro de las nuevas características de Distutils2 y explica como usted puede usarlo en su proyecto \" (em nil \"hoy\") \" para hacer más fácil la vida para todo el mundo (usuarios, administradores de paquetes de Sistemas operativos, programadores, etc.).\") (p ((style . \"padding-left: 30px;\")) \"Para descargar el vídeo \" (a ((href . \"http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4\") (target . \"_blank\")) \"haga clic aquí\") \" (\" (strong nil (em nil \"Tamaño 294 mb\")) \") y para ver por vídeo Stream haga \" (a ((href . \"http://pycon.blip.tv/file/4880990\") (target . \"_blank\")) \"clic aquí\") \".\")))) (div ((id . \"que-es-pip\")) (h2 nil \"¿Qué es pip?\") (p nil (a ((href . \"http://pypi.python.org/pypi/pip\") (target . \"_blank\")) \"pip\") \" es una herramienta para instalar y administrar \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"Paquetes Python\")) \", como los que podemos encontrar en el Índice de Paquetes de Python - \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"PyPI\")) \".\") (p ((style . \"padding-left: 30px;\")) (strong nil (span ((style . \"text-decoration: underline;\")) \"Truco\"))) (p ((style . \"padding-left: 30px;\")) \"Esta herramienta es el remplazo para la famosa herramienta \" (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\") (target . \"_blank\")) (em nil \"easy_install\")) \".\") (p nil \"En su mayoría, \" (strong nil (tt nil \"pip\")) \" utiliza las mismas técnicas para encontrar los paquetes, por lo que los paquetes que se instalaban usando la herramienta \" (strong nil (tt nil \"easy_install\")) \"  también deben ser instalables con la herramienta \" (strong nil (tt nil \"pip\")) \".\") (p nil \"Esto significa que usted puede utilizar con el siguiente comando:\") (div nil (div nil (pre nil \"$ pip install AlgunPaquete\"))) (p nil \"En lugar del tradicional comando usado con la herramienta \" (strong nil (tt nil \"easy_install\")) \" como se describe a continuación:\") (div nil (div nil (pre nil \"$ easy_install AlgunPaquete\"))) (div ((id . \"pip-comparado-con-easy-install\")) (h3 nil \"pip comparado con easy_install\") (p nil (strong nil (tt nil \"pip\")) \" ofrece mejoras a la herramienta \" (strong nil \"easy_install\") \". Algunas de las mejoras son:\") (ul nil (li nil \"Todos los paquetes se descargan antes de iniciar la instalación. Una instalación parcialmente completada no se produce como resultado.\") (li nil \"Tiene cuidado de presentar una salida útil en la consola.\") (li nil \"Las razones de las acciones de instalación se le aplica un seguimiento. Por ejemplo, si un paquete se está instalando, \" (strong nil (tt nil \"pip\")) \" sigue la pista de por qué ese paquete era necesario.\") (li nil \"Los mensajes de error debe ser útiles.\") (li nil \"El código fuente es relativamente conciso y coherente, por lo que es más fácil de usar mediante programación.\") (li nil \"Ofrece soporte nativo para otros sistemas de control de versiones (Git, Mercurial y Bazaar)\") (li nil \"Tiene un mecanismo de desinstalación de paquetes.\") (li nil \"Fácil de definir conjuntos de requerimientos y reproducir de forma fiable un conjunto de paquetes.\") (li nil \"Los paquetes no tienen que ser instaladas como archivos de huevo, que pueden ser instalados en forma plana (mientras cuida la \" (em nil \"metadata\") \" de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \").\"))) (div ((id . \"pip-no-hacer-todo-lo-que-se-easy-install-en-concreto\")) (h3 nil \"pip no hacer todo lo que se easy_install. En concreto:\") (ul nil (li nil \"No se puede instalar a partir de \" (a ((href . \"http://lcaballero.wordpress.com/tag/plone/glosario.html#term-paquetes-egg\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \". Sólo se instala desde el código fuente. (En el futuro será bueno si se pudiera instalar los binarios de Windows EXE o MSI -.. pero instalar paquetes binarios para otras plataformas no es una prioridad).\") (li nil \"No entiende la sección \" (em nil \"SetupTools Extras\") \" (como package[test]). Esto podría ser agregado eventualmente.\") (li nil \"Es incompatible con algunos paquetes que tienen muchas personalizaciones \" (strong nil (tt nil \"distutils\")) \" o \" (strong nil (tt nil \"setuptools\")) \" en sus archivos \" (strong nil \"setup.py\") \".\")))) (div ((id . \"instrucciones-de-instalacion\")) (div ((id . \"instrucciones-de-instalacion\")) (h2 nil \"Instrucciones de Instalación\" (a ((href . \"http://lcaballero.wordpress.com/tag/plone/feed/#instrucciones-de-instalacion\") (title . \"Enlazar permanentemente con este título\")) (br nil))) (p nil \"Siempre existen más de dos formas de instalar paquetes Python con \" (strong nil (tt nil \"Distribute\")) \" y \" (strong nil (tt nil \"pip\")) \" ;)\") (div ((id . \"requerimientos-previos\")) (h3 nil \"Requerimientos previos\") (p nil \"Es necesario que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:\") (div nil (div nil (pre nil \"# aptitude install build-essential python-dev python-setuptools\")))) (div ((id . \"instalacion-con-paquetes-egg\")) (h3 nil \"Instalación con Paquetes Egg\") (p nil \"Para instalar \" (strong nil (tt nil \"Distribute\")) \" ejecute el siguiente comando:\") (div nil (div nil (pre nil \"# easy_install -U distribute\"))) (p nil \"También para instalar \" (strong nil (tt nil \"pip\")) \" ejecute el siguiente comando:\") (div nil (div nil (pre nil \"# easy_install -U pip\")))) (div ((id . \"instalacion-en-sistemas-debian\")) (h3 nil \"Instalación en sistemas Debian\") (p nil \"La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:\") (div nil (pre nil \"# aptitude install build-essential python-dev python-pip\"))))) (div ((id . \"ejemplos-de-uso-de-pip\")) (h2 nil \"Ejemplos de uso de pip\") (p nil \"El script \" (strong nil (tt nil \"pip\")) \" ofrece varias formas de uso, para instalar los paquetes de diversas fuentes:\") (p ((style . \"padding-left: 30px;\")) (strong nil \"Consejo:\") \" Para poder utilizar el \" (strong nil (tt nil \"pip\")) \", primero debe instalar \" (strong nil (tt nil \"setuptools\")) \" o \" (strong nil (tt nil \"distribute\")) \". Si utiliza \" (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\") (title . \"virtualenv\")) (em nil \"virtualenv\")) \", una copia del \" (strong nil (tt nil \"pip \")) \"será automáticamente instalados en cada entorno virtual que usted crea.\") (p ((style . \"padding-left: 30px;\")) (strong nil \"easy_install\") \" se puede complementar con \" (strong nil \"virtualenv\") \", y se recomienda que lo utilice para \" (em nil (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\") (title . \"aislar a la instalación\")) \"aislar a la instalación\") \" \") \"de los \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\") (title . \"paquetes Egg\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \".\") (p nil (strong nil \"Ejemplo 1.\") \" Instalar un paquete su nombre en su versión más reciente, buscando en \" (a ((href . \"http://lcaballero.wordpress.com/tag/plone/glosario.html#term-pypi\")) (em ((title . \"See the definition\")) \"PyPI\")) \":\") (div nil (div nil (pre nil \"$ pip install SQLObject\"))) (p nil (strong nil \"Ejemplo 2.\") \" Instalar o actualizar un paquete por nombre y versión utilizando una dirección URL donde encontradas en una “página de descargas”:\") (div nil (pre nil \"$ pip install -f http://dist.plone.org/packages/ 'Pillow==1.7.3'\")) (p nil (strong nil \"Ejemplo 3.\") \" Instalar o actualizar un paquete desde su propio \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi\") (target . \"_blank\")) (em nil \"replica del repositorio PyPI\")) \" o su repositorio de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" privados:\") (div nil (div nil (pre nil \"$ pip install -i http://pypi.ejemplo.com/simple SQLObject\"))) (p nil (strong nil \"Ejemplo 4.\") \" Descargar e instalar una distribución de código fuente:\") (div nil (div nil (pre nil \"$ pip install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz\"))) (p nil (strong nil \"Ejemplo 5.\") \" Instalar un paquete con una versión especifica:\") (div nil (div nil (pre nil \"$ pip install 'ZopeSkel==2.21.2'\"))) (p nil (strong nil \"Ejemplo 6.\") \" Instalar todas las dependencias de mi proyecto Python usando un archivo de dependencias requeridas para instalar:\") (div nil (div nil (pre nil \"$ pip install -r ./requirements.txt\"))) (p nil \"Un ejemplo del archivo \" (strong nil (tt nil \"requirements.txt\")) \" puede ser el siguiente:\") (div nil (div nil (pre nil \"python-ldap
django
buildbot
buildbot-slave
PyYAML
south\"))) (p nil (strong nil \"Ejemplo 7.\") \" Actualizar un paquete ya instalado con la versión más reciente de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"PyPI\")) \":\") (div nil (div nil (pre nil \"$ pip install --upgrade PyProtocols\"))) (p nil (strong nil \"Ejemplo 8.\") \" Para usar realizar búsquedas de paquetes disponibles para instalar desde los repositorios por definidos:\") (div nil (div nil (pre nil \"$ pip search plonetheme-*\"))) (p nil (strong nil \"Ejemplo 9.\") \" Para remover un \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquete Egg\"))) (div nil (div nil (pre nil \"$ pip uninstall SQLObject\"))) (p nil \"Para más información consulte la ayuda disponible por que paquete \" (strong nil (tt nil \"pip\")) \" ejecutando el siguiente comando:\") (div nil (div nil (pre nil \"$ pip help\")))) (div ((id . \"distribute-en-zc-buildout\")) (h2 nil \"Distribute en zc.buildout\") (p nil \"Puede usar \" (strong nil \"Distribute\") \" en \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"zc.buildout\")) \", habilitando el uso de este por medio de un parámetro adicional en su archivo \" (strong nil (tt nil \"bootstrap.py\")) \" de la siguiente manera:\") (div nil (div nil (pre nil \"$ python bootstrap.py --distribute\")))) (div ((id . \"pip-en-zc-buildout\")) (h2 nil \"pip en zc.buildout\") (p nil \"Existen varias estrategias para integrar \" (strong nil (tt nil \"pip\")) \" en \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"zc.buildout\")) \", a continuación se describen algunas formas:\") (p nil (a ((href . \"http://pypi.python.org/pypi/gp.recipe.pip\") (target . \"_blank\")) \"gp.recipe.pip\") \", ese paquete es un récipe de \" (strong nil (tt nil \"zc.buildout\")) \" el cual permite instalar \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-python\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"Paquete Python\")) \" usando \" (strong nil (tt nil \"pip\")) \". A continuación se explica un ejemplo de configuración \" (strong nil (tt nil \"zc.buildout\")) \" con este récipe se puede usar:\") (ol nil (li nil \"El récipe agrega un \" (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\")) (em nil \"virtualenv\")) \" en el directorio \" (strong nil (tt nil \"parts/\")) \" de su instalación buildout, entonces genera este binario para generar un scripts ejecutable Python. Así que tienes un área de pruebas \" (strong nil \"limpia\") \" de instalaciones previas.\") (li nil \"El récipe esta basado en \" (a ((href . \"http://pypi.python.org/pypi/zc.recipe.egg#id23\") (target . \"_blank\")) \"zc.recipe.egg#scripts\") \" para que pueda compartir sus \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" entre buildouts como de costumbre.\") (li nil \"Por supuesto, usted puede instalar algunos archivos \" (strong nil \".pybundle\") \".\") (li nil \"Usted puede construir paquetes desde un repositorio SVN con la opción \" (strong nil (tt nil \"editables\")) \".\") (li nil \"Cada linea encontrada en la opción \" (strong nil (tt nil \"install\")) \" es la última parte de un comando de \" (strong nil (tt nil \"pip\")) \". Esta le permitirá a usted construir \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" con sus dependencias. Por ejemplo, instalar la librería \" (a ((href . \"http://codespeak.net/lxml/\") (target . \"_blank\")) \"lxml\") \" en un área de prueba pura, sin tener instalado \" (strong nil (tt nil \"libxml2\")) \" y \" (strong nil (tt nil \"libxslt\")) \", usted necesita tener instalado \" (strong nil (tt nil \"Cython\")) \" y con esta línea de comando \" (strong nil (tt nil \"python setup.py install --static-deps\")) \" para instalar el paquete \" (a ((href . \"http://codespeak.net/lxml/\") (target . \"_blank\")) \"lxml\") \".\")) (p nil \"A continuación un ejemplo de configuración \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"zc.buildout\")) \":\") (div nil (div nil (pre nil \"[buildout]
# the cache dir is used by buildout & pip
download-cache = download
parts = eggs
[eggs]
recipe = gp.recipe.pip
# eggs installed by pip (also add the Deliverance bundle)
install =
Cython
--install-option=--static-deps lxml==2.2alpha1
http://deliverance.openplans.org/dist/Deliverance-snapshot-latest.pybundle
# eggs installed by zc.recipe.egg
eggs =
Paste
pyquery\"))) (p nil \"Otra forma de usar \" (strong nil (tt nil \"pip\")) \" es a través de una extensión \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"zc.buildout\")) \" llamada \" (a ((href . \"http://pypi.python.org/pypi/gp.vcsdevelop/\") (target . \"_blank\")) \"gp.vcsdevelop\") \", para hacer checkout de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" desde varios \" (a ((href . \"http://es.wikipedia.org/wiki/Control_de_versiones\") (target . \"_blank\")) \"sistemas de control de versiones\") \". A continuación se muestra un ejemplo de configuración \" (strong nil (tt nil \"zc.buildout\")) \" con esta extensión:\") (div nil (div nil (pre nil \"[buildout]
...
extensions = gp.vcsdevelop
develop-dir = ./requirements
requirements = requirements.txt
parts = eggs
...
[eggs]
recipe = zc.recipe.egg
eggs = ${buildout:requirements-eggs}
interpreter = python
...\"))) (p nil \"Un ejemplo del archivo \" (strong nil (tt nil \"requirements.txt\")) \" puede ser el siguiente:\") (div nil (div nil (pre nil \"ConfigObject>=1.0
-e git+git://github.com/bearstech/PloneTerminal.git#egg=PloneTerminal\")))) (div ((id . \"referencias\")) (h1 nil \"Ver también\") (p nil \"Le recomiendo consultar las siguientes enlaces para complementar el conocimiento adquirido en esta entrada en mi blog.\") (ul nil (li nil (a ((href . \"http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/\") (target . \"_blank\") (title . \"Instalación de paquetes Python con setuptools y EasyInstall\")) \"Instalación de paquetes Python con setuptools y EasyInstall\")) (li nil (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\") (title . \"Creación de entornos virtuales Python\")) \"Creación de entornos virtuales Python\"))) (p nil \"Espero sea de utilidad esta entrada en mi blog. Ayúdame a seguir escribiendo en mi blog y dona 1 dolar \" (a ((href . \"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted\") (target . \"_blank\") (title . \"Ayúdame y dona 1 dolar!\")) \"aquí\") \".\") (h2 nil \"Referencias\") (ul nil (li nil \"El articulo \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/python/distribute_pip.html\") (target . \"_blank\") (title . \"Distribute y pip\")) \"Distribute y pip\") \" desde la documentación de Plone en Español.\") (li nil (a ((href . \"http://guide.python-distribute.org/installation.html\") (target . \"_blank\")) \"Installing the Package Tools\") \".\") (li nil (a ((href . \"http://www.pip-installer.org/en/latest/index.html\") (target . \"_blank\")) \"pip v1.0.2 documentation\") \".\") (li nil (a ((href . \"http://www.gawel.org/weblog/en/2008/12/combine-zc.buildout-an-pip-benefits\") (target . \"_blank\")) \"Combine zc.buildout and pip benefits\") \".\"))) (br nil) (a ((href . \"http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1241/\") (rel . \"nofollow\")) (img ((alt . \" \") (border . \"0\") (src . \"http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1241/\")))) (img ((alt . \" \") (border . \"0\") (height . \"1\") (src . \"http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1241&subd=lcaballero&ref=&feed=1\") (width . \"1\"))))" "http://lcaballero.wordpress.com/2013/03/20/instalacion-de-paquetes-python-con-distribute-y-pip/" (20810 376) old 1 nil nil ((id nil "http://lcaballero.wordpress.com/?p=1241") (link ((href . "http://lcaballero.wordpress.com/2013/03/20/instalacion-de-paquetes-python-con-distribute-y-pip/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (link ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (length . "308477800") (rel . "enclosure") (type . "video/mp4"))) (title nil "Instalación de paquetes Python con Distribute y pip") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) "Previamente explique como hacer instalar paquetes Python con setuptools y EasyInstall y ahora le presento la manera actualmente mas recomendada para instalar paquetes Python con las herramientas Distribute y pip. Introducción Python, Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, … " (span ((class . "more-link")) (a ((href . "http://lcaballero.wordpress.com/2013/03/20/instalacion-de-paquetes-python-con-distribute-y-pip/")) "Continuar leyendo »")) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1241&subd=lcaballero&ref=&feed=1") (width . "1"))))) (content ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (p nil "Previamente explique como hacer instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank") (title . "Instalación de paquetes Python con setuptools y EasyInstall")) "setuptools y EasyInstall") " y ahora le presento la manera actualmente mas recomendada para instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con las herramientas " (strong nil "Distribute") " y " (strong nil "pip") ".") (h1 nil "Introducción") (div ((class . "wp-caption aligncenter") (style . "width: 310px;")) (a ((href . "http://python.org/") (target . "_blank")) (img ((alt . "Python") (class . "  ") (height . "89") (src . "http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png") (width . "300")))) (p ((class . "wp-caption-text")) "Python")) (p nil (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") ", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.") (div ((id . "que-es-distribute")) (h2 nil "¿Qué es Distribute?") (p nil (a ((href . "http://packages.python.org/distribute")) "Distribute") " es un conjunto de mejoras en el módulo de la biblioteca estándar de Python: " (a ((href . "http://docs.python.org/3/library/distutils.html")) "distutils") " (para Python 2.3.5 y hasta en la mayoría de las plataformas, plataformas de 64 bits requieren como mínimo de Python 2.4) que le permite crear con más facilidad la distribución de paquetes de Python, en especial los que tienen las dependencias de otros paquetes.") (p nil (strong nil (tt nil "Distribute")) " se creó porque el " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) (em nil "paquete Setuptools")) " actualmente ya no se mantiene. Los paquetes de terceros, es probable que requieran " (strong nil "setuptools") ", que es proporcionado por el paquete " (strong nil (tt nil "Distribute")) ". Por lo tanto, en cualquier momento si los paquetes dependen del " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) (em nil "paquete Setuptools")) ", " (strong nil (tt nil "Distribute")) " intervendrá para decir que ya ofrece el módulo de " (strong nil (tt nil "setuptools")) ".") (p nil (img ((alt . "Move from Setuptools to Distribute") (class . "aligncenter") (src . "http://plone-spanish-docs.readthedocs.org/en/latest/_images/pip_distribute.png")))) (div ((id . "estado-actual-del-empaquetamiento-en-python")) (h3 nil "Estado actual del Empaquetamiento en Python") (p nil "El módulo " (strong nil (tt nil "distutils")) " es parte de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") " de Python y aun lo será hasta la versión Python 3.3.") (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Nota:")) " El módulo " (strong nil (tt nil "distutils")) " será descontinuado en Python 3.3.") (p nil "El módulo " (strong nil (tt nil "distutils2")) " (note el número " (strong nil "dos") ") tendrá compatibilidad hacia atrás hasta Python 2.4 en adelante; y será parte de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") " en la versión Python 3.3.") (p nil "El módulo " (strong nil (tt nil "distutils")) " provee las bases para empaquetar aplicaciones Python. Desafortunadamente, el módulo " (strong nil (tt nil "distutils")) " está plagado de problemas, razón por la cual un pequeño grupo de programadores de Python están trabajando en " (strong nil (tt nil "distutils2")) ". Sin embargo, hasta que " (strong nil (tt nil "distutils2")) " este completado, se recomienda que en el desarrollador pueda usar tanto el paquete " (strong nil (tt nil "distutils")) " como el paquete " (strong nil (tt nil "Distribute")) " para empaquetar software Python.") (p nil "Al mismo tiempo, si un paquete requiere el " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "paquete Setuptools")) ", la recomendación es que instale el paquete " (strong nil (tt nil "Distribute")) ", el cual provee una versión más actualizada del " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "paquete Setuptools")) " que el " (a ((href . "http://pypi.python.org/pypi/setuptools/") (target . "_blank")) "paquete original de Setuptools") ".") (p nil "En el " (a ((href . "http://guide.python-distribute.org/future.html") (target . "_blank")) "futuro") " " (strong nil (tt nil "distutils2")) " remplazará a " (strong nil (tt nil "setuptools")) " y " (strong nil (tt nil "distutils")) ", le cual también removerá la necesidad de " (strong nil (tt nil "Distribute")) ". El como del estado anterior " (strong nil (tt nil "distutils")) " será removido de la " (a ((href . "http://guide.python-distribute.org/glossary.html#term-standard-library") (target . "_blank")) "librería estándar") ". Para más información, por favor, consulte el " (a ((href . "http://guide.python-distribute.org/future.html") (target . "_blank")) "Futuro del Empaquetado") " en Python.") (p nil (img ((alt . "El estado actual de Empaquetado en Python") (class . "aligncenter") (src . "http://plone-spanish-docs.readthedocs.org/en/latest/_images/state_of_packaging.jpg")))) (div nil (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Consejo"))) (p ((style . "padding-left: 30px;")) "Ver el vídeo de la " (a ((href . "http://us.pycon.org/2011/schedule/presentations/81/") (target . "_blank")) "PyCon 2011 – Packaging, from Distutils to Distutils2") ", Packaging or installing a Python application can be extremely painful por " (a ((href . "http://tarekziade.wordpress.com/") (target . "_blank")) "Tarek Ziadé") " esta charla le sumergiera dentro de las nuevas características de Distutils2 y explica como usted puede usarlo en su proyecto " (em nil "hoy") " para hacer más fácil la vida para todo el mundo (usuarios, administradores de paquetes de Sistemas operativos, programadores, etc.).") (p ((style . "padding-left: 30px;")) "Para descargar el vídeo " (a ((href . "http://blip.tv/file/get/Pycon-PyCon2011PackagingFromDistutilsToDistutils2191.mp4") (target . "_blank")) "haga clic aquí") " (" (strong nil (em nil "Tamaño 294 mb")) ") y para ver por vídeo Stream haga " (a ((href . "http://pycon.blip.tv/file/4880990") (target . "_blank")) "clic aquí") ".")))) (div ((id . "que-es-pip")) (h2 nil "¿Qué es pip?") (p nil (a ((href . "http://pypi.python.org/pypi/pip") (target . "_blank")) "pip") " es una herramienta para instalar y administrar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) ", como los que podemos encontrar en el Índice de Paquetes de Python - " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ".") (p ((style . "padding-left: 30px;")) (strong nil (span ((style . "text-decoration: underline;")) "Truco"))) (p ((style . "padding-left: 30px;")) "Esta herramienta es el remplazo para la famosa herramienta " (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank")) (em nil "easy_install")) ".") (p nil "En su mayoría, " (strong nil (tt nil "pip")) " utiliza las mismas técnicas para encontrar los paquetes, por lo que los paquetes que se instalaban usando la herramienta " (strong nil (tt nil "easy_install")) "  también deben ser instalables con la herramienta " (strong nil (tt nil "pip")) ".") (p nil "Esto significa que usted puede utilizar con el siguiente comando:") (div nil (div nil (pre nil "$ pip install AlgunPaquete"))) (p nil "En lugar del tradicional comando usado con la herramienta " (strong nil (tt nil "easy_install")) " como se describe a continuación:") (div nil (div nil (pre nil "$ easy_install AlgunPaquete"))) (div ((id . "pip-comparado-con-easy-install")) (h3 nil "pip comparado con easy_install") (p nil (strong nil (tt nil "pip")) " ofrece mejoras a la herramienta " (strong nil "easy_install") ". Algunas de las mejoras son:") (ul nil (li nil "Todos los paquetes se descargan antes de iniciar la instalación. Una instalación parcialmente completada no se produce como resultado.") (li nil "Tiene cuidado de presentar una salida útil en la consola.") (li nil "Las razones de las acciones de instalación se le aplica un seguimiento. Por ejemplo, si un paquete se está instalando, " (strong nil (tt nil "pip")) " sigue la pista de por qué ese paquete era necesario.") (li nil "Los mensajes de error debe ser útiles.") (li nil "El código fuente es relativamente conciso y coherente, por lo que es más fácil de usar mediante programación.") (li nil "Ofrece soporte nativo para otros sistemas de control de versiones (Git, Mercurial y Bazaar)") (li nil "Tiene un mecanismo de desinstalación de paquetes.") (li nil "Fácil de definir conjuntos de requerimientos y reproducir de forma fiable un conjunto de paquetes.") (li nil "Los paquetes no tienen que ser instaladas como archivos de huevo, que pueden ser instalados en forma plana (mientras cuida la " (em nil "metadata") " de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) ")."))) (div ((id . "pip-no-hacer-todo-lo-que-se-easy-install-en-concreto")) (h3 nil "pip no hacer todo lo que se easy_install. En concreto:") (ul nil (li nil "No se puede instalar a partir de " (a ((href . "http://lcaballero.wordpress.com/tag/plone/glosario.html#term-paquetes-egg")) (em ((title . "See the definition")) "paquetes Egg")) ". Sólo se instala desde el código fuente. (En el futuro será bueno si se pudiera instalar los binarios de Windows EXE o MSI -.. pero instalar paquetes binarios para otras plataformas no es una prioridad).") (li nil "No entiende la sección " (em nil "SetupTools Extras") " (como package[test]). Esto podría ser agregado eventualmente.") (li nil "Es incompatible con algunos paquetes que tienen muchas personalizaciones " (strong nil (tt nil "distutils")) " o " (strong nil (tt nil "setuptools")) " en sus archivos " (strong nil "setup.py") ".")))) (div ((id . "instrucciones-de-instalacion")) (div ((id . "instrucciones-de-instalacion")) (h2 nil "Instrucciones de Instalación" (a ((href . "http://lcaballero.wordpress.com/tag/plone/feed/#instrucciones-de-instalacion") (title . "Enlazar permanentemente con este título")) (br nil))) (p nil "Siempre existen más de dos formas de instalar paquetes Python con " (strong nil (tt nil "Distribute")) " y " (strong nil (tt nil "pip")) " ;)") (div ((id . "requerimientos-previos")) (h3 nil "Requerimientos previos") (p nil "Es necesario que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev python-setuptools")))) (div ((id . "instalacion-con-paquetes-egg")) (h3 nil "Instalación con Paquetes Egg") (p nil "Para instalar " (strong nil (tt nil "Distribute")) " ejecute el siguiente comando:") (div nil (div nil (pre nil "# easy_install -U distribute"))) (p nil "También para instalar " (strong nil (tt nil "pip")) " ejecute el siguiente comando:") (div nil (div nil (pre nil "# easy_install -U pip")))) (div ((id . "instalacion-en-sistemas-debian")) (h3 nil "Instalación en sistemas Debian") (p nil "La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (pre nil "# aptitude install build-essential python-dev python-pip"))))) (div ((id . "ejemplos-de-uso-de-pip")) (h2 nil "Ejemplos de uso de pip") (p nil "El script " (strong nil (tt nil "pip")) " ofrece varias formas de uso, para instalar los paquetes de diversas fuentes:") (p ((style . "padding-left: 30px;")) (strong nil "Consejo:") " Para poder utilizar el " (strong nil (tt nil "pip")) ", primero debe instalar " (strong nil (tt nil "setuptools")) " o " (strong nil (tt nil "distribute")) ". Si utiliza " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "virtualenv")) (em nil "virtualenv")) ", una copia del " (strong nil (tt nil "pip ")) "será automáticamente instalados en cada entorno virtual que usted crea.") (p ((style . "padding-left: 30px;")) (strong nil "easy_install") " se puede complementar con " (strong nil "virtualenv") ", y se recomienda que lo utilice para " (em nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "aislar a la instalación")) "aislar a la instalación") " ") "de los " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank") (title . "paquetes Egg")) (em ((title . "See the definition")) "paquetes Egg")) ".") (p nil (strong nil "Ejemplo 1.") " Instalar un paquete su nombre en su versión más reciente, buscando en " (a ((href . "http://lcaballero.wordpress.com/tag/plone/glosario.html#term-pypi")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ pip install SQLObject"))) (p nil (strong nil "Ejemplo 2.") " Instalar o actualizar un paquete por nombre y versión utilizando una dirección URL donde encontradas en una “página de descargas”:") (div nil (pre nil "$ pip install -f http://dist.plone.org/packages/ 'Pillow==1.7.3'")) (p nil (strong nil "Ejemplo 3.") " Instalar o actualizar un paquete desde su propio " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi") (target . "_blank")) (em nil "replica del repositorio PyPI")) " o su repositorio de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " privados:") (div nil (div nil (pre nil "$ pip install -i http://pypi.ejemplo.com/simple SQLObject"))) (p nil (strong nil "Ejemplo 4.") " Descargar e instalar una distribución de código fuente:") (div nil (div nil (pre nil "$ pip install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz"))) (p nil (strong nil "Ejemplo 5.") " Instalar un paquete con una versión especifica:") (div nil (div nil (pre nil "$ pip install 'ZopeSkel==2.21.2'"))) (p nil (strong nil "Ejemplo 6.") " Instalar todas las dependencias de mi proyecto Python usando un archivo de dependencias requeridas para instalar:") (div nil (div nil (pre nil "$ pip install -r ./requirements.txt"))) (p nil "Un ejemplo del archivo " (strong nil (tt nil "requirements.txt")) " puede ser el siguiente:") (div nil (div nil (pre nil "python-ldap
django
buildbot
buildbot-slave
PyYAML
south"))) (p nil (strong nil "Ejemplo 7.") " Actualizar un paquete ya instalado con la versión más reciente de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ pip install --upgrade PyProtocols"))) (p nil (strong nil "Ejemplo 8.") " Para usar realizar búsquedas de paquetes disponibles para instalar desde los repositorios por definidos:") (div nil (div nil (pre nil "$ pip search plonetheme-*"))) (p nil (strong nil "Ejemplo 9.") " Para remover un " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg") (target . "_blank")) (em ((title . "See the definition")) "paquete Egg"))) (div nil (div nil (pre nil "$ pip uninstall SQLObject"))) (p nil "Para más información consulte la ayuda disponible por que paquete " (strong nil (tt nil "pip")) " ejecutando el siguiente comando:") (div nil (div nil (pre nil "$ pip help")))) (div ((id . "distribute-en-zc-buildout")) (h2 nil "Distribute en zc.buildout") (p nil "Puede usar " (strong nil "Distribute") " en " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", habilitando el uso de este por medio de un parámetro adicional en su archivo " (strong nil (tt nil "bootstrap.py")) " de la siguiente manera:") (div nil (div nil (pre nil "$ python bootstrap.py --distribute")))) (div ((id . "pip-en-zc-buildout")) (h2 nil "pip en zc.buildout") (p nil "Existen varias estrategias para integrar " (strong nil (tt nil "pip")) " en " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", a continuación se describen algunas formas:") (p nil (a ((href . "http://pypi.python.org/pypi/gp.recipe.pip") (target . "_blank")) "gp.recipe.pip") ", ese paquete es un récipe de " (strong nil (tt nil "zc.buildout")) " el cual permite instalar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-python") (target . "_blank")) (em ((title . "See the definition")) "Paquete Python")) " usando " (strong nil (tt nil "pip")) ". A continuación se explica un ejemplo de configuración " (strong nil (tt nil "zc.buildout")) " con este récipe se puede usar:") (ol nil (li nil "El récipe agrega un " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank")) (em nil "virtualenv")) " en el directorio " (strong nil (tt nil "parts/")) " de su instalación buildout, entonces genera este binario para generar un scripts ejecutable Python. Así que tienes un área de pruebas " (strong nil "limpia") " de instalaciones previas.") (li nil "El récipe esta basado en " (a ((href . "http://pypi.python.org/pypi/zc.recipe.egg#id23") (target . "_blank")) "zc.recipe.egg#scripts") " para que pueda compartir sus " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " entre buildouts como de costumbre.") (li nil "Por supuesto, usted puede instalar algunos archivos " (strong nil ".pybundle") ".") (li nil "Usted puede construir paquetes desde un repositorio SVN con la opción " (strong nil (tt nil "editables")) ".") (li nil "Cada linea encontrada en la opción " (strong nil (tt nil "install")) " es la última parte de un comando de " (strong nil (tt nil "pip")) ". Esta le permitirá a usted construir " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " con sus dependencias. Por ejemplo, instalar la librería " (a ((href . "http://codespeak.net/lxml/") (target . "_blank")) "lxml") " en un área de prueba pura, sin tener instalado " (strong nil (tt nil "libxml2")) " y " (strong nil (tt nil "libxslt")) ", usted necesita tener instalado " (strong nil (tt nil "Cython")) " y con esta línea de comando " (strong nil (tt nil "python setup.py install --static-deps")) " para instalar el paquete " (a ((href . "http://codespeak.net/lxml/") (target . "_blank")) "lxml") ".")) (p nil "A continuación un ejemplo de configuración " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ":") (div nil (div nil (pre nil "[buildout]
# the cache dir is used by buildout & pip
download-cache = download
parts = eggs

[eggs]
recipe = gp.recipe.pip

# eggs installed by pip (also add the Deliverance bundle)
install =
    Cython
    --install-option=--static-deps lxml==2.2alpha1

http://deliverance.openplans.org/dist/Deliverance-snapshot-latest.pybundle

# eggs installed by zc.recipe.egg
eggs =
    Paste
    pyquery"))) (p nil "Otra forma de usar " (strong nil (tt nil "pip")) " es a través de una extensión " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) " llamada " (a ((href . "http://pypi.python.org/pypi/gp.vcsdevelop/") (target . "_blank")) "gp.vcsdevelop") ", para hacer checkout de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " desde varios " (a ((href . "http://es.wikipedia.org/wiki/Control_de_versiones") (target . "_blank")) "sistemas de control de versiones") ". A continuación se muestra un ejemplo de configuración " (strong nil (tt nil "zc.buildout")) " con esta extensión:") (div nil (div nil (pre nil "[buildout]
...
extensions = gp.vcsdevelop
develop-dir = ./requirements
requirements = requirements.txt
parts = eggs
...
[eggs]
recipe = zc.recipe.egg
eggs = ${buildout:requirements-eggs}
interpreter = python
..."))) (p nil "Un ejemplo del archivo " (strong nil (tt nil "requirements.txt")) " puede ser el siguiente:") (div nil (div nil (pre nil "ConfigObject>=1.0
-e git+git://github.com/bearstech/PloneTerminal.git#egg=PloneTerminal")))) (div ((id . "referencias")) (h1 nil "Ver también") (p nil "Le recomiendo consultar las siguientes enlaces para complementar el conocimiento adquirido en esta entrada en mi blog.") (ul nil (li nil (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (target . "_blank") (title . "Instalación de paquetes Python con setuptools y EasyInstall")) "Instalación de paquetes Python con setuptools y EasyInstall")) (li nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "Creación de entornos virtuales Python")) "Creación de entornos virtuales Python"))) (p nil "Espero sea de utilidad esta entrada en mi blog. Ayúdame a seguir escribiendo en mi blog y dona 1 dolar " (a ((href . "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted") (target . "_blank") (title . "Ayúdame y dona 1 dolar!")) "aquí") ".") (h2 nil "Referencias") (ul nil (li nil "El articulo " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/distribute_pip.html") (target . "_blank") (title . "Distribute y pip")) "Distribute y pip") " desde la documentación de Plone en Español.") (li nil (a ((href . "http://guide.python-distribute.org/installation.html") (target . "_blank")) "Installing the Package Tools") ".") (li nil (a ((href . "http://www.pip-installer.org/en/latest/index.html") (target . "_blank")) "pip v1.0.2 documentation") ".") (li nil (a ((href . "http://www.gawel.org/weblog/en/2008/12/combine-zc.buildout-an-pip-benefits") (target . "_blank")) "Combine zc.buildout and pip benefits") "."))) (br nil) (a ((href . "http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1241/") (rel . "nofollow")) (img ((alt . " ") (border . "0") (src . "http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1241/")))) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1241&subd=lcaballero&ref=&feed=1") (width . "1"))))) (updated nil "2013-03-20T18:35:36Z") (category ((term . "Articulos"))) (category ((term . "Desarrollo y programación"))) (category ((term . "GULMER"))) (category ((term . "Linux"))) (category ((term . "Python"))) (category ((term . "Python Venezuela"))) (category ((term . "Distribute"))) (category ((term . "distutils"))) (category ((term . "Egg"))) (category ((term . "entornos virtuales"))) (category ((term . "Paquetes Egg"))) (category ((term . "Paquetes Python"))) (category ((term . "pip"))) (category ((term . "Plone"))) (category ((term . "Software libre"))) (category ((term . "virtualenv"))) (category ((term . "Zope"))) (category ((term . "ZopeSkel"))) (author nil (name nil "macagua")) (source nil (id nil "http://lcaballero.wordpress.com") (logo nil "http://s2.wp.com/i/buttonw-com.png") (link ((href . "http://lcaballero.wordpress.com/tag/plone/feed/") (rel . "self") (type . "application/rss+xml"))) (link ((href . "http://lcaballero.wordpress.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://lcaballero.wordpress.com/osd.xml") (rel . "search") (title . "Leonardo J. Caballero G.") (type . "application/opensearchdescription+xml"))) (link ((href . "http://lcaballero.wordpress.com/?pushpress=hub") (rel . "hub") (type . "text/html"))) (subtitle nil "macagua@debian:~/public_html#") (title nil "Leonardo J. Caballero G. » Plone") (updated nil "2013-04-12T17:00:11Z")))) ("Instalación de paquetes Python con setuptools y EasyInstall" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (div ((id . \"que-es-setuptools\")) (p nil \"Este articulo explica como instalar paquetes \" (a ((href . \"http://python.org/\") (target . \"_blank\") (title . \"Python\")) \"Python\") \" con \" (strong nil (tt nil \"setuptools\")) \" y \" (strong nil (tt nil \"EasyInstall\")) \".\") (h1 nil \"Introducción\") (div ((class . \"wp-caption aligncenter\") (style . \"width: 310px;\")) (a ((href . \"http://python.org/\") (target . \"_blank\")) (img ((alt . \"Python\") (class . \"  \") (height . \"89\") (src . \"http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png\") (width . \"300\")))) (p ((class . \"wp-caption-text\")) \"Python\")) (p nil (a ((href . \"http://python.org/\") (target . \"_blank\") (title . \"Python\")) \"Python\") \", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.\") (h1 nil \"¿Qué es Setuptools?\") (p nil (a ((href . \"http://pypi.python.org/pypi/setuptools/\") (target . \"_blank\")) \"Setuptools\") \", es una colección de mejoras para el módulo distutils de Python, que permiten a un desarrollador construir y distribuir \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"Paquetes Python\")) \" de forma sencilla, en especial cuando dependen de otros \" (em ((title . \"See the definition\")) (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python\") (target . \"_blank\")) \"Paquetes Python\") \" \") \"para funcionar.\") (p nil \"Entre sus características principales están:\") (ul nil (li nil \"Por defecto, utiliza \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"PyPI\")) \" para buscar los paquetes, lo que permite acceso inmediato e instalación transparente de miles de paquetes.\") (li nil \"Permite crear \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" Python, que son \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"Paquetes Python\")) \" empaquetados en un sólo archivo para su distribución.\") (li nil \"Incluye archivos de configuración y todos los archivos que forman parte del directorio de trabajo, sin necesidad de listarlos individualmente o crear archivos de manifiesto.\"))) (div ((id . \"que-es-easyinstall\")) (h1 nil \"¿Qué es EasyInstall?\") (p nil (a ((href . \"http://peak.telecommunity.com/DevCenter/EasyInstall\") (target . \"_blank\")) \"easy_install\") \", es una herramienta que se basa en \" (cite nil \"Setuptools\") \" para automáticamente encontrar y descargar desde Internet las dependencias, para instalarlas o actualizarlas al momento de construir, que además esta herramienta es capaz de bajar de Internet las dependencias utilizando HTTP, FTP, sistema de control de versiones como \" (em nil \"Subversion\") \", \" (em nil \"Git\") \", \" (em nil \"Mercurial\") \", entre otros o desde forjas como \" (em nil \"SourceForge.net\") \", \" (em nil \"Launchpad.net\") \", \" (em nil \"Github.com\") \", \" (em nil \"Bitbucket.org\") \", etc.\")) (div ((id . \"instrucciones-de-instalacion\")) (h1 nil \"Instrucciones de Instalación\") (p nil \"Siempre existen más de dos formas de instalar \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"Paquetes Python\")) \" con \" (strong nil \"setuptools\") \" y \" (strong nil \"easy_install\") (img ((alt . \";)\") (class . \"wp-smiley\") (src . \"http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif\")))) (div ((id . \"instalacion-manual\")) (h2 nil \"Instalación manual\") (p nil \"Para ambas es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:\") (div nil (div nil (pre nil \"# aptitude install build-essential python-dev\"))) (p nil \"La instalación es muy sencilla, solo se necesita bajar de Internet el archivo \" (a ((href . \"http://peak.telecommunity.com/dist/ez_setup.py\") (target . \"_blank\")) \"ez_setup.py\") \" y ejecutarlo con el Python que se desea utilizar, con los siguientes comandos:\") (div nil (div nil (pre nil \"# wget http://peak.telecommunity.com/dist/ez_setup.py
# python ez_setup.py\"))) (p nil \"Esto instalará un programa llamado \" (strong nil (tt nil \"easy_install\")) \" junto a los demás ejecutables de Python.\")) (div ((id . \"instalacion-en-sistemas-debian\")) (h2 nil \"Instalación en sistemas Debian\") (p nil \"La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:\") (div nil (div nil (pre nil \"# aptitude install build-essential python-dev python-setuptools\"))) (p nil \"Esto instalará un programa llamado \" (strong nil (tt nil \"easy_install\")) \" junto a los demás ejecutables de Python.\"))) (div ((id . \"ejemplos-de-uso\")) (h1 nil \"Ejemplos de uso\") (p nil \"El programa \" (strong nil (tt nil \"easy_install\")) \" ofrece varias formas de uso, para instalar los paquetes de diversas fuentes, como se describe a continuación con los siguientes ejemplos:\") (div nil (p ((style . \"padding-left: 30px;\")) (span ((style . \"text-decoration: underline;\")) (strong nil \"Consejo:\")) \" Para poder utilizar el \" (strong nil (tt nil \"easy_install\")) \", primero debe instalar \" (strong nil (tt nil \"setuptools\")) \". Si utiliza \" (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\") (title . \"virtualenv\")) (em nil \"virtualenv\")) \", una copia del \" (strong nil (tt nil \"easy_install\")) \" será automáticamente instalados en cada entorno virtual que usted crea.\") (p ((style . \"padding-left: 30px;\")) (strong nil (tt nil \"easy_install\")) \" se puede complementar con \" (strong nil (tt nil \"virtualenv\")) \", y se recomienda que lo utilice para \" (em nil (a ((href . \"http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/\") (target . \"_blank\") (title . \"aislar a la instalación\")) \"aislar a la instalación\") \" \") \"de los \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\") (title . \"paquetes Egg\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \".\")) (p nil (strong nil \"Ejemplo 1.\") \" Instalar un paquete por nombre, buscando en \" (em ((title . \"See the definition\")) (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi\") (target . \"_blank\")) \"PyPI\") \" \") \" la versión más reciente:\") (div nil (div nil (pre nil \"$ easy_install SQLObject\"))) (p nil (strong nil \"Ejemplo 2.\") \" Instalar o actualizar un paquete por nombre y versión utilizando los enlaces encontrados en una “página de descargas”:\") (div nil (div nil (pre nil \"$ easy_install -f http://pythonpaste.org/package_index.html SQLObject\"))) (p nil (strong nil \"Ejemplo 3.\") \" Instalar o actualizar un paquete desde su propio \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi\") (target . \"_blank\")) (em nil \"replica del repositorio PyPI\")) \" o su repositorio de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquetes Egg\")) \" privado:\") (div nil (div nil (pre nil \"$ easy_install -i http://pypi.ejemplo.com/simple SQLObject\"))) (p nil (strong nil \"Ejemplo 4.\") \" Descargar e instalar una distribución de código fuente:\") (div nil (div nil (pre nil \"$ easy_install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz\"))) (p nil (strong nil \"Ejemplo 5.\") \" Instalar un \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"paquete Egg\")) \" ya descargado:\") (div nil (div nil (pre nil \"$ easy_install ./Descargas/OtroPaquete-3.2.1-py2.7.egg\"))) (p nil (strong nil \"Ejemplo 6.\") \" Instalar un paquete con una versión especifica:\") (div nil (div nil (pre nil \"$ easy_install \\\"ZopeSkel==2.21.2\\\"\"))) (p nil (strong nil \"Ejemplo 7.\") \" Actualizar un paquete ya instalado con la versión más reciente de \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi\") (target . \"_blank\")) (em ((title . \"See the definition\")) \"PyPI\")) \":\") (div nil (div nil (pre nil \"$ easy_install --upgrade PyProtocols\"))) (p nil \"Para más información consulte la ayuda disponible por que paquete \" (strong nil (tt nil \"easy_install\")) \" ejecutando el siguiente comando:\") (div nil (div nil (pre nil \"$ easy_install --help\")))) (div ((id . \"utilizacion-con-zope-plone\")) (h1 nil \"Utilización con Zope/Plone\") (p nil \"El mecanismo más moderno para la instalación de distribuciones de Zope y Plone, llamado \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"buildout\")) \", formalmente \" (a ((href . \"http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout\") (target . \"_blank\")) (em nil \"zc.buildout\")) \", hace uso de \" (strong nil (tt nil \"easy_install\")) \" para obtener e instalar todas las dependencias.\") (p nil \"Adicionalmente, existe una herramienta llamada \" (strong nil \"ZopeSkel\") \" que permite crear fácilmente “esqueletos” de distintos tipos de proyectos de Zope y Plone, mediante una herramienta llamada \" (strong nil (tt nil \"paster\")) \" y un sistema de plantillas. Es recomendado instalar esta última herramienta para proyectos nuevos, de la siguiente manera:\") (div nil (div nil (pre nil \"$ easy_install \\\"ZopeSkel==2.21.2\\\"\"))) (p nil \"Una vez instalado, ofrece una buena variedad de esqueletos para diversos tipos de proyectos, como temas visuales, componentes de Plone, buildouts, tipos de contenido con Archetypes o entre otros mas.\") (p nil \"Se utiliza mediante el comando de sistema \" (strong nil (tt nil \"paster\")) \", pasando la opción \" (strong nil (tt nil \"create\")) \" para crear un proyecto y la opción \" (strong nil (tt nil \"--list-templates\")) \" ver las diversas plantillas de proyectos disponibles para crear, como se muestra a continuación:\") (div nil (div nil (pre nil \"$ paster create --list-templates
Available templates:
archetype:          A Plone project that uses Archetypes
basic_namespace:    A project with a namespace package
basic_package:      A basic setuptools-enabled package
basic_zope:         A Zope project
kss_plugin:         A KSS plugin template
nested_namespace:   A project with two nested namespaces.
paste_deploy:       A web application deployed through paste.deploy
plone:              A Plone project
plone2.5_buildout:  A buildout for Plone 2.5 projects
plone2.5_theme:     A Theme for Plone 2.5
plone2_theme:       A Theme Product for Plone 2.1 & Plone 2.5
plone3_buildout:    A buildout for Plone 3 projects
plone3_portlet:     A Plone 3 portlet
plone3_theme:       A Theme for Plone 3.0
plone_app:          A Plone App project
plone_hosting:      Plone hosting: buildout with ZEO and any Plone version
plone_pas:          A Plone PAS project
recipe:             A recipe project for zc.buildout
silva_buildout:     A buildout for Silva projects
zope_app:           Package that contains a Zope application
zope_deploy:        (Paste) deployment of a Zope application\")))) (div ((id . \"referencia\")) (div ((id . \"utilizacion-con-zope-plone\")) (p nil \"Para mas información de las opciones disponibles de \" (strong nil (tt nil \"ZopeSkel\")) \", ejecute el siguiente comando:\") (div nil (pre nil \"$ paster --help
Usage: paster [paster_options] COMMAND [command_options]
Options:
--version         show program's version number and exit
--plugin=PLUGINS  Add a plugin to the list of commands (plugins are Egg
specs; will also require() the Egg)
-h, --help        Show this help message
Commands:
create       Create the file layout for a Python distribution
help         Display help
make-config  Install a package and create a fresh config file/directory
points       Show information about entry points
post         Run a request for the described application
request      Run a request for the described application
serve        Serve the described application
setup-app    Setup an application, given a config file\"))) (div ((id . \"referencia\")) (p nil \"Y así de esta forma ¡usted ahora puede instalar paquetes Python con setuptools y EasyInstall!\") (p nil \"Ayúdame a seguir escribiendo en mi blog y dona 1 dolar \" (a ((href . \"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted\") (target . \"_blank\") (title . \"Ayúdame y dona 1 dolar!\")) \"aquí\") \".\") (h1 nil \"Referencia\")) (ul nil (li nil (a ((href . \"http://plone.org/countries/mx/instalacion-de-setuptools-y-easyinstall-para-python\") (target . \"_blank\")) \"Instalación de setuptools y EasyInstall para Python\") \" desde la comunidad Plone México.\"))) (br nil) (a ((href . \"http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1147/\") (rel . \"nofollow\")) (img ((alt . \" \") (border . \"0\") (src . \"http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1147/\")))) (img ((alt . \" \") (border . \"0\") (height . \"1\") (src . \"http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1147&subd=lcaballero&ref=&feed=1\") (width . \"1\"))))" "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/" (20802 4576) old 2 nil nil ((id nil "http://lcaballero.wordpress.com/?p=1147") (link ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/") (rel . "alternate") (type . "text/html"))) (title nil "Instalación de paquetes Python con setuptools y EasyInstall") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) "Este articulo explica como instalar paquetes Python con setuptools y EasyInstall. Introducción Python, Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un … " (span ((class . "more-link")) (a ((href . "http://lcaballero.wordpress.com/2013/03/14/instalacion-de-paquetes-python-con-setuptools-y-easyinstall/")) "Continuar leyendo »")) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1147&subd=lcaballero&ref=&feed=1") (width . "1"))))) (content ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((id . "que-es-setuptools")) (p nil "Este articulo explica como instalar paquetes " (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") " con " (strong nil (tt nil "setuptools")) " y " (strong nil (tt nil "EasyInstall")) ".") (h1 nil "Introducción") (div ((class . "wp-caption aligncenter") (style . "width: 310px;")) (a ((href . "http://python.org/") (target . "_blank")) (img ((alt . "Python") (class . "  ") (height . "89") (src . "http://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Python_logo.svg/300px-Python_logo.svg.png") (width . "300")))) (p ((class . "wp-caption-text")) "Python")) (p nil (a ((href . "http://python.org/") (target . "_blank") (title . "Python")) "Python") ", Es un lenguaje de programación interpretado cuya filosofía hace hincapié en una sintaxis muy limpia y que favorezca un código legible. Se trata de un lenguaje de programación multiparadigma, ya que soporta orientación a objetos, programación imperativa y, en menor medida, programación funcional. Es un lenguaje interpretado, usa tipado dinámico, es fuertemente tipado y multiplataforma.") (h1 nil "¿Qué es Setuptools?") (p nil (a ((href . "http://pypi.python.org/pypi/setuptools/") (target . "_blank")) "Setuptools") ", es una colección de mejoras para el módulo distutils de Python, que permiten a un desarrollador construir y distribuir " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " de forma sencilla, en especial cuando dependen de otros " (em ((title . "See the definition")) (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) "Paquetes Python") " ") "para funcionar.") (p nil "Entre sus características principales están:") (ul nil (li nil "Por defecto, utiliza " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) " para buscar los paquetes, lo que permite acceso inmediato e instalación transparente de miles de paquetes.") (li nil "Permite crear " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " Python, que son " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " empaquetados en un sólo archivo para su distribución.") (li nil "Incluye archivos de configuración y todos los archivos que forman parte del directorio de trabajo, sin necesidad de listarlos individualmente o crear archivos de manifiesto."))) (div ((id . "que-es-easyinstall")) (h1 nil "¿Qué es EasyInstall?") (p nil (a ((href . "http://peak.telecommunity.com/DevCenter/EasyInstall") (target . "_blank")) "easy_install") ", es una herramienta que se basa en " (cite nil "Setuptools") " para automáticamente encontrar y descargar desde Internet las dependencias, para instalarlas o actualizarlas al momento de construir, que además esta herramienta es capaz de bajar de Internet las dependencias utilizando HTTP, FTP, sistema de control de versiones como " (em nil "Subversion") ", " (em nil "Git") ", " (em nil "Mercurial") ", entre otros o desde forjas como " (em nil "SourceForge.net") ", " (em nil "Launchpad.net") ", " (em nil "Github.com") ", " (em nil "Bitbucket.org") ", etc.")) (div ((id . "instrucciones-de-instalacion")) (h1 nil "Instrucciones de Instalación") (p nil "Siempre existen más de dos formas de instalar " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-python") (target . "_blank")) (em ((title . "See the definition")) "Paquetes Python")) " con " (strong nil "setuptools") " y " (strong nil "easy_install") (img ((alt . ";)") (class . "wp-smiley") (src . "http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif")))) (div ((id . "instalacion-manual")) (h2 nil "Instalación manual") (p nil "Para ambas es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev"))) (p nil "La instalación es muy sencilla, solo se necesita bajar de Internet el archivo " (a ((href . "http://peak.telecommunity.com/dist/ez_setup.py") (target . "_blank")) "ez_setup.py") " y ejecutarlo con el Python que se desea utilizar, con los siguientes comandos:") (div nil (div nil (pre nil "# wget http://peak.telecommunity.com/dist/ez_setup.py
# python ez_setup.py"))) (p nil "Esto instalará un programa llamado " (strong nil (tt nil "easy_install")) " junto a los demás ejecutables de Python.")) (div ((id . "instalacion-en-sistemas-debian")) (h2 nil "Instalación en sistemas Debian") (p nil "La instalación en sistemas Debian es recomendable que instale ciertas dependencias en su sistema operativo como las que se muestran a continuación:") (div nil (div nil (pre nil "# aptitude install build-essential python-dev python-setuptools"))) (p nil "Esto instalará un programa llamado " (strong nil (tt nil "easy_install")) " junto a los demás ejecutables de Python."))) (div ((id . "ejemplos-de-uso")) (h1 nil "Ejemplos de uso") (p nil "El programa " (strong nil (tt nil "easy_install")) " ofrece varias formas de uso, para instalar los paquetes de diversas fuentes, como se describe a continuación con los siguientes ejemplos:") (div nil (p ((style . "padding-left: 30px;")) (span ((style . "text-decoration: underline;")) (strong nil "Consejo:")) " Para poder utilizar el " (strong nil (tt nil "easy_install")) ", primero debe instalar " (strong nil (tt nil "setuptools")) ". Si utiliza " (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "virtualenv")) (em nil "virtualenv")) ", una copia del " (strong nil (tt nil "easy_install")) " será automáticamente instalados en cada entorno virtual que usted crea.") (p ((style . "padding-left: 30px;")) (strong nil (tt nil "easy_install")) " se puede complementar con " (strong nil (tt nil "virtualenv")) ", y se recomienda que lo utilice para " (em nil (a ((href . "http://lcaballero.wordpress.com/2012/10/22/creacion-de-entornos-virtuales-python/") (target . "_blank") (title . "aislar a la instalación")) "aislar a la instalación") " ") "de los " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank") (title . "paquetes Egg")) (em ((title . "See the definition")) "paquetes Egg")) ".")) (p nil (strong nil "Ejemplo 1.") " Instalar un paquete por nombre, buscando en " (em ((title . "See the definition")) (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) "PyPI") " ") " la versión más reciente:") (div nil (div nil (pre nil "$ easy_install SQLObject"))) (p nil (strong nil "Ejemplo 2.") " Instalar o actualizar un paquete por nombre y versión utilizando los enlaces encontrados en una “página de descargas”:") (div nil (div nil (pre nil "$ easy_install -f http://pythonpaste.org/package_index.html SQLObject"))) (p nil (strong nil "Ejemplo 3.") " Instalar o actualizar un paquete desde su propio " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/python/instalar_config_propio_mirror_pypi.html#creando-propio-repositorio-pypi") (target . "_blank")) (em nil "replica del repositorio PyPI")) " o su repositorio de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquetes-egg") (target . "_blank")) (em ((title . "See the definition")) "paquetes Egg")) " privado:") (div nil (div nil (pre nil "$ easy_install -i http://pypi.ejemplo.com/simple SQLObject"))) (p nil (strong nil "Ejemplo 4.") " Descargar e instalar una distribución de código fuente:") (div nil (div nil (pre nil "$ easy_install http://ejemplo.com/ruta/a/MiPaquete-1.2.3.tgz"))) (p nil (strong nil "Ejemplo 5.") " Instalar un " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-paquete-egg") (target . "_blank")) (em ((title . "See the definition")) "paquete Egg")) " ya descargado:") (div nil (div nil (pre nil "$ easy_install ./Descargas/OtroPaquete-3.2.1-py2.7.egg"))) (p nil (strong nil "Ejemplo 6.") " Instalar un paquete con una versión especifica:") (div nil (div nil (pre nil "$ easy_install \"ZopeSkel==2.21.2\""))) (p nil (strong nil "Ejemplo 7.") " Actualizar un paquete ya instalado con la versión más reciente de " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/glosario.html#term-pypi") (target . "_blank")) (em ((title . "See the definition")) "PyPI")) ":") (div nil (div nil (pre nil "$ easy_install --upgrade PyProtocols"))) (p nil "Para más información consulte la ayuda disponible por que paquete " (strong nil (tt nil "easy_install")) " ejecutando el siguiente comando:") (div nil (div nil (pre nil "$ easy_install --help")))) (div ((id . "utilizacion-con-zope-plone")) (h1 nil "Utilización con Zope/Plone") (p nil "El mecanismo más moderno para la instalación de distribuciones de Zope y Plone, llamado " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "buildout")) ", formalmente " (a ((href . "http://plone-spanish-docs.readthedocs.org/en/latest/buildout/replicacion_proyectos_python.html#que-es-zcbuildout") (target . "_blank")) (em nil "zc.buildout")) ", hace uso de " (strong nil (tt nil "easy_install")) " para obtener e instalar todas las dependencias.") (p nil "Adicionalmente, existe una herramienta llamada " (strong nil "ZopeSkel") " que permite crear fácilmente “esqueletos” de distintos tipos de proyectos de Zope y Plone, mediante una herramienta llamada " (strong nil (tt nil "paster")) " y un sistema de plantillas. Es recomendado instalar esta última herramienta para proyectos nuevos, de la siguiente manera:") (div nil (div nil (pre nil "$ easy_install \"ZopeSkel==2.21.2\""))) (p nil "Una vez instalado, ofrece una buena variedad de esqueletos para diversos tipos de proyectos, como temas visuales, componentes de Plone, buildouts, tipos de contenido con Archetypes o entre otros mas.") (p nil "Se utiliza mediante el comando de sistema " (strong nil (tt nil "paster")) ", pasando la opción " (strong nil (tt nil "create")) " para crear un proyecto y la opción " (strong nil (tt nil "--list-templates")) " ver las diversas plantillas de proyectos disponibles para crear, como se muestra a continuación:") (div nil (div nil (pre nil "$ paster create --list-templates
Available templates:
  archetype:          A Plone project that uses Archetypes
  basic_namespace:    A project with a namespace package
  basic_package:      A basic setuptools-enabled package
  basic_zope:         A Zope project
  kss_plugin:         A KSS plugin template
  nested_namespace:   A project with two nested namespaces.
  paste_deploy:       A web application deployed through paste.deploy
  plone:              A Plone project
  plone2.5_buildout:  A buildout for Plone 2.5 projects
  plone2.5_theme:     A Theme for Plone 2.5
  plone2_theme:       A Theme Product for Plone 2.1 & Plone 2.5
  plone3_buildout:    A buildout for Plone 3 projects
  plone3_portlet:     A Plone 3 portlet
  plone3_theme:       A Theme for Plone 3.0
  plone_app:          A Plone App project
  plone_hosting:      Plone hosting: buildout with ZEO and any Plone version
  plone_pas:          A Plone PAS project
  recipe:             A recipe project for zc.buildout
  silva_buildout:     A buildout for Silva projects
  zope_app:           Package that contains a Zope application
  zope_deploy:        (Paste) deployment of a Zope application")))) (div ((id . "referencia")) (div ((id . "utilizacion-con-zope-plone")) (p nil "Para mas información de las opciones disponibles de " (strong nil (tt nil "ZopeSkel")) ", ejecute el siguiente comando:") (div nil (pre nil "$ paster --help
  Usage: paster [paster_options] COMMAND [command_options]

  Options:
    --version         show program's version number and exit
    --plugin=PLUGINS  Add a plugin to the list of commands (plugins are Egg
                      specs; will also require() the Egg)
    -h, --help        Show this help message

  Commands:
    create       Create the file layout for a Python distribution
    help         Display help
    make-config  Install a package and create a fresh config file/directory
    points       Show information about entry points
    post         Run a request for the described application
    request      Run a request for the described application
    serve        Serve the described application
    setup-app    Setup an application, given a config file"))) (div ((id . "referencia")) (p nil "Y así de esta forma ¡usted ahora puede instalar paquetes Python con setuptools y EasyInstall!") (p nil "Ayúdame a seguir escribiendo en mi blog y dona 1 dolar " (a ((href . "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=KX6MCYREN2BR2&lc=VE&item_name=lcaballero%2ewordpress%2ecom&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted") (target . "_blank") (title . "Ayúdame y dona 1 dolar!")) "aquí") ".") (h1 nil "Referencia")) (ul nil (li nil (a ((href . "http://plone.org/countries/mx/instalacion-de-setuptools-y-easyinstall-para-python") (target . "_blank")) "Instalación de setuptools y EasyInstall para Python") " desde la comunidad Plone México."))) (br nil) (a ((href . "http://feeds.wordpress.com/1.0/gocomments/lcaballero.wordpress.com/1147/") (rel . "nofollow")) (img ((alt . " ") (border . "0") (src . "http://feeds.wordpress.com/1.0/comments/lcaballero.wordpress.com/1147/")))) (img ((alt . " ") (border . "0") (height . "1") (src . "http://stats.wordpress.com/b.gif?host=lcaballero.wordpress.com&blog=460990&post=1147&subd=lcaballero&ref=&feed=1") (width . "1"))))) (updated nil "2013-03-14T18:07:28Z") (category ((term . "Articulos"))) (category ((term . "GULMER"))) (category ((term . "Linux"))) (category ((term . "Python"))) (category ((term . "Python Venezuela"))) (category ((term . "Software libre"))) (category ((term . "Desarrollo y programación"))) (category ((term . "distutils"))) (category ((term . "Egg"))) (category ((term . "entornos virtuales"))) (category ((term . "Paquetes Egg"))) (category ((term . "Paquetes Python"))) (category ((term . "Plone"))) (category ((term . "Setuptools"))) (category ((term . "virtualenv"))) (category ((term . "Zope"))) (category ((term . "ZopeSkel"))) (author nil (name nil "macagua")) (source nil (id nil "http://lcaballero.wordpress.com") (logo nil "http://s2.wp.com/i/buttonw-com.png") (link ((href . "http://lcaballero.wordpress.com/tag/plone/feed/") (rel . "self") (type . "application/rss+xml"))) (link ((href . "http://lcaballero.wordpress.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://lcaballero.wordpress.com/osd.xml") (rel . "search") (title . "Leonardo J. Caballero G.") (type . "application/opensearchdescription+xml"))) (link ((href . "http://lcaballero.wordpress.com/?pushpress=hub") (rel . "hub") (type . "text/html"))) (subtitle nil "macagua@debian:~/public_html#") (title nil "Leonardo J. Caballero G. » Plone") (updated nil "2013-04-12T17:00:11Z")))) ("Conferencia Plone 2012" "El 9 de octubre comenzó la reunión anual de los Ploneros: la Plone Conference. Este año se ha celebrado en la ciudad holandesa de Arnhem y nos hemos reunido unos 400 ploneros.Sirva este artículo como resumen de lo visto allí." "http://www.codesyntax.com/es/blog/conferencia-plone-2012-2" (20760 64542) old 3 nil nil ((id nil "http://www.codesyntax.com/es/blog/conferencia-plone-2012-2") (link ((href . "http://www.codesyntax.com/es/blog/conferencia-plone-2012-2") (rel . "alternate") (type . "text/html"))) (title nil "Conferencia Plone 2012") (summary nil "El 9 de octubre comenzó la reunión anual de los Ploneros: la Plone Conference. Este año se ha celebrado en la ciudad holandesa de Arnhem y nos hemos reunido unos 400 ploneros.Sirva este artículo como resumen de lo visto allí.") (updated nil "2013-02-11T14:11:42Z") (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "lur")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Actualización de seguridad en Plone" "El Equipo de Seguridad de Plone ha informado sobre una actualización de seguridad. Este parche de seguridad se dará a conocer el martes y se recomienda instalarlo de manera correcta." "http://www.codesyntax.com/es/blog/actualizacion-de-seguridad-en-plone" (20760 64439) old 4 nil nil ((id nil "http://www.codesyntax.com/es/blog/actualizacion-de-seguridad-en-plone") (link ((href . "http://www.codesyntax.com/es/blog/actualizacion-de-seguridad-en-plone") (rel . "alternate") (type . "text/html"))) (title nil "Actualización de seguridad en Plone") (summary nil "El Equipo de Seguridad de Plone ha informado sobre una actualización de seguridad. Este parche de seguridad se dará a conocer el martes y se recomienda instalarlo de manera correcta.") (updated nil "2013-02-11T14:09:59Z") (category ((term . "plone"))) (category ((term . "seguridad"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Productos interesantes en la primera jornada de la Conferencia Plone" "Aquí estamos pues, en la sede de Market Street de la San Francisco State Universitiy en la Conferencia  Plone de 2011. Hemos venido Lur Ibargutxi y Mikel Larreategi de CodeSyntax y este es el resumen del primer día." "http://www.codesyntax.com/es/blog/productos-interesantes-en-la-primera-jornada-de-la-conferencia-plone" (20760 64384) old 5 nil nil ((id nil "http://www.codesyntax.com/es/blog/productos-interesantes-en-la-primera-jornada-de-la-conferencia-plone") (link ((href . "http://www.codesyntax.com/es/blog/productos-interesantes-en-la-primera-jornada-de-la-conferencia-plone") (rel . "alternate") (type . "text/html"))) (title nil "Productos interesantes en la primera jornada de la Conferencia Plone") (summary nil "Aquí estamos pues, en la sede de Market Street de la San Francisco State Universitiy en la Conferencia  Plone de 2011. Hemos venido Lur Ibargutxi y Mikel Larreategi de CodeSyntax y este es el resumen del primer día.") (updated nil "2013-02-11T14:09:04Z") (category ((term . "ploneconf2011"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Tips para ir al PyCON 2013" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (div ((class . \"section\") (id . \"tips-para-ir-al-pycon-2013\")) (h1 nil \"Tips para ir al PyCON 2013\") (p nil \"Se viene el PyCON 2013, es su segunda edición en la bella ciudad de Santa Clara, California (Osea,
silicon valley). Vale toda la pena ir para allá.\") (p nil \"Lástima que me lo voy a perder por que ando de viaje en Argentina.\") (p nil \"Pero tengo varios cuates que van por primera vez al PyCON y algunos van por primera vez a EU, así
que aquí les pongo unos consejos.\") (div ((class . \"section\") (id . \"pasaporte\")) (h2 nil \"Pasaporte\") (p nil \"El pasaporte debe de estar vigente para las fechas que viajas a EU. Si no tienes pasaporte, entonces
lo tienes que empezar a tramitar ¡YA MISMO!\") (p nil \"Tienes que hacer cita previa para el trámite del pasaporte y por desgracia, algunas veces te dan la
cita hasta después de varias semanas.\") (p nil \"El sitio donde debes de hacer tu cita es este: \" (a ((class . \"reference external\") (href . \"http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes\")) \"http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes\")) (p nil \"Lee todo lo de la página y comienza a juntar tus requisitos.\") (p nil \"Ten cuidado con las fotos, por que luego no aceptan las fotos que hacen en cualquier estudio
fotográfico. Para más seguridad, elige estudios fotográficos que estan cerca de la delegación donde
tienes que hacer tu trámite. Las fotos cuestan entre $50 y $100 pesos.\") (p nil \"Un tip estratégico es que si en tu ciudad esta muy lleno y no te dan cita pronto, entonces puedes
pedir una cita urgente (con ninguna garantía) o pedir la cita en la delegación de una ciudad
cercana. Todo esto depende de qué tantos recursos tengas para viajar a otra ciudad.\") (p nil \"Por cierto, ¿Ya sabes dónde esta tu delegación de la SRE? \" (a ((class . \"reference external\") (href . \"http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte\")) \"http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte\")) (p nil \"Por último, el pasaporte te lo entregan el mismo día, como a las 3 y media de la tarde.\")) (div ((class . \"section\") (id . \"visa\")) (h2 nil \"Visa\") (p nil \"Para entrar a Estados Unidos desde México tienes que tener VISA. Punto. No hay de otra. Ni siquiera
te dejan abordar el avión en México si no traes VISA.\") (p nil \"Entonces a tramitarla.\") (p nil \"Primero tramita el pasaporte. Lo vas a necesitar a fuerza.\") (p nil \"Después entra al sitio oficial de las visas de estados unidos, haz tu cuenta e inicia una aplicación
de VISA. Todo esta en inglés y te preguntan un montón de idioteces.\") (p nil (a ((class . \"reference external\") (href . \"http://usvisa-info.com/es-MX/selfservice/ss_country_welcome\")) \"http://usvisa-info.com/es-MX/selfservice/ss_country_welcome\")) (p nil \"Pero te lo voy a hacer fácil.\") (ul nil (li nil (p ((class . \"first\")) \"Vas a Santa Clara, CA.\")) (li nil (p ((class . \"first\")) \"Te vas a hospedar en el hotel sede del PyCON: HYATT Regency Santa Clara.\") (p nil \"5101 Great America Parkway,
Santa Clara, California, USA 95054
Tel: +1 408 200 1234    Fax: +1 408 510 6449\")) (li nil (p ((class . \"first\")) \"No importa que no vayas a dormir justo en el hotel sede, pero ahí vas a estar casi todo el rato,
así que no estas mintiendo. Vas a ir ahí.\")) (li nil (p ((class . \"first\")) \"Consigue una tarjeta de crédito, a tu nombre. Así te será más fácil contestar la pregunta de
“¿Quién va a pagar los gastos de viaje y estancia?”.\")) (li nil (p ((class . \"first\")) \"Los del PYCON te pueden dar cartas de recomendación para hacerte más fácil el trámite de la visa.\")) (li nil (p ((class . \"first\")) \"¡Aguas con el tiempo! Las citas para entrevista te las pueden dar hasta después de varias semanas.
Y si te dan la visa, también tardará varias semanas ¡Estas contra reloj!\")) (li nil (p ((class . \"first\")) \"El derecho de la entrevista con el cónsul cuesta como 150 usd y se puede pagar en línea.
Esa a fuerza la tienes que pagar y no hay ninguna garantía de que te den la visa.\")) (li nil (p ((class . \"first\")) \"Aguas con la lana. Probablemente tengas que viajar a otra ciudad para tu entrevista en la
embajada de EU. Nada es gratis.\")) (li nil (p ((class . \"first\")) \"No te lleves casi nada a la entrevista. No te van a dejar pasar ni celulares, ni laptops ni
bolsas, ni mochilas, ni llaves, ni nada. Sólo tus papeles. Una vez dentro de la embajada estas en
territorio gringo, osea que se ponen mamones y no te dejan salir si no te toca salir. Es más, ve a
miar y a cagar minutos antes de tu hora de entrevista.\")) (li nil (p ((class . \"first\")) \"Si estas titulado y tienes chamba y das clases o eres estudiante, y además vas a un congreso,
con todo bien programado, entonces es bastante probable que den la visa.\")))) (div ((class . \"section\") (id . \"los-boletos-de-avion\")) (h2 nil \"Los boletos de avión\") (p nil \"Compra los boletos de avión YA. No esperes a la visa (El pasaporte si te lo piden para el boleto).
La razón de comprar los boletos ya, es que puedes agarrar mejores ofertas que si te esperas al
último minuto.\") (p nil \"Hay varias aerolíneas. Esta Volaris (la mas recomendable de viaje de ida), y las usuales, American
Airlines, etc. Los boletos de Alaska Airlines suelen estar baratos, aunque sean guajolojet :P.\") (p nil \"El año pasado los del PyCON recomendaron Kayak.com para hacer comparaciones de precios.\") (p nil \"Por último, puedes llegar a varios aeropuertos. El más cómodo es el de San Jose International
Airport (SJC), pues esta en la misma ciudad. Renta un auto (necesitarás tarjeta de crédito y licencia de manejo mexicana, que si
vale allá.) o vete en taxi al hotel. Será más fácil. O si llegas con @erik_river o @\") (p nil \"Otro tip es ver quiénes van llegando al aeropuerto, y si les ves cara de geek pregúntales que si van
para el PYCON y si te les puedes pegar. Puede que tengas suerte y renten un auto y te lleven gratis
al hotel(Así nos pasó el año pasado :D).\") (p nil \"También puedes llegar a el Aeropuerto de San Francisco (SFO), o al de Oakland (OAK). Desde esos dos
sale el tren hacia  Santa Clara y es experiencia chida. Desde la estación de trenes de Santa Clara,
tendrás que tomar Taxi hacia al hotel y te la van a dejar caer en no menos de 40 USD.\")) (div ((class . \"section\") (id . \"fin\")) (h2 nil \"Fin\") (p nil \"¡No olvides, pásala chido, aprende mucho y conoce mucha gente!\"))))" "http://blog.noenieto.com/blog/html/2013/01/25/tips_para_ir_al_pycon_2013.html" (20737 62768) old 6 nil nil ((id nil "http://blog.noenieto.com/blog/html/2013/01/25/tips_para_ir_al_pycon_2013.html") (link ((href . "http://blog.noenieto.com/blog/html/2013/01/25/tips_para_ir_al_pycon_2013.html") (rel . "alternate") (type . "text/html"))) (title nil "Tips para ir al PyCON 2013") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "tips-para-ir-al-pycon-2013")) (h1 nil "Tips para ir al PyCON 2013") (p nil "Se viene el PyCON 2013, es su segunda edición en la bella ciudad de Santa Clara, California (Osea,
silicon valley). Vale toda la pena ir para allá.") (p nil "Lástima que me lo voy a perder por que ando de viaje en Argentina.") (p nil "Pero tengo varios cuates que van por primera vez al PyCON y algunos van por primera vez a EU, así
que aquí les pongo unos consejos.") (div ((class . "section") (id . "pasaporte")) (h2 nil "Pasaporte") (p nil "El pasaporte debe de estar vigente para las fechas que viajas a EU. Si no tienes pasaporte, entonces
lo tienes que empezar a tramitar ¡YA MISMO!") (p nil "Tienes que hacer cita previa para el trámite del pasaporte y por desgracia, algunas veces te dan la
cita hasta después de varias semanas.") (p nil "El sitio donde debes de hacer tu cita es este: " (a ((class . "reference external") (href . "http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes")) "http://www.sre.gob.mx/index.php/tramites-y-servicios/pasaportes")) (p nil "Lee todo lo de la página y comienza a juntar tus requisitos.") (p nil "Ten cuidado con las fotos, por que luego no aceptan las fotos que hacen en cualquier estudio
fotográfico. Para más seguridad, elige estudios fotográficos que estan cerca de la delegación donde
tienes que hacer tu trámite. Las fotos cuestan entre $50 y $100 pesos.") (p nil "Un tip estratégico es que si en tu ciudad esta muy lleno y no te dan cita pronto, entonces puedes
pedir una cita urgente (con ninguna garantía) o pedir la cita en la delegación de una ciudad
cercana. Todo esto depende de qué tantos recursos tengas para viajar a otra ciudad.") (p nil "Por cierto, ¿Ya sabes dónde esta tu delegación de la SRE? " (a ((class . "reference external") (href . "http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte")) "http://www.sre.gob.mx/index.php/donde-tramitar-tu-pasaporte")) (p nil "Por último, el pasaporte te lo entregan el mismo día, como a las 3 y media de la tarde.")) (div ((class . "section") (id . "visa")) (h2 nil "Visa") (p nil "Para entrar a Estados Unidos desde México tienes que tener VISA. Punto. No hay de otra. Ni siquiera
te dejan abordar el avión en México si no traes VISA.") (p nil "Entonces a tramitarla.") (p nil "Primero tramita el pasaporte. Lo vas a necesitar a fuerza.") (p nil "Después entra al sitio oficial de las visas de estados unidos, haz tu cuenta e inicia una aplicación
de VISA. Todo esta en inglés y te preguntan un montón de idioteces.") (p nil (a ((class . "reference external") (href . "http://usvisa-info.com/es-MX/selfservice/ss_country_welcome")) "http://usvisa-info.com/es-MX/selfservice/ss_country_welcome")) (p nil "Pero te lo voy a hacer fácil.") (ul nil (li nil (p ((class . "first")) "Vas a Santa Clara, CA.")) (li nil (p ((class . "first")) "Te vas a hospedar en el hotel sede del PyCON: HYATT Regency Santa Clara.") (p nil "5101 Great America Parkway,
Santa Clara, California, USA 95054
Tel: +1 408 200 1234    Fax: +1 408 510 6449")) (li nil (p ((class . "first")) "No importa que no vayas a dormir justo en el hotel sede, pero ahí vas a estar casi todo el rato,
así que no estas mintiendo. Vas a ir ahí.")) (li nil (p ((class . "first")) "Consigue una tarjeta de crédito, a tu nombre. Así te será más fácil contestar la pregunta de
“¿Quién va a pagar los gastos de viaje y estancia?”.")) (li nil (p ((class . "first")) "Los del PYCON te pueden dar cartas de recomendación para hacerte más fácil el trámite de la visa.")) (li nil (p ((class . "first")) "¡Aguas con el tiempo! Las citas para entrevista te las pueden dar hasta después de varias semanas.
Y si te dan la visa, también tardará varias semanas ¡Estas contra reloj!")) (li nil (p ((class . "first")) "El derecho de la entrevista con el cónsul cuesta como 150 usd y se puede pagar en línea.
Esa a fuerza la tienes que pagar y no hay ninguna garantía de que te den la visa.")) (li nil (p ((class . "first")) "Aguas con la lana. Probablemente tengas que viajar a otra ciudad para tu entrevista en la
embajada de EU. Nada es gratis.")) (li nil (p ((class . "first")) "No te lleves casi nada a la entrevista. No te van a dejar pasar ni celulares, ni laptops ni
bolsas, ni mochilas, ni llaves, ni nada. Sólo tus papeles. Una vez dentro de la embajada estas en
territorio gringo, osea que se ponen mamones y no te dejan salir si no te toca salir. Es más, ve a
miar y a cagar minutos antes de tu hora de entrevista.")) (li nil (p ((class . "first")) "Si estas titulado y tienes chamba y das clases o eres estudiante, y además vas a un congreso,
con todo bien programado, entonces es bastante probable que den la visa.")))) (div ((class . "section") (id . "los-boletos-de-avion")) (h2 nil "Los boletos de avión") (p nil "Compra los boletos de avión YA. No esperes a la visa (El pasaporte si te lo piden para el boleto).
La razón de comprar los boletos ya, es que puedes agarrar mejores ofertas que si te esperas al
último minuto.") (p nil "Hay varias aerolíneas. Esta Volaris (la mas recomendable de viaje de ida), y las usuales, American
Airlines, etc. Los boletos de Alaska Airlines suelen estar baratos, aunque sean guajolojet :P.") (p nil "El año pasado los del PyCON recomendaron Kayak.com para hacer comparaciones de precios.") (p nil "Por último, puedes llegar a varios aeropuertos. El más cómodo es el de San Jose International
Airport (SJC), pues esta en la misma ciudad. Renta un auto (necesitarás tarjeta de crédito y licencia de manejo mexicana, que si
vale allá.) o vete en taxi al hotel. Será más fácil. O si llegas con @erik_river o @") (p nil "Otro tip es ver quiénes van llegando al aeropuerto, y si les ves cara de geek pregúntales que si van
para el PYCON y si te les puedes pegar. Puede que tengas suerte y renten un auto y te lleven gratis
al hotel(Así nos pasó el año pasado :D).") (p nil "También puedes llegar a el Aeropuerto de San Francisco (SFO), o al de Oakland (OAK). Desde esos dos
sale el tren hacia  Santa Clara y es experiencia chida. Desde la estación de trenes de Santa Clara,
tendrás que tomar Taxi hacia al hotel y te la van a dejar caer en no menos de 40 USD.")) (div ((class . "section") (id . "fin")) (h2 nil "Fin") (p nil "¡No olvides, pásala chido, aprende mucho y conoce mucha gente!"))))) (updated nil "2013-01-25T03:00:00Z") (category ((term . "Python"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z")))) ("Cuatro atajos del teclado de Gnome3" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (div ((class . \"section\") (id . \"cuatro-atajos-del-teclado-de-gnome3\")) (h1 nil \"Cuatro atajos del teclado de Gnome3\") (p nil \"En los últimos días me he encontrado cuatro combinaciones de teclas que me ahorrarán muchos clicks.
Se trata de la combinación de la tecla \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) \" o “Windows” y la teclas de dirección. Aquí les va la
tabla de lo que hace cada una:\") (table ((border . \"1\") (class . \"docutils\")) (colgroup nil (col ((width . \"26%\"))) (col ((width . \"74%\")))) (thead ((valign . \"bottom\")) (tr ((class . \"row-odd\")) (th ((class . \"head\")) \"Combinación de teclas\") (th ((class . \"head\")) \"Acción\"))) (tbody ((valign . \"top\")) (tr ((class . \"row-even\")) (td nil (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Arriba\"))) (td nil \"Maximizar la ventana actual.\")) (tr ((class . \"row-odd\")) (td nil (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Abajo\"))) (td nil \"Desmaximizar la ventana actual.\")) (tr ((class . \"row-even\")) (td nil (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Derecha\"))) (td nil \"Alinear la ventana para que ocupe el 50% de la pantalla hacia la derecha.*\")) (tr ((class . \"row-odd\")) (td nil (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Izquierda\"))) (td nil \"Alinear la ventana para que ocupe el 50% de la pantalla \" (em nil \"hacia la izquierda.\"))))) (p nil \"A excepción de \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Abajo\")) \", todos los demás atajos alternan entre el tamaño y posiciones
anteriores y el nuevo tamaño/posición. Por ejemlo, supongamos que la ventana estaba maximizada y la
acomodas para que tome el 50% de la izquierda con \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Meta\")) (em nil \"+\") (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Izquierda\")) \", si presionas la misma
combinación, la ventana volverá a su tamaño maximizado.\") (p nil \"¿Ya lo probaste?\")))" "http://blog.noenieto.com/blog/html/2013/01/06/cuatro_atajos_del_teclado_de_gnome3.html" (20712 59568) old 7 nil nil ((id nil "http://blog.noenieto.com/blog/html/2013/01/06/cuatro_atajos_del_teclado_de_gnome3.html") (link ((href . "http://blog.noenieto.com/blog/html/2013/01/06/cuatro_atajos_del_teclado_de_gnome3.html") (rel . "alternate") (type . "text/html"))) (title nil "Cuatro atajos del teclado de Gnome3") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "cuatro-atajos-del-teclado-de-gnome3")) (h1 nil "Cuatro atajos del teclado de Gnome3") (p nil "En los últimos días me he encontrado cuatro combinaciones de teclas que me ahorrarán muchos clicks.
Se trata de la combinación de la tecla " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) " o “Windows” y la teclas de dirección. Aquí les va la
tabla de lo que hace cada una:") (table ((border . "1") (class . "docutils")) (colgroup nil (col ((width . "26%"))) (col ((width . "74%")))) (thead ((valign . "bottom")) (tr ((class . "row-odd")) (th ((class . "head")) "Combinación de teclas") (th ((class . "head")) "Acción"))) (tbody ((valign . "top")) (tr ((class . "row-even")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Arriba"))) (td nil "Maximizar la ventana actual.")) (tr ((class . "row-odd")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Abajo"))) (td nil "Desmaximizar la ventana actual.")) (tr ((class . "row-even")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Derecha"))) (td nil "Alinear la ventana para que ocupe el 50% de la pantalla hacia la derecha.*")) (tr ((class . "row-odd")) (td nil (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Izquierda"))) (td nil "Alinear la ventana para que ocupe el 50% de la pantalla " (em nil "hacia la izquierda."))))) (p nil "A excepción de " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Abajo")) ", todos los demás atajos alternan entre el tamaño y posiciones
anteriores y el nuevo tamaño/posición. Por ejemlo, supongamos que la ventana estaba maximizada y la
acomodas para que tome el 50% de la izquierda con " (tt ((class . "docutils literal")) (span ((class . "pre")) "Meta")) (em nil "+") (tt ((class . "docutils literal")) (span ((class . "pre")) "Izquierda")) ", si presionas la misma
combinación, la ventana volverá a su tamaño maximizado.") (p nil "¿Ya lo probaste?")))) (updated nil "2013-01-06T03:00:00Z") (category ((term . "Gnome"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z")))) ("Begira, sitio web de la revista del Grupo Ulma" "El Grupo Ulma lleva unos cuantos años editando una revista de papel en la que publican sus noticias propias. El alcance de estas noticias se limitaba hasta sus socios y empleados, y con este nuevo sitio web pretende alcanzar más difusión" "http://www.codesyntax.com/es/blog/begira-sitio-web-de-la-revista-del-grupo-ulma" (20669 62001) old 8 nil nil ((id nil "http://www.codesyntax.com/es/blog/begira-sitio-web-de-la-revista-del-grupo-ulma") (link ((href . "http://www.codesyntax.com/es/blog/begira-sitio-web-de-la-revista-del-grupo-ulma") (rel . "alternate") (type . "text/html"))) (title nil "Begira, sitio web de la revista del Grupo Ulma") (summary nil "El Grupo Ulma lleva unos cuantos años editando una revista de papel en la que publican sus noticias propias. El alcance de estas noticias se limitaba hasta sus socios y empleados, y con este nuevo sitio web pretende alcanzar más difusión") (updated nil "2012-12-04T12:53:05Z") (category ((term . "proyectos"))) (category ((term . "plone"))) (author nil (name nil "mlizarralde")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Tutorial de Git con windoze" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (div ((class . \"section\") (id . \"tutorial-de-git-con-windoze\")) (h1 nil \"Tutorial de Git con windoze\") (p nil \"Este es mi tutorial de \" (a ((class . \"reference external\") (href . \"http://git-scm.com/\")) \"git\") \" para Winshit. Me caga usar
winblows, pero reconozco que no todo el mundo es perfecto y muchas veces hay
que trabajar con lo que hay.\") (p nil \"Además, tengo un amigo que es diseñador y pues nos interesa mas que diseñe
bonito a que se vuelva experto en git, así que por eso hago este tutorial.\") (p nil \"Hay un montón de documentación acerca de git en español en inglés y me dió
flojera revisarla, así que pensé que esto sería buen tema para escribir en mi
blog. Solo voy a resumir el \" (a ((class . \"reference external\") (href . \"http://git-scm.com/book\")) \"libro de git\") \" (que
esta en inglés), pero en español y con mis propias palabras.\") (div ((class . \"section\") (id . \"primero-la-historia-de-git\")) (h2 nil \"Primero la historia de Git\") (p nil (a ((class . \"reference external\") (href . \"https://plus.google.com/+LinusTorvalds\")) \"Linus Torvalds\") \" escribió el kernel
de Linux y por muchos años estuvo administrando las colaboraciones de cientos
de personas mediante emails y parches. Pero llegó un momento en que las cosas
se volvieron demasiado grandes y hubo que empezar a usar un sistema de control
de versiones. Como a Linus le asqueaba CVS (un sistema de control de versiones
de la era del caldo) y SVN, comenzó a usar un sistema propietario llamado
BitKeeper. La decisión le cayó de la patada a la comunidad de software libre,
pero a Linus le importó un bledo hasta que las limitaciones de BitKeeper le
asquearon también y prefirió escribir su propio sistema de control de
versiones desde cero ¡Vaya tipo!\") (p nil \"Puedes leer la mini-historia oficial en la \" (a ((class . \"reference external\") (href . \"http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git\")) \"página oficial de git\") \" que esta en inglés,
por supuesto.\")) (div ((class . \"section\") (id . \"que-eso-de-control-de-versiones\")) (h2 nil \"¿Qué eso de control de versiones?\") (p nil \"Es un sistema ideado para mantener un registro al por menor de los cambios que
se le hacen a un proyecto que contiene archivos de computadora. El sistema de
control sirve para responder cuestiones bastante importantes en ciertos casos
como:\") (blockquote nil (div nil (ul ((class . \"simple\")) (li nil \"Modifiqué un montón de cosas y ahora el proyecto ya no funciona ¿Qué fue lo
que le cambié? ¿Cómo lo regreso a la normalidad?\") (li nil \"¿Quién fue el que descompuso el proyecto?\") (li nil \"Hace varias semanas borramos algunas partes del proyecto y ahora hay que
volver a hacerlas. ¿Puedo regresar el tiempo para ver cómo estaba el
proyecto antes y copiar lo que necesito ahora?\") (li nil \"Fulano, Mengano y Perengano me estan mandando sus cambios, pero lo que me
mandan no sirve por que no tiene integrado mis últimas modificaciones y tengo
que estar adaptándolas ¿Hay manera de que ellos siempre esten en sincronía con
mi versión del proyecto?\") (li nil \"Un hacker/virus/troyano se metió a mi compu y se conectó a todos mis sitios web
e inyectó código malicioso en mis páginas con PHP y ahora Chrome y Firefox
sacan alarmas de todo tipo por que dicen que mis sitios están reportados como
sitios que bajan troyanos y virus. ¿Cómo se qué archivos fueron modificados?\")))) (p nil \"¿Te identificas con alguna de estas situaciones? Si la respuesta es \" (em nil \"no\") \"
entonces significa que use malos ejemplos y que tendrás que buscar otros por
que nos movemos a lo que sigue XD. Pero el chiste es que tener un sistema de
control de versiones es buena idea y además es estar a la moda. Punto.\") (p nil \"Luego, hay diferentes maneras de mantener el control de los cambios de tus
proyectos. Por ejemplo, la manera más común en la que la gente mantiene
control de las versiones de sus proyectos es haciendo copias de la carpeta del
proyecto cada vez que hacen cambios. Sería una cosa parecida a esto:\") (div ((class . \"highlight-python\")) (pre nil \"proyecto_chido_1/
proyecto_chido_1_bis/
proyecto_chido_pepis/
proyecto_chIdo_lfkjf/
proyecto_chido_22-feb-200/
proyecto_chido_bueno+++.zip
proyecto_chido_bueno--++.zip.doc\")) (p nil \"Y así ... ewwww\") (p nil \"Entonces vienen los sistemitas de control de versiones y ahora solo tendrías
una carpeta por cada proyecto:\") (div ((class . \"highlight-python\")) (pre nil \"mis_proyectos/
cliente_a/
cliente_b/
cliente_c/\")) (p nil \"Todo más ordenado ¿No?\")) (div ((class . \"section\") (id . \"centralizado-vs-local\")) (h2 nil \"Centralizado vs local\") (p nil \"Cuando un sistema de control de versiones está centralizado, significa que hay
una computadora central conectada a la red con la que te debes de comunicar
cuando quieras registrar cambios. Subversion es uno de esos.\") (p nil \"Cuando un sistema de control de versiones es local, significa que hay cierta
base de datos en el disco duro de tu computadora que va registrando los
cambios. \" (strong nil \"Git\") \" es uno de esos y registra los cambios que vayas haciendo en
una carpeta especial en el directorio principal de tu proyecto.\") (p nil \"Si quieres más detalles de las diferencias \" (a ((class . \"reference external\") (href . \"http://git-scm.com/book/en/Getting-Started-About-Version-Control\")) \"lee aquí\") \".\") (p nil \"Pero \" (strong nil \"Git\") \" es algo flexible y aunque todos tus cambios se deben registrar
localmente, \" (strong nil \"git\") \" lo hace relativamente fácil para subir y bajar cambios
desde y hacia una computadora central. Osea que Linus si hizo bien su trabajo
y tenemos lo mejor de los dos mundos.\")) (div ((class . \"section\") (id . \"instalando-git-en-tu-winshit\")) (h2 nil \"Instalando git en tu winshit\") (p nil \"Ahora un poquito de “Next, next, next”. Métete a \" (a ((class . \"reference external\") (href . \"http://windows.github.com\")) \"http://windows.github.com\") \"
y picale en el botón grande verde que dice “Download”  y corre el programita
que baja. A la hora de escribir esto el programa se llamaba
\" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"GitHubSetup.exe\")) \" pero igual y luego se les aloca a los de GitHub y le
cambian el nombre. Sólo asegurate de lo estes bajando de la web de github.\") (p nil \"Nota: Resulta que este programa que acabas de instalar esta hecho por
GitHub Inc. y obviamente todo tendrá que ver con GitHub. Si no usas GitHub
aún puedes usar la linea de comandos de windows para clonar un repositorio
y administrarlo con este software.\") (p nil \"La línea de comandos de git la encuentras en: \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"Programas\") (span ((class . \"pre\")) \"->\") (span ((class . \"pre\")) \"GitHub,\") (span ((class . \"pre\")) \"Inc.\") (span ((class . \"pre\")) \"->\") (span ((class . \"pre\")) \"Git\") (span ((class . \"pre\")) \"Shell\")) \". Cuando lo ejecutas sale una consola de windows (o de PowerShell
si es que lo tienes instalado.) Considera esto como el modo \" (em nil \"avanzado\") \" de git
y ahí no hay botoncitos. Tendrás que escribir cosas como si escribieras en la
barra de búsqueda del navegador web o de Google.\")) (div ((class . \"section\") (id . \"te-acuerdas-de-ms-dos\")) (h2 nil \"¿Te acuerdas de MS-DOS?\") (p nil \"No se si llegaste a usar MS-DOS. Muchos usuarios de computadora de hoy en día
no lo conocieron o nunca lo aprendieron a usar. El predecesor de Windows fue
MS-DOS (también distribuido por Microsoft). MS-DOS no era gráfico ni tenía
botoncitos, imagenes ni todas esas chuladas con las que ahora se entretienen
los usuarios de computadora. MS-DOS era puro texto y se manejaba con
\" (em nil \"comandos\") \". El modo texto no se ha desvanecido, al contrario, gracias a Linux
y OSX la interfaz de línea de comando se ha quedado muy engranada en el
corazón de los usuarios de computadora expertos, pues puedes hacer cosas mucho
más rápido que con el mouse y los botones.\") (p nil \"Aquí te van algunos comandos que te van a servir.\") (p nil \"Comenzamos con lo básico de invocar invocar algún programa, simplemente
escribes su nombre y después presionas la tecla \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"<<enter>>>\")) \". Por ejemplo,
el nombre del administrador de archivos es es: \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"explorer.exe\")) \" y para lanzar
una ventana de este simplemente escribes:\") (div ((class . \"highlight-python\")) (div ((class . \"highlight\")) (pre nil (span ((class . \"n\")) \"explorer\")))) (p nil \"o:\") (div ((class . \"highlight-python\")) (div ((class . \"highlight\")) (pre nil (span ((class . \"n\")) \"explorer\") (span ((class . \"o\")) \".\") (span ((class . \"n\")) \"exe\")))) (p nil \"Pero \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"explorer\")) \" es más corto ¿No?\") (p nil \"Recuerda, en MS-DOS las cosas no son automáticas y MS-DOS se quedará esperando
a que le des instrucciones (escritas) y aún así no hará nada hasta que
presiones \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"<<enter>>\")) \" MS-DOS es tonto y poderoso. Solo necesita un cerebro y
tu se lo vas a dar.\") (p nil \"Luego, para listar los contenidos de un directorio puedes usar el comando
\" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"dir\")) \" y el resultado de este comando es algo así:\") (div ((class . \"highlight-python\")) (pre nil \"C:\\\\Documents and Settings\\\\Fulano Fernandez\\\\Mis documentos\\\\GitHub>dir
El volumen de la unidad C no tiene etiqueta.
El número de serie del volumen es: F85F-6785
Directorio de C:\\\\Documents and Settings\\\\Fulano Fernandez\\\\Mis documentos\\\\GitHub
13/11/2012  21:51    <DIR>          .
13/11/2012  21:51    <DIR>          ..
13/11/2012  21:17    <DIR>          directorio
13/11/2012  21:17                   archivo.txt
0 archivos              0 bytes
3 dirs   5.772.095.488 bytes libres\")) (p nil \"Luego, para cambiarte de directorio:\") (div ((class . \"highlight-python\")) (pre nil \"cd directorio
cd c:\\\\windows
cd \\\"c:\\\\Documents and Settings\\\\Fulano Fernandez\\\\Mis documentos\\\\GitHub\\\\mi_repo\\\"\")) (p nil \"En MS-DOS y en Winshit, los nombres de archivo y directorio no tienen
distinción por minúsculas o mayúsculas. Entonces, el archivo odio_windows.txt
y OdIo_WinDoWS.TxT es el mismo. Esto no se cumple, por fortuna, para sistemas
tipo unix como Linux, OSX o Ios.\") (p nil \"Para hacer un directorio puedes usar \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"mkdir\")) \":\") (div ((class . \"highlight-python\")) (pre nil \"mkdir mi_repositorio\")) (p nil \"Para cambiarte de unidad simplemente escribes la letra de la unidad seguida de
dos puntos:\") (div ((class . \"highlight-python\")) (pre nil \"c:
d:
e:
f:\")) (p nil \"Y eso es todo de MS-DOS. Hay mucho más, pero confío en que sabrás buscarlo en
google o que te esperes a que escriba algo al respecto.\")) (div ((class . \"section\") (id . \"ahora-si-el-workflow\")) (h2 nil \"Ahora si, el workflow\") (p nil \"Pensaba centrarme principalmente en poner fotitos de dónde picarle en en la
aplicación de GitHub, pero mejor te voy a enseñar la manera geek de usar git.
No es tan difícil y sólo necesitas un par de comandos de MS-DOS (ver arriba).\") (div ((class . \"section\") (id . \"crear-un-repo\")) (h3 nil \"0.- Crear un repo\") (p nil \"Este puede ser el primer paso o no. Realmente solo se hace una vez y se trata
de convertir un directorio común y corriente en un repositorio local de Git:\") (div ((class . \"highlight-python\")) (pre nil \"git init\")) (p nil \"¡Eso es todo!\")) (div ((class . \"section\") (id . \"clonar-un-repo\")) (h3 nil \"1.- Clonar un repo\") (p nil \"Generalmente este es el primer paso del flujo de trabajo. Tienes que obtener
una copia del repositorio en tu disco duro y lo más común es obtenerlo de un
repositorio remoto como GitHub, BitBucket o Assembla:\") (div ((class . \"highlight-python\")) (pre nil \"git clone <dirección_del_repositorio>\")) (p nil \"La dirección del repositorio tiene un esquema parecido al de una URL. Puede
empezar con \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"http://\")) \" o con \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"git://\")) \" e incluso con \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"ssh://\")) \". Para este
último tendremos que tener configurada una llave SSH.\")) (div ((class . \"section\") (id . \"bajar-los-cambios-que-otros-han-hecho\")) (h3 nil \"2.- Bajar los cambios que otros han hecho\") (p nil \"Si clonaste un repo es muy probable que estes colaborando con otros. Si es
así, lo primero que debes hacer es bajar los cambios que hayan realizado tus
colegas para que tengas un repositorio fresco y no tengas conflictos. También
realiza esto cuando te avisen que metieron cambios a tu repositorio:\") (div ((class . \"highlight-python\")) (pre nil \"git pull origin master\")) (p nil \"Algunas veces es suficiente con escribir \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"git\") (span ((class . \"pre\")) \"pull\")))) (div ((class . \"section\") (id . \"hacer-tus-cambios\")) (h3 nil \"3.- Hacer tus cambios\") (p nil \"Es solo un directorio con archivos. Ya sabes qué hacer.\")) (div ((class . \"section\") (id . \"saber-lo-que-has-cambiado\")) (h3 nil \"4.- Saber lo que has cambiado\") (p nil \"Git controla los cambios que le vas haciendo a los archivos de un repositorio.
Esto es muy útil para hacer una revisión de lo que has hecho.:\") (div ((class . \"highlight-python\")) (pre nil \"git diff\")) (p nil \"El comando git diff imprimirá en la consola un listado de las diferencias que
hay entre la última version del repositorio y lo que has cambiado. Lo nuevo se
verá en color verde y lo que has borrado se verá en color rojo.\") (p nil \"Obviamente, para archivos binarios (como imágenes o archivos de word) sólo
verás un resúmen de cuántos bytes se han insertado y cuántos se han borrado.\")) (div ((class . \"section\") (id . \"registrar-o-guardar-tus-cambios\")) (h3 nil \"5.- Registrar o guardar tus cambios\") (p nil \"Cuando has terminado de hacer tus cambios es hora de hacer un \" (em nil \"commit\") \". Esto
equivale a darle un “Guardar” en tu editor de texto favorito, pero para el
repositorio.\") (p nil \"La manera más fácil (aunque no la única) es:\") (div ((class . \"highlight-python\")) (pre nil \"git commit -am \\\"Descripción de los cambios\\\"\")) (p nil \"No olvides poner los espacios y poner un mensaje descriptivo de los cambios
entre comillas. No seas flojo y describe bien las cosas que has hecho.\")) (div ((class . \"section\") (id . \"compartir-tus-cambios\")) (h3 nil \"6.- Compartir tus cambios\") (p nil \"Este es el paso final de un típico día de trabajo con Git. Ya sincronizaste tu
repositorio con los últimos cambios (si es que estas colaborando con alguien),
hiciste tu trabajo y cambiaste algunos archivos y por último registraste tus
cambios en tu copia local.\") (p nil \"Ahora es momento de compartir tus cambios con tus colegas.:\") (div ((class . \"highlight-python\")) (pre nil \"git push\")) (p nil \"¡Y eso es todo! ¿Se ve difícil?\"))) (div ((class . \"section\") (id . \"mas-informacion-acerca-de-git\")) (h2 nil \"Más información acerca de Git\") (ul ((class . \"simple\")) (li nil \"El libro de git en spanglish –> \" (a ((class . \"reference external\") (href . \"http://git-scm.com/book/es/\")) \"http://git-scm.com/book/es/\")) (li nil \"La página de wikipedia acerca de Git –> \" (a ((class . \"reference external\") (href . \"http://es.wikipedia.org/wiki/Git\")) \"http://es.wikipedia.org/wiki/Git\")) (li nil \"Chistes gráficos acerca de Git –> \" (a ((class . \"reference external\") (href . \"http://wheningit.tumblr.com/\")) \"http://wheningit.tumblr.com/\"))))))" "http://blog.noenieto.com/blog/html/2012/11/20/tutorial_de_git_con_windoze.html" (20650 62000) old 9 nil nil ((id nil "http://blog.noenieto.com/blog/html/2012/11/20/tutorial_de_git_con_windoze.html") (link ((href . "http://blog.noenieto.com/blog/html/2012/11/20/tutorial_de_git_con_windoze.html") (rel . "alternate") (type . "text/html"))) (title nil "Tutorial de Git con windoze") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "tutorial-de-git-con-windoze")) (h1 nil "Tutorial de Git con windoze") (p nil "Este es mi tutorial de " (a ((class . "reference external") (href . "http://git-scm.com/")) "git") " para Winshit. Me caga usar
winblows, pero reconozco que no todo el mundo es perfecto y muchas veces hay
que trabajar con lo que hay.") (p nil "Además, tengo un amigo que es diseñador y pues nos interesa mas que diseñe
bonito a que se vuelva experto en git, así que por eso hago este tutorial.") (p nil "Hay un montón de documentación acerca de git en español en inglés y me dió
flojera revisarla, así que pensé que esto sería buen tema para escribir en mi
blog. Solo voy a resumir el " (a ((class . "reference external") (href . "http://git-scm.com/book")) "libro de git") " (que
esta en inglés), pero en español y con mis propias palabras.") (div ((class . "section") (id . "primero-la-historia-de-git")) (h2 nil "Primero la historia de Git") (p nil (a ((class . "reference external") (href . "https://plus.google.com/+LinusTorvalds")) "Linus Torvalds") " escribió el kernel
de Linux y por muchos años estuvo administrando las colaboraciones de cientos
de personas mediante emails y parches. Pero llegó un momento en que las cosas
se volvieron demasiado grandes y hubo que empezar a usar un sistema de control
de versiones. Como a Linus le asqueaba CVS (un sistema de control de versiones
de la era del caldo) y SVN, comenzó a usar un sistema propietario llamado
BitKeeper. La decisión le cayó de la patada a la comunidad de software libre,
pero a Linus le importó un bledo hasta que las limitaciones de BitKeeper le
asquearon también y prefirió escribir su propio sistema de control de
versiones desde cero ¡Vaya tipo!") (p nil "Puedes leer la mini-historia oficial en la " (a ((class . "reference external") (href . "http://git-scm.com/book/en/Getting-Started-A-Short-History-of-Git")) "página oficial de git") " que esta en inglés,
por supuesto.")) (div ((class . "section") (id . "que-eso-de-control-de-versiones")) (h2 nil "¿Qué eso de control de versiones?") (p nil "Es un sistema ideado para mantener un registro al por menor de los cambios que
se le hacen a un proyecto que contiene archivos de computadora. El sistema de
control sirve para responder cuestiones bastante importantes en ciertos casos
como:") (blockquote nil (div nil (ul ((class . "simple")) (li nil "Modifiqué un montón de cosas y ahora el proyecto ya no funciona ¿Qué fue lo
que le cambié? ¿Cómo lo regreso a la normalidad?") (li nil "¿Quién fue el que descompuso el proyecto?") (li nil "Hace varias semanas borramos algunas partes del proyecto y ahora hay que
volver a hacerlas. ¿Puedo regresar el tiempo para ver cómo estaba el
proyecto antes y copiar lo que necesito ahora?") (li nil "Fulano, Mengano y Perengano me estan mandando sus cambios, pero lo que me
mandan no sirve por que no tiene integrado mis últimas modificaciones y tengo
que estar adaptándolas ¿Hay manera de que ellos siempre esten en sincronía con
mi versión del proyecto?") (li nil "Un hacker/virus/troyano se metió a mi compu y se conectó a todos mis sitios web
e inyectó código malicioso en mis páginas con PHP y ahora Chrome y Firefox
sacan alarmas de todo tipo por que dicen que mis sitios están reportados como
sitios que bajan troyanos y virus. ¿Cómo se qué archivos fueron modificados?")))) (p nil "¿Te identificas con alguna de estas situaciones? Si la respuesta es " (em nil "no") "
entonces significa que use malos ejemplos y que tendrás que buscar otros por
que nos movemos a lo que sigue XD. Pero el chiste es que tener un sistema de
control de versiones es buena idea y además es estar a la moda. Punto.") (p nil "Luego, hay diferentes maneras de mantener el control de los cambios de tus
proyectos. Por ejemplo, la manera más común en la que la gente mantiene
control de las versiones de sus proyectos es haciendo copias de la carpeta del
proyecto cada vez que hacen cambios. Sería una cosa parecida a esto:") (div ((class . "highlight-python")) (pre nil "proyecto_chido_1/
proyecto_chido_1_bis/
proyecto_chido_pepis/
proyecto_chIdo_lfkjf/
proyecto_chido_22-feb-200/
proyecto_chido_bueno+++.zip
proyecto_chido_bueno--++.zip.doc")) (p nil "Y así ... ewwww") (p nil "Entonces vienen los sistemitas de control de versiones y ahora solo tendrías
una carpeta por cada proyecto:") (div ((class . "highlight-python")) (pre nil "mis_proyectos/
              cliente_a/
              cliente_b/
              cliente_c/")) (p nil "Todo más ordenado ¿No?")) (div ((class . "section") (id . "centralizado-vs-local")) (h2 nil "Centralizado vs local") (p nil "Cuando un sistema de control de versiones está centralizado, significa que hay
una computadora central conectada a la red con la que te debes de comunicar
cuando quieras registrar cambios. Subversion es uno de esos.") (p nil "Cuando un sistema de control de versiones es local, significa que hay cierta
base de datos en el disco duro de tu computadora que va registrando los
cambios. " (strong nil "Git") " es uno de esos y registra los cambios que vayas haciendo en
una carpeta especial en el directorio principal de tu proyecto.") (p nil "Si quieres más detalles de las diferencias " (a ((class . "reference external") (href . "http://git-scm.com/book/en/Getting-Started-About-Version-Control")) "lee aquí") ".") (p nil "Pero " (strong nil "Git") " es algo flexible y aunque todos tus cambios se deben registrar
localmente, " (strong nil "git") " lo hace relativamente fácil para subir y bajar cambios
desde y hacia una computadora central. Osea que Linus si hizo bien su trabajo
y tenemos lo mejor de los dos mundos.")) (div ((class . "section") (id . "instalando-git-en-tu-winshit")) (h2 nil "Instalando git en tu winshit") (p nil "Ahora un poquito de “Next, next, next”. Métete a " (a ((class . "reference external") (href . "http://windows.github.com")) "http://windows.github.com") "
y picale en el botón grande verde que dice “Download”  y corre el programita
que baja. A la hora de escribir esto el programa se llamaba
" (tt ((class . "docutils literal")) (span ((class . "pre")) "GitHubSetup.exe")) " pero igual y luego se les aloca a los de GitHub y le
cambian el nombre. Sólo asegurate de lo estes bajando de la web de github.") (p nil "Nota: Resulta que este programa que acabas de instalar esta hecho por
GitHub Inc. y obviamente todo tendrá que ver con GitHub. Si no usas GitHub
aún puedes usar la linea de comandos de windows para clonar un repositorio
y administrarlo con este software.") (p nil "La línea de comandos de git la encuentras en: " (tt ((class . "docutils literal")) (span ((class . "pre")) "Programas") (span ((class . "pre")) "->") (span ((class . "pre")) "GitHub,") (span ((class . "pre")) "Inc.") (span ((class . "pre")) "->") (span ((class . "pre")) "Git") (span ((class . "pre")) "Shell")) ". Cuando lo ejecutas sale una consola de windows (o de PowerShell
si es que lo tienes instalado.) Considera esto como el modo " (em nil "avanzado") " de git
y ahí no hay botoncitos. Tendrás que escribir cosas como si escribieras en la
barra de búsqueda del navegador web o de Google.")) (div ((class . "section") (id . "te-acuerdas-de-ms-dos")) (h2 nil "¿Te acuerdas de MS-DOS?") (p nil "No se si llegaste a usar MS-DOS. Muchos usuarios de computadora de hoy en día
no lo conocieron o nunca lo aprendieron a usar. El predecesor de Windows fue
MS-DOS (también distribuido por Microsoft). MS-DOS no era gráfico ni tenía
botoncitos, imagenes ni todas esas chuladas con las que ahora se entretienen
los usuarios de computadora. MS-DOS era puro texto y se manejaba con
" (em nil "comandos") ". El modo texto no se ha desvanecido, al contrario, gracias a Linux
y OSX la interfaz de línea de comando se ha quedado muy engranada en el
corazón de los usuarios de computadora expertos, pues puedes hacer cosas mucho
más rápido que con el mouse y los botones.") (p nil "Aquí te van algunos comandos que te van a servir.") (p nil "Comenzamos con lo básico de invocar invocar algún programa, simplemente
escribes su nombre y después presionas la tecla " (tt ((class . "docutils literal")) (span ((class . "pre")) "<<enter>>>")) ". Por ejemplo,
el nombre del administrador de archivos es es: " (tt ((class . "docutils literal")) (span ((class . "pre")) "explorer.exe")) " y para lanzar
una ventana de este simplemente escribes:") (div ((class . "highlight-python")) (div ((class . "highlight")) (pre nil (span ((class . "n")) "explorer")))) (p nil "o:") (div ((class . "highlight-python")) (div ((class . "highlight")) (pre nil (span ((class . "n")) "explorer") (span ((class . "o")) ".") (span ((class . "n")) "exe")))) (p nil "Pero " (tt ((class . "docutils literal")) (span ((class . "pre")) "explorer")) " es más corto ¿No?") (p nil "Recuerda, en MS-DOS las cosas no son automáticas y MS-DOS se quedará esperando
a que le des instrucciones (escritas) y aún así no hará nada hasta que
presiones " (tt ((class . "docutils literal")) (span ((class . "pre")) "<<enter>>")) " MS-DOS es tonto y poderoso. Solo necesita un cerebro y
tu se lo vas a dar.") (p nil "Luego, para listar los contenidos de un directorio puedes usar el comando
" (tt ((class . "docutils literal")) (span ((class . "pre")) "dir")) " y el resultado de este comando es algo así:") (div ((class . "highlight-python")) (pre nil "C:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub>dir
 El volumen de la unidad C no tiene etiqueta.
 El número de serie del volumen es: F85F-6785

 Directorio de C:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub

13/11/2012  21:51    <DIR>          .
13/11/2012  21:51    <DIR>          ..
13/11/2012  21:17    <DIR>          directorio
13/11/2012  21:17                   archivo.txt
               0 archivos              0 bytes
               3 dirs   5.772.095.488 bytes libres")) (p nil "Luego, para cambiarte de directorio:") (div ((class . "highlight-python")) (pre nil "cd directorio
cd c:\\windows
cd \"c:\\Documents and Settings\\Fulano Fernandez\\Mis documentos\\GitHub\\mi_repo\"")) (p nil "En MS-DOS y en Winshit, los nombres de archivo y directorio no tienen
distinción por minúsculas o mayúsculas. Entonces, el archivo odio_windows.txt
y OdIo_WinDoWS.TxT es el mismo. Esto no se cumple, por fortuna, para sistemas
tipo unix como Linux, OSX o Ios.") (p nil "Para hacer un directorio puedes usar " (tt ((class . "docutils literal")) (span ((class . "pre")) "mkdir")) ":") (div ((class . "highlight-python")) (pre nil "mkdir mi_repositorio")) (p nil "Para cambiarte de unidad simplemente escribes la letra de la unidad seguida de
dos puntos:") (div ((class . "highlight-python")) (pre nil "c:
d:
e:
f:")) (p nil "Y eso es todo de MS-DOS. Hay mucho más, pero confío en que sabrás buscarlo en
google o que te esperes a que escriba algo al respecto.")) (div ((class . "section") (id . "ahora-si-el-workflow")) (h2 nil "Ahora si, el workflow") (p nil "Pensaba centrarme principalmente en poner fotitos de dónde picarle en en la
aplicación de GitHub, pero mejor te voy a enseñar la manera geek de usar git.
No es tan difícil y sólo necesitas un par de comandos de MS-DOS (ver arriba).") (div ((class . "section") (id . "crear-un-repo")) (h3 nil "0.- Crear un repo") (p nil "Este puede ser el primer paso o no. Realmente solo se hace una vez y se trata
de convertir un directorio común y corriente en un repositorio local de Git:") (div ((class . "highlight-python")) (pre nil "git init")) (p nil "¡Eso es todo!")) (div ((class . "section") (id . "clonar-un-repo")) (h3 nil "1.- Clonar un repo") (p nil "Generalmente este es el primer paso del flujo de trabajo. Tienes que obtener
una copia del repositorio en tu disco duro y lo más común es obtenerlo de un
repositorio remoto como GitHub, BitBucket o Assembla:") (div ((class . "highlight-python")) (pre nil "git clone <dirección_del_repositorio>")) (p nil "La dirección del repositorio tiene un esquema parecido al de una URL. Puede
empezar con " (tt ((class . "docutils literal")) (span ((class . "pre")) "http://")) " o con " (tt ((class . "docutils literal")) (span ((class . "pre")) "git://")) " e incluso con " (tt ((class . "docutils literal")) (span ((class . "pre")) "ssh://")) ". Para este
último tendremos que tener configurada una llave SSH.")) (div ((class . "section") (id . "bajar-los-cambios-que-otros-han-hecho")) (h3 nil "2.- Bajar los cambios que otros han hecho") (p nil "Si clonaste un repo es muy probable que estes colaborando con otros. Si es
así, lo primero que debes hacer es bajar los cambios que hayan realizado tus
colegas para que tengas un repositorio fresco y no tengas conflictos. También
realiza esto cuando te avisen que metieron cambios a tu repositorio:") (div ((class . "highlight-python")) (pre nil "git pull origin master")) (p nil "Algunas veces es suficiente con escribir " (tt ((class . "docutils literal")) (span ((class . "pre")) "git") (span ((class . "pre")) "pull")))) (div ((class . "section") (id . "hacer-tus-cambios")) (h3 nil "3.- Hacer tus cambios") (p nil "Es solo un directorio con archivos. Ya sabes qué hacer.")) (div ((class . "section") (id . "saber-lo-que-has-cambiado")) (h3 nil "4.- Saber lo que has cambiado") (p nil "Git controla los cambios que le vas haciendo a los archivos de un repositorio.
Esto es muy útil para hacer una revisión de lo que has hecho.:") (div ((class . "highlight-python")) (pre nil "git diff")) (p nil "El comando git diff imprimirá en la consola un listado de las diferencias que
hay entre la última version del repositorio y lo que has cambiado. Lo nuevo se
verá en color verde y lo que has borrado se verá en color rojo.") (p nil "Obviamente, para archivos binarios (como imágenes o archivos de word) sólo
verás un resúmen de cuántos bytes se han insertado y cuántos se han borrado.")) (div ((class . "section") (id . "registrar-o-guardar-tus-cambios")) (h3 nil "5.- Registrar o guardar tus cambios") (p nil "Cuando has terminado de hacer tus cambios es hora de hacer un " (em nil "commit") ". Esto
equivale a darle un “Guardar” en tu editor de texto favorito, pero para el
repositorio.") (p nil "La manera más fácil (aunque no la única) es:") (div ((class . "highlight-python")) (pre nil "git commit -am \"Descripción de los cambios\"")) (p nil "No olvides poner los espacios y poner un mensaje descriptivo de los cambios
entre comillas. No seas flojo y describe bien las cosas que has hecho.")) (div ((class . "section") (id . "compartir-tus-cambios")) (h3 nil "6.- Compartir tus cambios") (p nil "Este es el paso final de un típico día de trabajo con Git. Ya sincronizaste tu
repositorio con los últimos cambios (si es que estas colaborando con alguien),
hiciste tu trabajo y cambiaste algunos archivos y por último registraste tus
cambios en tu copia local.") (p nil "Ahora es momento de compartir tus cambios con tus colegas.:") (div ((class . "highlight-python")) (pre nil "git push")) (p nil "¡Y eso es todo! ¿Se ve difícil?"))) (div ((class . "section") (id . "mas-informacion-acerca-de-git")) (h2 nil "Más información acerca de Git") (ul ((class . "simple")) (li nil "El libro de git en spanglish –> " (a ((class . "reference external") (href . "http://git-scm.com/book/es/")) "http://git-scm.com/book/es/")) (li nil "La página de wikipedia acerca de Git –> " (a ((class . "reference external") (href . "http://es.wikipedia.org/wiki/Git")) "http://es.wikipedia.org/wiki/Git")) (li nil "Chistes gráficos acerca de Git –> " (a ((class . "reference external") (href . "http://wheningit.tumblr.com/")) "http://wheningit.tumblr.com/"))))))) (updated nil "2012-11-20T03:00:00Z") (category ((term . "Español"))) (category ((term . "Programación"))) (category ((term . "Git"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z")))) ("Plone 4, mejoras y ventajas" "Gran parte de los proyectos que desarrollamos en nuestra empresa los hacemos utilizando  el gestor de contenidos de software libre Plone. Este CMS basado en Zope es una de nuestras señas tecnológicas, junto a Django, ya que lo usamos y promovemos desde hace años." "http://www.codesyntax.com/es/blog/plone-4-mejoras-y-ventajas" (20624 63572) old 10 nil nil ((id nil "http://www.codesyntax.com/es/blog/plone-4-mejoras-y-ventajas") (link ((href . "http://www.codesyntax.com/es/blog/plone-4-mejoras-y-ventajas") (rel . "alternate") (type . "text/html"))) (title nil "Plone 4, mejoras y ventajas") (summary nil "Gran parte de los proyectos que desarrollamos en nuestra empresa los hacemos utilizando  el gestor de contenidos de software libre Plone. Este CMS basado en Zope es una de nuestras señas tecnológicas, junto a Django, ya que lo usamos y promovemos desde hace años.") (updated nil "2012-10-31T10:07:16Z") (category ((term . "plone"))) (author nil (name nil "mlizarralde")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("plone.app.multilingual: multilingüismo de nueva generación para Plone" "Con la inclusión de Dexterity en el paquete de base de Plone, la parte de multilingüe se quedaba coja en Plone al no funcionar LinguaPlone con Dexterity. plone.app.multilingual (o pam como les gusta a los autores que se le llame al producto), viene a solucionar dicho problema: un sustituto puro de LinguaPlone y funcionamiento tanto en Archetypes como en Dexterity. ¿Quién da más?" "http://www.codesyntax.com/es/blog/plone-app-multilingual-multilinguismo-de-nueva-generacion-para-plone" (20615 61761) old 11 nil nil ((id nil "http://www.codesyntax.com/es/blog/plone-app-multilingual-multilinguismo-de-nueva-generacion-para-plone") (link ((href . "http://www.codesyntax.com/es/blog/plone-app-multilingual-multilinguismo-de-nueva-generacion-para-plone") (rel . "alternate") (type . "text/html"))) (title nil "plone.app.multilingual: multilingüismo de nueva generación para Plone") (summary nil "Con la inclusión de Dexterity en el paquete de base de Plone, la parte de multilingüe se quedaba coja en Plone al no funcionar LinguaPlone con Dexterity. plone.app.multilingual (o pam como les gusta a los autores que se le llame al producto), viene a solucionar dicho problema: un sustituto puro de LinguaPlone y funcionamiento tanto en Archetypes como en Dexterity. ¿Quién da más?") (updated nil "2012-10-24T13:46:41Z") (category ((term . "i18n"))) (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Nuevo sitio web de Bilbao Kirolak" "Después de trabajar arduamente durante varios meses, ayer 17 de mayo, publicamos el nuevo sitio web de Bilbao Kirolak, la entidad entidad pública encargada del desarrollo del deporte en Bilbao." "http://www.codesyntax.com/es/blog/nuevo-sitio-web-de-bilbao-kirolak" (20615 58942) old 12 nil nil ((id nil "http://www.codesyntax.com/es/blog/nuevo-sitio-web-de-bilbao-kirolak") (link ((href . "http://www.codesyntax.com/es/blog/nuevo-sitio-web-de-bilbao-kirolak") (rel . "alternate") (type . "text/html"))) (title nil "Nuevo sitio web de Bilbao Kirolak") (summary nil "Después de trabajar arduamente durante varios meses, ayer 17 de mayo, publicamos el nuevo sitio web de Bilbao Kirolak, la entidad entidad pública encargada del desarrollo del deporte en Bilbao.") (updated nil "2012-10-24T12:59:42Z") (category ((term . "proyectos"))) (category ((term . "bilbaokirolak"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Estado del arte en Plone, 2011" "Después de la crónica del primer día que hicimos en el blog desde la Conferencia Plone de San Francisco, hemos recogido otro montón de apuntes de las presentaciones y charlas rápidas que nos parecieron más interesantes. Dejaremos para un artículo final el caso de las tres D's (Deco, Dexterity, Diazo), pero en este post de hoy, tenéis todo un potpourri que describe, en cierta manera, cual es el estado del arte en el CMS Plone, a finales de 2011." "http://www.codesyntax.com/es/blog/estado-del-arte-en-plone-2011" (20615 58785) old 13 nil nil ((id nil "http://www.codesyntax.com/es/blog/estado-del-arte-en-plone-2011") (link ((href . "http://www.codesyntax.com/es/blog/estado-del-arte-en-plone-2011") (rel . "alternate") (type . "text/html"))) (title nil "Estado del arte en Plone, 2011") (summary nil "Después de la crónica del primer día que hicimos en el blog desde la Conferencia Plone de San Francisco, hemos recogido otro montón de apuntes de las presentaciones y charlas rápidas que nos parecieron más interesantes. Dejaremos para un artículo final el caso de las tres D's (Deco, Dexterity, Diazo), pero en este post de hoy, tenéis todo un potpourri que describe, en cierta manera, cual es el estado del arte en el CMS Plone, a finales de 2011.") (updated nil "2012-10-24T12:57:05Z") (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "lur")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("Preparando las maletas para Arnhem" "La conferencia Plone de este año se organizará en Holanda, en Arnhem, donde nos juntaremos usuarios y desarrolladores venidos de todo el mundo." "http://www.codesyntax.com/es/blog/preparando-las-maletas-para-arnhem" (20615 58752) old 14 nil nil ((id nil "http://www.codesyntax.com/es/blog/preparando-las-maletas-para-arnhem") (link ((href . "http://www.codesyntax.com/es/blog/preparando-las-maletas-para-arnhem") (rel . "alternate") (type . "text/html"))) (title nil "Preparando las maletas para Arnhem") (summary nil "La conferencia Plone de este año se organizará en Holanda, en Arnhem, donde nos juntaremos usuarios y desarrolladores venidos de todo el mundo.") (updated nil "2012-10-24T12:56:32Z") (category ((term . "ploneconf2012"))) (category ((term . "ploneconf"))) (category ((term . "plone"))) (author nil (name nil "erral")) (source nil (id nil "http://www.codesyntax.com") (link ((href . "http://www.codesyntax.com") (rel . "alternate") (type . "text/html"))) (link ((href . "http://www.codesyntax.com/es/blog/plone-es/RSS") (rel . "self") (type . "application/rdf+xml"))) (title nil "CodeSyntax: Plone") (updated nil "2013-02-23T13:56:19Z")))) ("My first issue with meteor solved quickly" "(div ((xmlns . \"http://www.w3.org/1999/xhtml\")) (div ((class . \"section\") (id . \"my-first-issue-with-meteor-solved-quickly\")) (h1 nil \"My first issue with meteor solved quickly\") (p nil \"Today I was hacking on my first app with \" (a ((class . \"reference external\") (href . \"http://meteor.com/\")) \"Meteor\") \" and I
stumbled upon the following issue right after running the application for the
first time:\") (div ((class . \"highlight-javascript\")) (pre nil \"[tzicatl@hormiga-gris preguntame]$ meteor
[[[[[ ~/Aplicaciones/Codigo/Meteor/preguntame ]]]]]
Running on: http://localhost:3000/
fs.js:837
throw errnoException(errno, 'watch');
^
Error: watch ENOSPC
at errnoException (fs.js:806:11)
at FSWatcher.start (fs.js:837:11)
at Object.fs.watch (fs.js:861:11)
at _.extend._scan (/usr/lib64/meteor/app/meteor/run.js:355:24)
at Array.forEach (native)
at Function._.each._.forEach (/usr/lib64/meteor/app/lib/third/underscore.js:76:11)
at new DependencyWatcher (/usr/lib64/meteor/app/meteor/run.js:291:5)
at exports.run.start_watching (/usr/lib64/meteor/app/meteor/run.js:490:17)
at exports.run.restart_server (/usr/lib64/meteor/app/meteor/run.js:547:5)
at /usr/lib64/meteor/app/meteor/run.js:607:9\")) (p nil \"I found \" (a ((class . \"reference external\") (href . \"http://stackoverflow.com/questions/10129496/error-starting-todos-example\")) \"this thread\") \" on StackOverflow, but that specific workaround
didn’t work out well. So the user \" (em nil \"Lander\") \" gave me a kind hand and suggested
that I should tweak \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"fs.inotify.max_user_watches\")) \" and set it to \" (tt ((class . \"docutils literal\")) (span ((class . \"pre\")) \"10000\")) \".\") (p nil \"So, I combined both solutions (the one from StackOverflow and the other form
Lander) and this fixed the issue:\") (div ((class . \"highlight-javascript\")) (pre nil \"# echo 10000 > /proc/sys/fs/inotify/max_user_watches
# echo 10000 > /proc/sys/fs/inotify/max_user_instances\")) (p nil \"Back to hacking again :)\")))" "http://blog.noenieto.com/blog/html/2012/10/20/my_first_issue_with_meteor_solved.html" (20610 5040) old 15 nil nil ((id nil "http://blog.noenieto.com/blog/html/2012/10/20/my_first_issue_with_meteor_solved.html") (link ((href . "http://blog.noenieto.com/blog/html/2012/10/20/my_first_issue_with_meteor_solved.html") (rel . "alternate") (type . "text/html"))) (title nil "My first issue with meteor solved quickly") (summary ((type . "xhtml")) (div ((xmlns . "http://www.w3.org/1999/xhtml")) (div ((class . "section") (id . "my-first-issue-with-meteor-solved-quickly")) (h1 nil "My first issue with meteor solved quickly") (p nil "Today I was hacking on my first app with " (a ((class . "reference external") (href . "http://meteor.com/")) "Meteor") " and I
stumbled upon the following issue right after running the application for the
first time:") (div ((class . "highlight-javascript")) (pre nil "[tzicatl@hormiga-gris preguntame]$ meteor
[[[[[ ~/Aplicaciones/Codigo/Meteor/preguntame ]]]]]

Running on: http://localhost:3000/

fs.js:837
    throw errnoException(errno, 'watch');
          ^
Error: watch ENOSPC
    at errnoException (fs.js:806:11)
    at FSWatcher.start (fs.js:837:11)
    at Object.fs.watch (fs.js:861:11)
    at _.extend._scan (/usr/lib64/meteor/app/meteor/run.js:355:24)
    at Array.forEach (native)
    at Function._.each._.forEach (/usr/lib64/meteor/app/lib/third/underscore.js:76:11)
    at new DependencyWatcher (/usr/lib64/meteor/app/meteor/run.js:291:5)
    at exports.run.start_watching (/usr/lib64/meteor/app/meteor/run.js:490:17)
    at exports.run.restart_server (/usr/lib64/meteor/app/meteor/run.js:547:5)
    at /usr/lib64/meteor/app/meteor/run.js:607:9")) (p nil "I found " (a ((class . "reference external") (href . "http://stackoverflow.com/questions/10129496/error-starting-todos-example")) "this thread") " on StackOverflow, but that specific workaround
didn’t work out well. So the user " (em nil "Lander") " gave me a kind hand and suggested
that I should tweak " (tt ((class . "docutils literal")) (span ((class . "pre")) "fs.inotify.max_user_watches")) " and set it to " (tt ((class . "docutils literal")) (span ((class . "pre")) "10000")) ".") (p nil "So, I combined both solutions (the one from StackOverflow and the other form
Lander) and this fixed the issue:") (div ((class . "highlight-javascript")) (pre nil "# echo 10000 > /proc/sys/fs/inotify/max_user_watches
# echo 10000 > /proc/sys/fs/inotify/max_user_instances")) (p nil "Back to hacking again :)")))) (updated nil "2012-10-20T03:00:00Z") (category ((term . "English"))) (category ((term . "Programming"))) (category ((term . "JavaScript"))) (source nil (id nil "http://blog.noenieto.com/blog/html/") (author nil (name nil "Noe Nieto")) (link ((href . "http://blog.noenieto.com/blog/html/") (rel . "alternate") (type . "text/html"))) (link ((href . "http://blog.noenieto.com/blog/html/rss.html") (rel . "self") (type . "application/rss+xml"))) (subtitle nil "Acerca de Python, Plone y Linux") (title nil "Cuaderno de notas") (updated nil "2013-01-25T03:00:00Z")))))