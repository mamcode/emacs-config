;; -*- coding: utf-8 -*-
(("drublic" "A Cutting Edge Webdesign Blog – Hans Christian Reinl" "http://drublic.de/blog" (20848 31810 130316) feed 0 nil nil ((title nil "drublic") (link nil "http://drublic.de/blog") (description nil "A Cutting Edge Webdesign Blog – Hans Christian Reinl") (lastBuildDate nil "Tue, 02 Apr 2013 09:01:48 +0000") (language nil "en-US") (sy:updatePeriod nil "hourly") (sy:updateFrequency nil "1") (generator nil "http://wordpress.org/?v=3.5.1") (atom10:link ((xmlns:atom10 . "http://www.w3.org/2005/Atom") (rel . "self") (type . "application/rss+xml") (href . "http://feeds.feedburner.com/drublic"))) (feedburner:info ((uri . "drublic"))) (atom10:link ((xmlns:atom10 . "http://www.w3.org/2005/Atom") (rel . "hub") (href . "http://pubsubhubbub.appspot.com/"))) (item nil (title nil "Printing The Web") (link nil "http://feedproxy.google.com/~r/drublic/~3/gt-KvKwybRA/") (comments nil "http://drublic.de/blog/printing-the-web/#comments") (pubDate nil "Mon, 25 Mar 2013 11:24:35 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "Research") (category nil "Print") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1272") (description nil "While it is possible to consume nearly all means of content on your smartphone or tablet it seems like the dream of a paperless office comes true for a lot of web developers. But digital natives are not the only ones who are on the web. There are still some people that like to print web sites on paper. Once you are aware of that you might want to include a dedicated print stylesheet into web sites you build. Here is some advice on what you can do to get the best out of your page. Disclaimer: This article was<p class=\"readmore\"><a title=\"Link toPrinting The Web\" href=\"http://drublic.de/blog/printing-the-web/\">Read more</a></p>") (content:encoded nil "<p><strong>While it is possible to consume nearly all means of content on your smartphone or tablet it seems like the dream of a paperless office comes true for a lot of web developers.</strong></p><p><strong>But digital natives are not the only ones who are on the web. There are still some people that like to print web sites on paper. Once you are aware of that you might want to include a dedicated print stylesheet into web sites you build. Here is some advice on what you can do to get the best out of your page.</strong></p><p><strong>Disclaimer:</strong> This article was first published in the German <a href=\"http://screengui.de/\">Screen Guide Magazine</a> #15 (September to December 2012, pages 77 to 79). This article features more content and better research.</p><p>The basics of a print style sheet should already be well known by most web developers. There are two possible ways to include CSS for print:</p><ul><li><p>a separate file included in the HTML that carries all CSS for print media<br /><code>&lt;link rel=\"stylesheet\" media=\"print\" href=\"css/print.css\"&gt;</code></p></li><li><p>a special media query which targets print mode and is integrated into your regular stylesheet<br /><code>@media print { … }</code></p></li></ul><p>The decision which way to go is pretty obvious: We do not want to have another request to the server for an extra style sheet and thus will embed the styles using a media query. With the help of preprocessors such as LESS or Sass and build systems it is easily possible to put these styles into separate files and concatenate them when needed for production.</p><h2>Remove Clutter</h2><p>In general focusing on the main content of a web page is very important when it comes to print style sheets. Remove unnecessary page elements such as navigation and the footer using <code>display: none;</code>. However you might not want to remove a logo that identifies your website from the printed version. (Maybe you have an optimized monochrome version that looks better when printing black and white – you can include this as a background-image. This can be overwritten via the user&#8217;s configuration though.)</p><p>Think about readable fonts and appropriate font sizes – in print you usually want to have a size not bigger than 12px for your body copy, but on screen 16px is totally appropriate. Furthermore it is important to print mostly dark colors on light background. It <a href=\"http://www.sanbeiji.com/archives/953\">might be the best solution</a> to use black as the default text color.<br />
This is also more economical than printing other colors.</p><p>When in doubt, print the page while developing it to get a better feeling for the font setup.</p><h2>Improve The Content</h2><p>There are a couple of techniques to add more value to the content of a page. One is to add the URL of a link directly after the link text. Don&#8217;t do that for links that link to sections of your page or have JavaScript handlers, because it will not carry any meaning for the uninformed reader:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">&#40;</span>href<span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;#&quot;</span><span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #3333ff;\">:after</span><span style=\"color: #00AA00;\">,</span>
a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;javascript&quot;</span><span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #3333ff;\">:after </span><span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>This is also useful for the <code>abbr</code> element (for abbreviations) and its <code>title</code> attribute. (The same rule technically appies to <code>acronym</code> – thanks to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a>).</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">abbr<span style=\"color: #00AA00;\">&#91;</span>title<span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">&#40;</span>title<span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>You can find a <a href=\"http://drublic.de/blog/pseudo-classes-in-print-styles-for-references-in-links/\">more detailed post about this technique here</a>.</p><p><strong>Edit:</strong> As <a href=\"http://drublic.de/blog/printing-the-web/#comment-1188\">Tim suggests in the comments</a> it might be necessary to use <code>word-wrap: break-word;</code> on these elements as especially links can become pretty long and thus break you layout.</p><p>Remember that browsers normally display a header and footer line with some information about your site such as the URL it was printed from or the date. The user might have an option to remove those lines so you may want to include some link or a breadcrumb in the printed page so the reader can easily check back on the web if needed. Other methods outline embedding a QR code on the printed page. Adrian Roselli <a href=\"http://blog.adrianroselli.com/2013/03/calling-qr-in-print-css-only-when-needed.html\">describes this method</a> further.</p><p>In general most style sheets might be done with these few considerations. But there are some more helpers and CSS rules that can come in handy in certain cases.</p><p>A few weeks ago there was <a href=\"http://coding.smashingmagazine.com/2013/03/08/tips-tricks-print-style-sheets/\">an interesing article</a> at Smashing Magazine which has some more useful tips for dealing with links, images and so on. Check it out if needed.</p><h2>Structuring The Page</h2><p>Let&#8217;s dig a bit deeper.</p><p>The at-rule <code>@page</code> allows you to specify the structure of the page. Here is an example of how you can configure the margin of the page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">margin</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">2cm</span><span style=\"color: #933;\">1.5cm</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Furthermore it is possible to define styles via pseudo-classes. With <code>:first</code> for instance you target only the first page of a document, <code>:left</code> and <code>:right</code> target all even/odd pages (this depends on the direction of writing in a language). This can help you if you want to print a manuscript or magazine for example.</p><p>It is possible to name a property and apply it to differnet elements. This comes in handy if you want to print tables in landscape mode:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page tables {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">landscape</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
table <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">:</span> tables<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>This is far more experimental and can not be used reliable. Check out <a href=\"http://dabblet.com/gist/5232020\">this test case</a>. Please see <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/#using-named-pages\">the specification</a> for a more detailed explanation.</p><p>More information about the <code>@page</code> rule can be found at the <a href=\"https://developer.mozilla.org/en-US/docs/CSS/@page\">Mozilla Developer Network</a>.</p><p>With <code>size</code> you can specify the size of the sheet you want to print your document on. The initial value is <code>auto</code> which sets the width to a DIN A4 sheet with a size of 210 &times; 297 millimeters. You can target an expected DIN A5 sheet this way:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span> 148mm 210mm<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Even though this is possibile you should let the printer defaults handle the size of the sheet, especially since DIN A4 is not used in the US for example.</p><p><strong>Side note:</strong> Please be aware that it is still not possible to <em>cut</em> a sheet via CSS, thus it is only an expected size. I know this sucks! 3D printers might save us soon.</p><h2>Page-Breaks</h2><p>Both properties <code>page-break-before</code> and <code>page-break-after</code> specify when a page break occurs and when you do not want it to happen. For instance you most likely want to avoid page breaks after a headline:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">h2 <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">page-break-after</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">avoid</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Possible values of <code>page-break-before</code> and <code>page-break-after</code> are:</p><ul><li><code>auto</code> – default value, no specified behavior</li><li><code>always</code> – invokes a page-break</li><li><code>avoid</code> – tries to avoid a page-break</li><li><code>left</code>/<code>right</code> – single or double page-break to get the element to start on either the left of the right page, interesting when you want to print brochures or books.</li></ul><p>Furthermore, there is the property <code>page-break-inside</code> which behaves similarly but only supports the values <code>auto</code> and <code>avoid</code>. While <code>avoid</code> specifies that there sould be no page-break within the element and <code>auto</code> does not specify a specific behavior.</p><h2>Experimental Properties</h2><p>The next few features are still in development or only supported by single browsers. Some of them are part of the (not really) new <a href=\"http://www.w3.org/TR/css3-page/\">CSS Paged Media Specification</a>.</p><h3>Print What You See On Screen</h3><p>The property <code>-webkit-print-color-adjust: exact;</code> only works in WebKit browsers (namely Chrome and Safari) and enables you to print a page exactly as it is displayed on screen. Mostly this means that you can print CSS backgrounds. But be careful, there is a bug when it comes to gradients: Gradients are not printed at all. Also it is not possible to define the property on the <code>body</code> element (Whaaaat? :/).</p><p>You need to use this property if you want to print a b/w-optimized logo as outlined earlier and you don&#8217;t want to include an image in the markup.</p><p>Other browsers such as Firefox allow users to specify whether they want to print background images and colors via an option in the print dialogue.</p><h3>Widows And Orphans</h3><p>To prevent single lines of text to be at the end of one page you can adjust how many lines have to be tied together with <code>orphans</code>. <code>p { orphans: 3; }</code> for instance requires at least three consecutive lines in a paragraph on the end of a page.</p><p>In contrast &#8211; only one line at the beginning of a new page &#8211; <code>widows</code> helps you out. So with <code>article { widows: 2; }</code> you will get at least two lines of text for an article on a new page.</p><h3>Crop Marks And Page Bleed</h3><p>Sometimes you need specific declarations on how to cut a sheet of paper. With <code>marks</code> it is possible to set marks via the values <code>crop</code> and <code>cross</code> while <code>crop</code> adds crop marks and <code>cross</code> adds fiducial marks.</p><p>If this property is set you can specify how far the printable area spreads out of the area defined by the aforementioned marks by using the property <code>bleed</code> while using one of the units defined in the <a href=\"http://www.w3.org/TR/css3-values/\">values and units specification</a>.</p><p>This property is part of the <a href=\"http://www.w3.org/TR/css3-gcpm/#page-marks-and-bleed-area\">CSS Generated Content for Paged Media Module</a> which is basically to really recognized by the browser vendors.</p><h3>Boxes On Page-Break</h3><figure class=\"alignright\"><img src=\"http://www.w3.org/TR/css3-background/box-break.png\" title=\"box-decoration-break: slice and clone\" alt=\"box-decoration-break: slice and clone\" width=\"400\"></figure><p>The property <code>box-decoration-break</code> specifies how for example background, margin or border behave when the page breaks. There are two possible values for this property (also see the picture):</p><ul><li><code>slice</code> &#8211; default value, literally &#8220;slices&#8221; the box into two parts</li><li><code>clone</code> &#8211; dupicates the styles that are applied to a box on each page</li></ul><p>This is currently supported by Opera with the Presto Engine and will shortly be availabe in Google Chrome. Lennart Schoors <a href=\"http://bricss.net/post/24672339016/box-decoration-break-finally-coming-to-more-browsers\">wrote about this property</a> a while ago on his blog Bricss.</p><p>In Firefox there is <code>-moz-background-inline-policy</code> which enables you to treat background images how you want to. But this is clearly only a partial implementation of <code>box-decoration-break</code>.</p><h2>More On Browser Support</h2><p>While the at-rule <code>@page</code> is supported by all major browsers except Internet Explorer 7 and was just implemented by Firefox a few months ago. Most other properties are far more complex:</p><ul><li>You should use <code>page-break-before</code> and <code>page-break-after</code> only with its value <code>always</code> since the other values are not supported widely</li><li><code>page-break-inside</code> is not supported in Internet Explorer 7.</li></ul><p>You have to be aware that nearly all experimental properies lack support in most browsers and are only implemented by one major engine. For example <code>orphans</code> and <code>widows</code> are only supported in Internet Explorer since version 8 and Opera – which will soon be history as of their change to WebKit. <code>marks</code> and <code>bleed</code> is not implemented in any browser so far.</p><h2>What Is Missing?</h2><p>There are certain drawbacks when it comes to styling for print: Up until now there is no good possibility to define header and footer lines for your pages which would be very helpful for paginated printing. You can use pseudo elements of the body element which enables you to set a header and a footer on the first and last page. But this is by far not what is needed. You will run into this problem when you try to print tables: it is simply not possible without duplicate markup to print the <code>thead</code> of the table on each page (while repeating markup is not a real solution as you don&#8217;t know where a page breaks).</p><p>The funny thing is <a href=\"http://www.w3.org/TR/CSS21/tables.html#value-def-table-header-group\">the specification</a> of <code>thead</code> and <code>tfoot</code> states that it might be useful to repeat the elements on each page. Sadly no browser vendor implemented this yet.</p><p>But it is possible to create a solution for that. It could be a nice thing to implement JavaScript events that get invoked right before a page is printed. But as <a href=\"https://twitter.com/SimonSapin\">Simon Sapin</a> states this is not really possible due to the mechanisms how browsers layout a page:</p><blockquote><p>Page breaks happen during layout, much too late to do DOM manipulation (which invalidates and restarts layout). It’s really up to the layout engine to do this.</p></blockquote><p>Also more properties for <code>@page</code> could be helpful to generate header and footer for each page.</p><p>Luckily the <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/\">Paged Media Specification</a> tries to tackle this problem. This specification has just become a Working Draft.</p><p>Here is an example on how you can implement a footer with the page count on every page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span>
&nbsp;
    <span style=\"color: #a1a100;\">@top-center {</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Headline, yo!&quot;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
    <span style=\"color: #a1a100;\">@bottom-right {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Page &quot;</span> counter<span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>The <code>counter-increment</code> property is a bit special with the keyword <code>page</code> – it increments automatically according to the specification, so you don&#8217;t need it at all.</p><p>That rocks, right?! Totally want this in browsers now.</p><p><strong>Edit &#8211; 26.03.2013:</strong> Actually there is another possible implementation for fixed headers and footers using <code>position: fixed;</code> elements as <a href=\"http://clt.ag/\">Robert Weber</a><a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">researched</a>. Unfortunately this only works in Firefox, Opera and Internet Explorer with several quirks. Please <a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">read his comment</a>.</p><h3>A Word On Mobile</h3><p>These days it has become more and more popular to visit web pages from your smartphone or tablet but I have never seen anyone printing a web page from such a device.</p><p><del>I am not aware of a browser that has the ability to print a page. But maybe this will come in the near future.</del> Let me know if you know more about this.</p><p><strong>Edit &ndash; 25.03.2013:</strong> As <a href=\"https://twitter.com/alrra\">Cãtãlin Mariş</a> points out, iOS has a feature to connect to a wireless printer and print a website. This uses <a href=\"http://support.apple.com/kb/ht4356\">Apple’s AirPrint</a> services.</p><h3>The Server-Side</h3><p>This post does not take any server-side rendering methods to create style sheets into account. However there are some several non-browsers, print-oriented CSS implementations: <a href=\"http://weasyprint.org/\">WeasyPrint</a>, <a href=\"http://www.princexml.com/\">PrinceXML</a> or <a href=\"http://www.antennahouse.com/\">AntennaHouse</a> and others implement many CSS features that browsers don’t.</p><p>So take a look at these libraries if you are in need of more consitend</p><h2>Conclusion</h2><p>As it turns out it is possible to handle simple structured web pages with the provided properties for print stylesheets. But when it comes to more complex applications you will easily reach the end of these possibilities.</p><p>As a result of the work that the editors put into new specifications such as the Paged Media Spec we will be able to deal with better solutions in the future.</p><h2>Thanks</h2><p>A big thank you goes out to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a> and <a href=\"http://exyr.org/\">Simon Sapin</a> for providing very valuable technical feedback for this article. Apart from that I want to thank <a href=\"http://tomascaspers.de/\">Thomas Caspers</a> for proofreading the post.</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p>✪ Printing The Web – The current state of print style sheets – <a href=\"http://t.co/WCFa9qpQoK\" title=\"http://drublic.de/blog/printing-the-web/\">drublic.de/blog/printing-…</a></p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/316150009970188288\">March 25, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/gt-KvKwybRA\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/printing-the-web/feed/") (slash:comments nil "23") (feedburner:origLink nil "http://drublic.de/blog/printing-the-web/")) (item nil (title nil "Speaking Engagements, the .net-Awards and Freelancing") (link nil "http://feedproxy.google.com/~r/drublic/~3/_JFOmNAfNEw/") (comments nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/#comments") (pubDate nil "Fri, 08 Mar 2013 09:25:52 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Freelance") (category nil "Speaking") (category nil "Talks") (category nil "Work") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1234") (description nil "Here is a quick overview of my current status and why there are little updates in the blog. Also some great news. Talking at Conferences As you know, if you follow along my stuff, I spoke about coding guidelines at TalkOff Conference in Lille, France in January this year. The conference was organized very well and I had a lot of fun. Besides that I met a lot of great people. Thanks again for the invitation. You can find the slides here. I am also very happy to be invited to UX Munich where I will speak about style guides<p class=\"readmore\"><a title=\"Link toSpeaking Engagements, the .net-Awards and Freelancing\" href=\"http://drublic.de/blog/speaking-engagements-net-awards-freelancing/\">Read more</a></p>") (content:encoded nil "<p><strong>Here is a quick overview of my current status and why there are little updates in the blog. Also some great news.</strong></p><h2>Talking at Conferences</h2><p>As you know, if you follow along my stuff, I spoke about coding guidelines at TalkOff Conference in Lille, France in January this year. The conference was organized very well and I had a lot of fun. Besides that I met a lot of great people. Thanks again for the invitation. You can <a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\">find the slides here</a>.</p><p>I am also very happy to be invited to <a href=\"http://www.uxmunich.com/\">UX Munich</a> where I will speak about style guides in general and how you can be friends with designers. Check out <a href=\"http://www.uxmunich.com/speakers/hans-christian-reinl\">the talk&#8217;s description</a> on their website. There are a lot great people speaking at the conference as for example Vitaly Friedmann from <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://rainypixels.com/\">Nishant Kothary</a> who was part of the team that redesigned <a href=\"http://www.microsoft.com/\">Microsoft.com</a>. Also <a href=\"http://bastianallgeier.com/\">Bastian Allgeier</a> will be speaking, who <a href=\"http://thenittygritty.co/the-future-of-the-web-a-draft\">wrote an article for The Nitty Gritty</a> just recently.<br />
This conference will take place in Munich, Germany and will be helt next week. So check it out quickly and <a href=\"http://uxmunich.com/register\">get a ticket</a>!</p><p>Later in April I will present at <a href=\"http://2013.front-trends.com/\">Front-Trends 2013</a> in Warsaw in Poland and yet again some top speakers of our industry will present there, too. Check out <a href=\"http://2013.front-trends.com/speakers/\">the speakers page</a> to find Lea Verou, Faruk Ateş, Jake Archibald and a lot of others.</p><p>If you want me to speak at your conference, I&#8217;d be happy to submit a proposal. Just <a href=\"http://drublic.de/#contact\">contact me</a>.</p><h2>.net-Awards Nomination</h2><p>I am very happy to be one of the nominees of this year&#8217;s .net-Awards in the category “Young Developer of the Year”. Check out <a href=\"http://www.thenetawards.com/\">the website</a> and vote what you like.<br />
Thanks to everyone who proposed me to be nominated, this really means a lot to me. <3</p><h2>Freelance Work</h2><p>A couple of months ago I decided to leave <a href=\"http://gebruederheitz.de/\">/gebrüderheitz</a> and do freelance work exclusively for some time starting in April. I want to focus a bit more on Open Source projects and work on some side-projects. I am really excited about the projects that I&#8217;ll be working on and about the re-organisation of my life.<br />
The pipeline of actual client projects is still kind of free, so drop me a mail to <a href=\"mailto:info@drublic.de\">info@drublic.de</a> or use the <a href=\"http://drublic.de/#contact\">contact form</a> if you are interested in working with me. Please see the <a href=\"http://drublic.de/#hire-me\">“Hire me” section</a> on my website to get a quick overview of what I like to work on.</p><p>This all and some projects besides my normal work schedule keep me from updating my blog more often. I hope to write some more technical articles soon.<br />
LOVE!</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\"><p>✪ Speaking Engagements, the .net-Awards and Freelancing &#8211; <a href=\"http://t.co/vfQ63ua9W2\" title=\"http://drublic.de/blog/speaking-engagements-net-awards-freelancing/\">drublic.de/blog/speaking-…</a> &#8211; A personal update on conferences and becoming freelance.</p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/309959388129538048\">March 8, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/_JFOmNAfNEw\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/feed/") (slash:comments nil "1") (feedburner:origLink nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/")) (item nil (title nil "TakeOff Conference: Talking About Good Code →") (link nil "http://feedproxy.google.com/~r/drublic/~3/nf1Zp0Y5AfI/") (comments nil "http://drublic.de/blog/takeoff-conference-talking-about-good-code/#comments") (pubDate nil "Fri, 18 Jan 2013 12:21:30 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Code Quality") (category nil "Good Code") (category nil "Markup") (category nil "Organize Code") (category nil "Presentation") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1230") (description nil "Yesterday (17. January 2013) I was talking at TakeOff Conference in Lille, France. I actually extended my talk from the Fronteer&#8217;s Jam Session &#8220;Writing Awesome Code&#8221; with lots of new stuff. So check out the slides. There will be a video with the actual talk that is not online yet. I will post it here when it is. See slides Just a few words concerning the conference: The organizers are doing a great job here and the speakers are really good. If you&#8217;re not here, you are missing out on something :) &#9776;<p><a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\" rel=\"bookmark\" title=\"Permanent link to 'TakeOff Conference: Talking About Good Code'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Yesterday (17. January 2013) I was talking at TakeOff Conference in Lille, France. I actually extended my talk from the Fronteer&#8217;s Jam Session &#8220;Writing Awesome Code&#8221; with lots of new stuff. So check out the slides. There will be a video with the actual talk that is not online yet. I will post it here when it is.</p><p><a href=\"http://slides.drublic.de/takeoff-awesome-code/\" class=\"button\">See slides</a></p><p>Just a few words concerning the conference: The organizers are doing a great job here and the speakers are really good. If you&#8217;re not here, you are missing out on something :)</p><p><a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\" rel=\"bookmark\" title=\"Permanent link to 'TakeOff Conference: Talking About Good Code'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/nf1Zp0Y5AfI\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/takeoff-conference-talking-about-good-code/feed/") (slash:comments nil "1") (feedburner:origLink nil "http://slides.drublic.de/takeoff-awesome-code/")) (item nil (title nil "The REM Fallback with Sass or LESS") (link nil "http://feedproxy.google.com/~r/drublic/~3/WKuDBkXhPCc/") (comments nil "http://drublic.de/blog/rem-fallback-sass-less/#comments") (pubDate nil "Wed, 02 Jan 2013 10:51:57 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "Tools") (category nil "CSS units") (category nil "CSS3") (category nil "Fallback") (category nil "LESS") (category nil "Ployfill") (category nil "SASS") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1200") (description nil "Since a while now word has spread to use the CSS unit rem for font-sizes and values in CSS. Here I want to explain how you can use a fallback in Sass or LESS to get rem working in all browsers. View Gist with mixins Why rem? Let&#8217;s look into what rem means. We know of the em unit which is relative to the font-size of the parent element it is defined on. This means if one of the parents in the DOM-tree changes its font-size, the font-size of the child element changes too. In contrast the rem unit is<p class=\"readmore\"><a title=\"Link toThe REM Fallback with Sass or LESS\" href=\"http://drublic.de/blog/rem-fallback-sass-less/\">Read more</a></p>") (content:encoded nil "<p>Since a while now word has spread to use the CSS unit <code>rem</code> for font-sizes and values in CSS. Here I want to explain how you can use a fallback in Sass or LESS to get <code>rem</code> working in all browsers.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">View Gist with mixins</a></p><h2>Why rem?</h2><p>Let&#8217;s look into what <code>rem</code> means. We know of the <code>em</code> unit which is relative to the font-size of the parent element it is defined on. This means if one of the parents in the DOM-tree changes its font-size, the font-size of the child element changes too. In contrast the <code>rem</code> unit is relative to the root element of the page (this means the <code>html</code> element). Thus it is possible to define a font-size once on the root and make all other sizes depending on this size. Please switch over to <a href=\"http://snook.ca/archives/html_and_css/font-size-with-rem\">Snook&#8217;s blogpost explaining what <code>rem</code> is</a> to get more information about it.</p><p>If you ask yourself why you should use <code>em</code> instead of <code>px</code>, Chris Coyier wrote <a href=\"http://css-tricks.com/why-ems/\">an article on why he switched to <code>em</code></a> instead of pixels a while ago for nearly all properties using units in CSS. Read this to understand why <code>em</code> and thus <code>rem</code> is so important.</p><p>I would encourage you to use <code>rem</code> (or at least <code>em</code>) for properties like <code>padding</code>, <code>margin</code> and sometimes even <code>width</code> instead of pixels. It makes your design even more responsive.</p><p>The drawback of <code>rem</code> is that it is not supported in all browsers that are used, even though <a href=\"http://caniuse.com/rem\">the support looks pretty good</a>: Internet Explorer is capable of dealing with <code>rem</code> since version 9. The versions before need a fallback. It is supported on the major mobile browsers except Opera Mini. Let us have a look on how we can define such a fallback using Sass or LESS.</p><h2>A Sass Mixin</h2><p>In order to get the pixel-based auto-calculation working as a fallback we need to define the font-size as a variable in Sass or LESS.<br />
The following examples are in Sass with the SCSS-syntax.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">$main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">16px</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>We can now use this default font size on the root element:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">html <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>Now we define a mixin that provides a fallback pixel-based size of the property based on the variable we defined before and in <code>rem</code> for capable browsers.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@mixin x-rem ($property, $value) {</span>
  #<span style=\"color: #00AA00;\">&#123;</span>$property<span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">:</span> $value <span style=\"color: #00AA00;\">*</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span>
  #<span style=\"color: #00AA00;\">&#123;</span>$property<span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">:</span> #<span style=\"color: #00AA00;\">&#123;</span>$value<span style=\"color: #00AA00;\">&#125;</span>rem<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>What the mixin does is, that it takes the <code>$property</code> and calculates the value in pixels. This simple mathematic function is part of Sass. The <code>$value</code> argument is a decimal digit. </p><p>I like to prefix my own mixins with <code>x-</code> to easily distinguish them from other mixins. This is <a href=\"https://github.com/necolas/idiomatic-css#preprocessors-additional-format-considerations\">a part of the Idiomatic CSS principles</a> by Nicolas too. I think previously I prefixed them with a namespace (mostly it was <code>the-</code> as a prefix, so you get <code>the-transition</code>) – but since there is a better convention with Idiomatic CSS I switched to it.</p><p>This mixin can be called like in the following examples:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@include x-rem(font-size, 1.4);</span><span style=\"color: #a1a100;\">@include x-rem(padding-left, 2);</span></pre></div></div><p>The output that is being produced looks like this for the first example:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">22.4px</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> 1.4rem<span style=\"color: #00AA00;\">;</span></pre></div></div><p>You can use Sass&#8217; <a href=\"http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html#round-instance_method\"><code>round()</code></a> function to get an integer output for the px-based output. But every browser is capable to round <code>22.4px</code> by itself to <code>22px</code> since it is not possible to display 0.4px after all. (LESS has <a href=\"http://lesscss.org/#-math-functions\">the same function</a>.)</p><h2>A Few Words On The LESS Mixin</h2><p>In LESS interpolation for properties is current not possible with version 1.3.x. The maintainers <a href=\"https://github.com/cloudhead/less.js/pull/698\">aim to include it in version 1.4</a>. For the time being we need to define a workaround for properties which is basically a JavaScript function which returns a sting that consists of two properties instead of one, while the first one is <code>-</code> which is basically no property an thus disregarded by the browser. The second is the property that we want to use.</p><p>Here is the first line of the mixin:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">-<span style=\"color: #00AA00;\">:</span> ~`<span style=\"color: #00AA00;\">&#40;</span>function <span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">&#123;</span> return <span style=\"color: #ff0000;\">';@{property}: @{px-fallback}'</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">&#41;</span>`<span style=\"color: #00AA00;\">;</span></pre></div></div><p>This only works if the LESS compiler uses the actual JS library. It does not work with lessphp or other compilers that are not JavaScript based.</p><h2>Final Words</h2><p>And that is it. The mixin provides a decent fallback for <code>rem</code>-based sizes of all kind. Since CSS runs stable with this version of a fallback and overwrites the pixel-based value because of CSS&#8217; cascade we can use it without any problems. It works in old Internet Explorers.</p><p>Life is easy with <code>rem</code>. So look at the Gist and use the rem-fallback-mixins.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">Sass and LESS mixins</a></p><h2>Credit</h2><p>I want to mention that I first saw this technique used by <a href=\"http://nimbupani.com/\">Divya Manian</a> a year ago (beginning of 2012) when working on the <a href=\"http://api.html5please.com/\">HTML5 Please API</a> project. I am not sure who developed this technique or where it comes from. Please let me know if you have a link.</p><p><strong>Addition:</strong> The <a href=\"https://github.com/ericam/susy\">Susy framework</a> has <a href=\"https://github.com/ericam/susy/blob/master/sass/susy/_units.scss\">a Sass mixin</a> which lets you easily convert units including the rem unit and a fallback as described here. (Head-tip <a href=\"https://twitter.com/fabianbeiner\">Fabian Biener</a>.)</p><p><strong>Addition 2:</strong><a href=\"http://drublic.de/blog/rem-fallback-sass-less/#comment-957\">Steffen</a> wrote <a href=\"https://gist.github.com/4530526\">a Sass mixin</a> which lets you use the short notation of properties like <code>margin</code> or <code>padding</code>. Even mixing values as px and rem is working. Cheers!</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/WKuDBkXhPCc\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/rem-fallback-sass-less/feed/") (slash:comments nil "7") (feedburner:origLink nil "http://drublic.de/blog/rem-fallback-sass-less/")) (item nil (title nil "Working Draft Revision 100 →") (link nil "http://feedproxy.google.com/~r/drublic/~3/Lfu3Fy5yt60/") (comments nil "http://drublic.de/blog/working-draft-100/#comments") (pubDate nil "Wed, 12 Dec 2012 13:40:26 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "APIs") (category nil "CSS Performance") (category nil "Paul Irish") (category nil "performance") (category nil "Working Draft") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1181") (description nil "It&#8217;s been over two years now – with our podcast Working Draft we have done 100 revisions. Congratulations to ourselves! We recorded revision 100 on Monday and had a very special guest: Paul Irish. That&#8217;s why we recorded in English this time. The final podcast is now live and can be downloaded. Check it out and let us know what you think. Listen to WD Revision 100 Here are the topics we talked about: BountySource let’s you define an amount up for grabs to anyone willing to solve your issue with an open source project. 5 APIs to change the<p class=\"readmore\"><a title=\"Link toWorking Draft Revision 100\" href=\"http://drublic.de/blog/working-draft-100/\">Read more</a></p><p><a href=\"http://drublic.de/blog/working-draft-100/\" rel=\"bookmark\" title=\"Permanent link to 'Working Draft Revision 100'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\" alt=\"Working Draft\" width=\"200\" height=\"200\" class=\"alignright\" /></a>It&#8217;s been over two years now – with our podcast Working Draft we have done 100 revisions. Congratulations to ourselves!</p><p>We recorded revision 100 on Monday and had a very special guest: Paul Irish. That&#8217;s why we recorded in English this time. The <a href=\"http://workingdraft.de/100/\">final podcast</a> is now live and can be downloaded. Check it out and let us know what you think.</p><p><a href=\"http://workingdraft.de/100/\" title=\"Listen to Working Draft Revision 100\" class=\"button\">Listen to WD Revision 100</a></p><p>Here are the topics we talked about:</p><ul><li><a href=\"https://www.bountysource.com/\">BountySource</a> let’s you define an amount up for grabs to anyone willing to solve your issue with an open source project.</li><li><a href=\"http://blog.alexmaccaw.com/the-next-web\">5 APIs to change the world</a> by Alex MacCaw</li><li><a href=\"http://delicious.com/paul.irish/css+testing\">CSS Performance Debugging</a> and rendering bottlenecks</li><li>Laura Kalbag <a href=\"http://laurakalbag.com/display-none/\">writes about sharing what you learn</a>.</li></ul><p><a href=\"http://drublic.de/blog/working-draft-100/\" rel=\"bookmark\" title=\"Permanent link to 'Working Draft Revision 100'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/Lfu3Fy5yt60\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/working-draft-100/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://workingdraft.de/100/")) (item nil (title nil "New Resource for Web Devs: The Nitty Gritty →") (link nil "http://feedproxy.google.com/~r/drublic/~3/3IOUEVqCwRU/") (comments nil "http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/#comments") (pubDate nil "Tue, 04 Dec 2012 13:22:30 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Project") (category nil "Resource") (category nil "The Nitty Gritty") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1169") (description nil "Yesterday Kahlil Lechelt and I launched The Nitty Gritty, a new blog and resource for web developers about the cutting edge in HTML, CSS, JavaScript and web technology in general. Visit The Nitty Gritty About the idea of The Nitty Gritty Kahlil writes: For a few years now, I&#8217;ve been watching my friends in the web development community write highly informative and well researched articles on their personal blogs, or as contributing authors writing articles for the blogs of their friends and colleagues. We met at Smashing Conference back in September this year and talked about the idea of The<p class=\"readmore\"><a title=\"Link toNew Resource for Web Devs: The Nitty Gritty\" href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\">Read more</a></p><p><a href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\" rel=\"bookmark\" title=\"Permanent link to 'New Resource for Web Devs: The Nitty Gritty'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Yesterday <a href=\"http://kahlil.co/\">Kahlil Lechelt</a> and I launched The Nitty Gritty, a new blog and resource for web developers about the cutting edge in HTML, CSS, JavaScript and web technology in general.</p><p><a href=\"http://thenittygritty.co/\" class=\"button\">Visit The Nitty Gritty</a></p><p>About the idea of The Nitty Gritty Kahlil writes:</p><blockquote><p>For a few years now, I&#8217;ve been watching my friends in the web development community write highly informative and well researched articles on their personal blogs, or as contributing authors writing articles for the blogs of their friends and colleagues.</p></blockquote><p>We met at Smashing Conference back in September this year and talked about the idea of <a href=\"http://thenittygritty.co/\">The Nitty Gritty</a>. After some months of development we are now ready to present this idea to you.</p><blockquote><p>So, cutting a long story short, we decided to execute on the desire to create a central hub for developers, hence The Nitty Gritty (TNG) was born and now we are about to wake this beast up.</p></blockquote><p>I am very excited about our new project and hope so are you. I really hope that we can deliver high quality content within the next months. And hey… we already have some great articles coming up in the next few weeks</p><blockquote><p>[…] including the performance pope Schepp, Yeoman core contributor Sindre Sorhus, and the maker of Kirby, Bastian Allgeier.</p></blockquote><p>I have written a post myself about decoupling CSS by using placeholders in Sass which will be published today.</p><p>We would be pleased if you let us know what you think about this idea on Twitter. And make sure you follow <a href=\"https://twitter.com/_thenittygritty\">@_thenittygritty</a>! :)</p><p><a href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\" rel=\"bookmark\" title=\"Permanent link to 'New Resource for Web Devs: The Nitty Gritty'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/3IOUEVqCwRU\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://thenittygritty.co/")) (item nil (title nil "Conferencing and Test The Web Forward") (link nil "http://feedproxy.google.com/~r/drublic/~3/GdRYJq-9NJI/") (comments nil "http://drublic.de/blog/conference-test-the-web-forward/#comments") (pubDate nil "Wed, 10 Oct 2012 21:31:25 +0000") (dc:creator nil "Hans Christian") (category nil "Conference") (category nil "CreateTheWeb") (category nil "Fronteers") (category nil "SmashingConf") (category nil "Specification") (category nil "Test The Web Forward") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1116") (description nil "Within the last weeks I had the pleasure to attend some of the most valuable conferences in our business and meet awesome people to chat with. Finally I want to share some of my experiences and invite you what&#8217;s coming next. Smashing Conference Back in the end of September I attended Smashing Conference, set up by Smashing Magazine and Marc Thiele with some high quality speakers in beautiful Freiburg, Germany, the city where I&#8217;m currently living. Focusing on web design and development the smashing way this conference had a variety of topics from the latest secrets of CSS, on the<p class=\"readmore\"><a title=\"Link toConferencing and Test The Web Forward\" href=\"http://drublic.de/blog/conference-test-the-web-forward/\">Read more</a></p>") (content:encoded nil "<p>Within the last weeks I had the pleasure to attend some of the most valuable conferences in our business and meet awesome people to chat with. Finally I want to share some of my experiences and invite you what&#8217;s coming next.</p><h2>Smashing Conference</h2><p>Back in the end of September I attended <a href=\"http://smashingconf.com/\">Smashing Conference</a>, set up by <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://www.marcthiele.com/\">Marc Thiele</a> with some high quality speakers in beautiful Freiburg, Germany, the city where I&#8217;m currently living.</p><p>Focusing on web design and development <q>the smashing way</q> this conference had a variety of topics from the <a href=\"http://lea.verou.me/more-css-secrets/#intro\">latest secrets of CSS</a>, on the <a href=\"http://bradfrostweb.com/blog/mobile/beyond-media-queries-anatomy-of-an-adaptive-web-design/\">anatomy of responsive web design</a> and <a href=\"https://speakerdeck.com/u/stephenhay/p/style-guides-are-the-new-photoshop-smashing-conference-2012\">the new Photoshop</a> (tl;dr: the browser, and while we&#8217;re at it… the console is pretty easy compared to Photoshop).</p><p>Two major thoughts that were emphasized in a lot of talks are <strong>designing in the browser</strong> and <strong>responsive  design</strong>. (If responsive design is only an &#8220;optional&#8221; feature in your workflow consider this time being over. (You ain&#8217;t got no choice!))</p><p>You set up something really great, Vitaly, Marc and the whole team behind Smashing Magazine. Thank you! Looking forward to a new issue in the next year.</p><p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\" alt=\" \" title=\"Conferencing\" width=\"675\" height=\"326\" class=\"aligncenter\"></a><small> Image Credit: <a href=\"http://www.flickr.com/photos/freiburg/7995345837/sizes/l/in/photostream/\">Sven Freiburg / Flickr</a>, <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">CC BY-NC-SA 2.0</a></small></p><h2>Create The Web Tour, London</h2><p>Some of the hosts of <a href=\"http://workingdraft.de/\">Working Draft</a> and other web-dev friends had the pleasure to join the <a href=\"http://html.adobe.com/events/\">Create The Web</a> event by Adobe.</p><p>As a developer <a href=\"http://brackets.io/\">Brackets</a>, the Open Source front-end editor totally written in HTML, CSS and JavaScript is the most interesting thing I took from Create The Web.<br />
Apart from that I think <a href=\"http://html.adobe.com/edge/reflow/\">Edge Reflow</a>, a tool for designing responsive websites, is a great step for designers to get a better view on what is important in web design. Since Photoshop is not really the right tool for that.<br />
Also I love to see Adobe joining the web community more and more and adding many valuable products (partly Open Source!) to their line-up.</p><p>Thank you, <a href=\"http://klick-ass.com/\">Jay</a>, for making this well-planned and great day with good insights to Adobe&#8217;s engagement in the web platform possible for us!</p><h2>Fronteers Conference</h2><p>This year again I attended Fronteers Conference in Amsterdam which to many people is the best front-end conference in Europe.<br />
Starting with the Jam Sessions on Wednesday it became a superb few days meeting a lot of people from around the globe to chat with and get into contact.</p><p>Make sure to check out the <a href=\"http://lanyrd.com/2012/fronteersjam/coverage/\">Jam Sessions</a> which were all very good.<br /><strong>Note:</strong> You can find my session &#8220;Writing Awesome Code&#8221; <a href=\"http://slides.drublic.de/awesome-code/\">here</a>.</p><p>There were a lot of great talks given too. <a href=\"http://twitter.com/codepo8\">Chris Heilmann</a> shares his experience of Fronteers. He did a great job MCing the event.</p><div id=\"qfm-embedded-recommendation-54667\" class=\"qfm-embedded-recommendation\" data-id=\"54667\" data-width=\"675\" data-height=\"231\" style=\"margin-top: 1em;\"><h2><a href=\"http://quote.fm/article/38450\">Fronteers12 – Q&amp;A results, quick reviews and impressions from the stage</a></h2><blockquote><p><a href=\"http://quote.fm/christianheilmann.com/54667\">&#187;Last week the fifth annual Fronteers conference lured a few hundred developers, designers and managers to Amsterdam, The Netherlands to hear about what’s hot and new in web development. This year I did not speak, but played the MC and interviewer instead.&#171;</a></p></blockquote><p><a href=\"http://quote.fm/drublic\">Hans Christian Reinl</a> recommended this article from <a href=\"http://christianheilmann.com\">christianheilmann.com</a></p></div><p><script type=\"text/javascript\" src=\"https://quote.fm/embed.js?id=54667\"></script></p><h2>Test The Web Forward</h2><p>Last but not least I will join some of the best engineers in our field to learn a better understanding of specifications, writing tests for the web platform and help moving the web forward.</p><blockquote><p>Over the course of the event, not only will you learn to understand how to read specifications and understand the state of support among different browsers, but you will also create robust tests along with the editors of various standards to ensure browsers implement these features consistently. At the end of it, you will gain a deeper understanding of browser internals &#038; how you can write clear, robust tests.</p></blockquote><p>– <a href=\"http://testthewebforward.org/paris-2012.html\">Test The Web Forward</a></p><p>The event is named <strong>Test The Web Forward</strong> and will take place on October 26th and 27th in Paris. Check out the <a href=\"http://testthewebforward.org/paris-2012.html\">website</a> for more information about it. Make sure to be there if you are near to Paris. Or plan a nice weekend trip! It will be fun.</p><blockquote class=\"twitter-tweet tw-align-center\" style=\"padding-top: 1em;\"><p>Hey France, Germany: Join some browser &amp; standards hackers in Paris to improve all browsers <a href=\"http://t.co/irvkd6CW\" title=\"http://testthewebforward.org/paris-2012.html\">testthewebforward.org/paris-2012.html</a></p><p>&mdash; Paul Irish (@paul_irish) <a href=\"https://twitter.com/paul_irish/status/254117725046206464\" data-datetime=\"2012-10-05T07:16:01+00:00\">October 5, 2012</a></p></blockquote><p><script src=\"//platform.twitter.com/widgets.js\"></script></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/GdRYJq-9NJI\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/conference-test-the-web-forward/feed/") (slash:comments nil "2") (feedburner:origLink nil "http://drublic.de/blog/conference-test-the-web-forward/")) (item nil (title nil "Writing Awesome Code – Fronteers Jam Session 2012 →") (link nil "http://feedproxy.google.com/~r/drublic/~3/UqPW8Jj2maU/") (comments nil "http://drublic.de/blog/writing-awesome-code/#comments") (pubDate nil "Fri, 05 Oct 2012 22:16:46 +0000") (dc:creator nil "Hans Christian") (category nil "References") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1112") (description nil "Here is how and why you should write awesome code in your team. I gave a 10 minute talk on that topic at Fronteers Conference at the Jam Session and here are the slides. There will be a video available online in a few weeks I think. &#9776;<p><a href=\"http://drublic.de/blog/writing-awesome-code/\" rel=\"bookmark\" title=\"Permanent link to 'Writing Awesome Code – Fronteers Jam Session 2012'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Here is how and why you should write awesome code in your team. I gave a 10 minute talk on that topic at Fronteers Conference at the Jam Session and <a href=\"http://slides.drublic.de/awesome-code/\">here</a> are the slides.<br />
There will be a video available online in a few weeks I think.</p><p><a href=\"http://drublic.de/blog/writing-awesome-code/\" rel=\"bookmark\" title=\"Permanent link to 'Writing Awesome Code – Fronteers Jam Session 2012'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/UqPW8Jj2maU\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/writing-awesome-code/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://slides.drublic.de/awesome-code/")) (item nil (title nil "Yeoman – Level-up Your Daily Workflow") (link nil "http://feedproxy.google.com/~r/drublic/~3/BB-mHj9JSXc/") (comments nil "http://drublic.de/blog/yeoman/#comments") (pubDate nil "Fri, 14 Sep 2012 11:03:05 +0000") (dc:creator nil "Hans Christian") (category nil "Tools") (category nil "Build Tool") (category nil "Collaboration") (category nil "Grunt") (category nil "Tool") (category nil "Workflow") (category nil "Yeoman") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1050") (description nil "After Yeoman was announced in the end of June while it was still in private beta developers were looking forward to use it soon. It was introduced as a tool that helps developers building web-apps while not having to care too much about the general boilerplate-coding to build a solid base for every project and to help performing tasks to bring your project into production. Now that Yeoman is available for everyone as Open Source the question how to use it in daily projects arises. I&#8217;ll try to give you a short overview on what you can expect from it<p class=\"readmore\"><a title=\"Link toYeoman – Level-up Your Daily Workflow\" href=\"http://drublic.de/blog/yeoman/\">Read more</a></p>") (content:encoded nil "<p>After <a href=\"http://yeoman.io/\">Yeoman</a> was announced in the end of June while it was still in private beta developers were looking forward to use it soon. It was introduced as a tool that helps developers building web-apps while not having to care too much about the general boilerplate-coding to build a solid base for every project and to help performing tasks to bring your project into production.</p><p>Now that Yeoman is available for everyone as Open Source the question how to use it in daily projects arises. I&#8217;ll try to give you a short overview on what you can expect from it and what will be helpful. If you haven&#8217;t had a look at it this article might help you.<br /><span id=\"more-1050\"></span><br />
To check out how you can install Yeoman, please refer to the <a href=\"http://yeoman.io/\">Yeoman-homepage</a>, you will find detailed information there. You will also find more information on how to use Yeoman&#8217;s features. You might want to check out <a href=\"http://www.adobe.com/devnet/html5/articles/yeoman-at-your-service.html\">this article</a> on one of the Adobe blogs. Also <a href=\"http://net.tutsplus.com/tutorials/tools-and-tips/say-yo-to-yeoman/\">Nettuts+ has an article with deep information</a> on how to use Yeoman.<br />
By default Yeoman supports Linux and OSX, but you can also <a href=\"http://www.decodize.com/css/installing-yeoman-front-end-development-stack-windows/\">find a way of installing it on Windows</a>.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/Mk-tFn2Ix6g#t=1371s\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Paul Irish introduces Yeoman at Google I/O 2012.</i></p><h2>Reduce Time Doing Repetitive Tasks</h2><p>On the project&#8217;s homepage you can find some features they are praising. Let&#8217;s get a short overview on what Yeoman may help you with:</p><p>There are some things that steal your time when you work on a project. Yeoman is here to help you reduce the time you spent on these to focus more on the actual process of writing clean and lightweight code.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/vFacaBinGZ0\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Addy Osmani explains the main features of Yeoman.</i></p><h3>Starting Projects &#038; Maintaining Them</h3><p>Starting a project and maintaining it requires some time. You need to manage compiling your CoffeeScript and SASS styles if you use it. Yeoman does this for you. When it&#8217;s done it reloads your project-page automatically using its LiveReload functionality – you are used to this from LiveReload or CodeKit apps.<br />
It also lints your JavaScript and ensures that you write straightforward code. Writing code like this requires that you have some proper tests that guarantee that your code is working correctly. Yeoman includes <a href=\"http://visionmedia.github.com/mocha/\">Mocha</a> so you can write unit tests by default and runs your tests on the fly in a headless browser so you can be sure everything runs smoothly. (Yeoman let&#8217;s you use Jasmine out of the box too, you just need to set a flag while initializing.)</p><p>All that sounds good but you need to start your project somehow. For me building a basis means taking <a href=\"http://drublic.de/blog/building-advanced-initial-boilerpalte/\">init</a> and extending it to my needs &#8211; manually. Manually adding libraries, maintaining their versions. Manually adding styles like these of Twitter Bootstrap.<br />
With Yeoman you get an initial process to lay out your projects by your needs. Apart from that you can pull in plugins and scripts by just running a single command.</p><p>When dealing with client-side MV*-frameworks such as Backbone.js or Ember.js you need to create a bunch of files such as models or views from time to time. By using Yeoman generating these can be done automatically and reduces the time you spend writing boilerplate code.</p><p>While developing Grunt is there for all my needs to lint my JavaScript, compile SASS and provide a node-based server. These tasks can all be done by Yeoman which is based on Grunt too.</p><p>The work I have to do over and over again is something I want to avoid. In fact that&#8217;s why I created init. But init may not fit the need of another developer. <a href=\"https://twitter.com/hellokahlil\">Kahlil</a> for instance has <a href=\"https://github.com/kahlil/jumpstart\">jumpstart</a> which is pretty similar to init but with some other defaults.<br />
Exactly this point is where Google tries to help out with Yeoman.</p><h3>Roll Out Apps</h3><p>When putting the project to production you don&#8217;t want your live website to be affected by mistakes you made while developing. That&#8217;s what you got tests for. You run them just before you roll out a new feature. Save the time while doing this automated with Yeoman.</p><p>On the web you read a lot about performance of an app, especially slow connections on for example mobile devices with slower processors require that you serve the smallest amount of scripts and stylesheets, optimized sources and minified code. But do you really want to think about all this every time you want to deploy your project? Yeoman integrates minifying scripts and stylesheets, optimizing your images insanely and putting it all together in a package for you to deploy. Just run a command and you are all good.<br />
Apart from that you don&#8217;t need to worry about your app not being available offline: Yeoman generates an application cache manifest for you.</p><h2>&#8220;I Use Other Tools. Yeoman Can&#8217;t Help Me!&#8221;</h2><p>The good thing is that you can extend Yeoman to your needs. If you are using LESS instead of SASS just pull it in. As Yeoman builds upon Grunt you are all free to change the tools Yeoman builds uses. With <a href=\"https://github.com/yeoman/generators/\">Yeoman Generators</a> it&#8217;s easily possible you extend Yeoman&#8217; initialization process with your needs.<br />
Yeoman has some solid defaults but you are not chained to them.</p><h2>Save Your Time, Automate</h2><p>All the above mentioned doesn&#8217;t keep you from writing the code for your app. But isn&#8217;t this the part where you want to focus mostly on?</p><p>When working on a team it is essential to have a solid process of checking the maintainability and code standards, if everyone&#8217;s code is working and automated unit testing. Yeoman is a great Open Source project by people who know how to deal with the problems that you may run into and tackles exactly these points.<br />
To ensure you are doing it right and save time doing things over and over again, try using Yeoman, it will help.</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/BB-mHj9JSXc\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/yeoman/feed/") (slash:comments nil "12") (feedburner:origLink nil "http://drublic.de/blog/yeoman/")) (item nil (title nil "HTML5 Boilerplate – v4.0.0") (link nil "http://feedproxy.google.com/~r/drublic/~3/W2u6yLtf2Q8/") (comments nil "http://drublic.de/blog/html5bp-v4-0-0/#comments") (pubDate nil "Wed, 29 Aug 2012 09:20:58 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "HTML5") (category nil "HTML5 Boilerplate") (category nil "HTML5BP") (category nil "progressive enhancement") (category nil "Tool") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1019") (description nil "HTML5 Boilerplate is out with the new version 4.0.0. There were some significant changes since the last version that are listed up in the changelog (also see below). Most of them because of the excellent work by Nicolas Gallagher &#8211; thanks for leading HTML5 Boilerplate with such great effort. What&#8217;s new? This was done throughout the last seven months of development and resolving bugs: Add documentation in a separate folder &#8211; everything that is directly concerned with the project was moved from the wiki Switch from Public Domain to MIT license Separate Normalize.css from the rest of the CSS Improve<p class=\"readmore\"><a title=\"Link toHTML5 Boilerplate - v4.0.0\" href=\"http://drublic.de/blog/html5bp-v4-0-0/\">Read more</a></p>") (content:encoded nil "<p><strong>HTML5 Boilerplate is out with the new version 4.0.0.</strong></p><p>There were some significant changes since the last version that are listed up <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">in the changelog</a> (also see below). Most of them because of the excellent work by <a href=\"http://twitter.com/necolas\">Nicolas Gallagher</a> &#8211; thanks for leading HTML5 Boilerplate with such great effort.</p><p><img src=\"http://drublic.de/blog/wp-content/uploads/2012/08/apple-touch-icon-144x144-precomposed.png\" alt=\"HTML5 Boilerplate v4.0.0 - Star\" title=\"HTML5 Boilerplate v4.0.0\" width=\"144\" height=\"144\" class=\"alignright\"></p><h2>What&#8217;s new?</h2><p>This was done throughout the last seven months of development and resolving bugs:</p><ul><li>Add documentation in a separate folder &#8211; everything that is directly concerned with the project was moved from the wiki
<li>Switch from Public Domain to MIT license
<li>Separate Normalize.css from the rest of the CSS
<li>Improve console.log protection
<li>Replace <strong>hot pink</strong> text selection color with a neutral color
<li>Nicolas introduced a better image replacement technique
<li>Code format and consistency changes (<3!)
<li>Remove superfluous inline comments
<li>CSS file and JS files &#038; subdirectories were renamed
<li>Update to jQuery 1.8 and Modernizr 2.6.1.
</ul><p><small>– <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">From the Changelog</a></small></p><p>Sadly we <a href=\"https://github.com/h5bp/html5-boilerplate/pull/1140\">could not integrate Grunt.js</a> into the project with some simple tasks because we had to face certain problems when it comes to integrate the CSS file that is build by Grunt into the repository and other impediments.</p><p>Now HTML5 Boilerplate 4.0.0 is out and I&#8217;d encourage you to view the source, learn and <a href=\"https://github.com/h5bp/html5-boilerplate\">contribute</a>.<br />
If you find bugs or potential pitfalls please let us know in the <a href=\"https://github.com/h5bp/html5-boilerplate/issues\">issues</a>.<br />
Cheers to the <a href=\"http://h5bp.github.com/\">H5BP community</a> and especially <a href=\"https://github.com/h5bp/html5-boilerplate/graphs/contributors\">all HTML5 Boilerplate contributors</a>.</p><p>Apart from HTML5 Boilerplate <a href=\"https://twitter.com/alex_gibson\">Alex Gibson</a>, Nicolas and <a href=\"https://github.com/h5bp/mobile-boilerplate/graphs/contributors\">others</a> updated Mobile Boilerplate to version 4.0.0, so go and check it out too!</p><p>And another thing: Both <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a> and <a href=\"http://html5boilerplate.com/mobile\">Mobile Boilerplate</a> have a new website which looks kinda awesome, I think!</p><p><a href=\"https://github.com/h5bp/html5-boilerplate/tags\" class=\"button\">Download from GitHub</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/W2u6yLtf2Q8\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/html5bp-v4-0-0/feed/") (slash:comments nil "3") (feedburner:origLink nil "http://drublic.de/blog/html5bp-v4-0-0/")))) ("Printing The Web" "<p><strong>While it is possible to consume nearly all means of content on your smartphone or tablet it seems like the dream of a paperless office comes true for a lot of web developers.</strong></p><p><strong>But digital natives are not the only ones who are on the web. There are still some people that like to print web sites on paper. Once you are aware of that you might want to include a dedicated print stylesheet into web sites you build. Here is some advice on what you can do to get the best out of your page.</strong></p><p><strong>Disclaimer:</strong> This article was first published in the German <a href=\"http://screengui.de/\">Screen Guide Magazine</a> #15 (September to December 2012, pages 77 to 79). This article features more content and better research.</p><p>The basics of a print style sheet should already be well known by most web developers. There are two possible ways to include CSS for print:</p><ul><li><p>a separate file included in the HTML that carries all CSS for print media<br /><code>&lt;link rel=\"stylesheet\" media=\"print\" href=\"css/print.css\"&gt;</code></p></li><li><p>a special media query which targets print mode and is integrated into your regular stylesheet<br /><code>@media print { … }</code></p></li></ul><p>The decision which way to go is pretty obvious: We do not want to have another request to the server for an extra style sheet and thus will embed the styles using a media query. With the help of preprocessors such as LESS or Sass and build systems it is easily possible to put these styles into separate files and concatenate them when needed for production.</p><h2>Remove Clutter</h2><p>In general focusing on the main content of a web page is very important when it comes to print style sheets. Remove unnecessary page elements such as navigation and the footer using <code>display: none;</code>. However you might not want to remove a logo that identifies your website from the printed version. (Maybe you have an optimized monochrome version that looks better when printing black and white – you can include this as a background-image. This can be overwritten via the user’s configuration though.)</p><p>Think about readable fonts and appropriate font sizes – in print you usually want to have a size not bigger than 12px for your body copy, but on screen 16px is totally appropriate. Furthermore it is important to print mostly dark colors on light background. It <a href=\"http://www.sanbeiji.com/archives/953\">might be the best solution</a> to use black as the default text color.<br />
This is also more economical than printing other colors.</p><p>When in doubt, print the page while developing it to get a better feeling for the font setup.</p><h2>Improve The Content</h2><p>There are a couple of techniques to add more value to the content of a page. One is to add the URL of a link directly after the link text. Don’t do that for links that link to sections of your page or have JavaScript handlers, because it will not carry any meaning for the uninformed reader:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">a<span style=\"color: #00AA00;\">[</span>href<span style=\"color: #00AA00;\">]</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">(</span>href<span style=\"color: #00AA00;\">)</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span>
&nbsp;
a<span style=\"color: #00AA00;\">[</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;#&quot;</span><span style=\"color: #00AA00;\">]</span><span style=\"color: #3333ff;\">:after</span><span style=\"color: #00AA00;\">,</span>
a<span style=\"color: #00AA00;\">[</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;javascript&quot;</span><span style=\"color: #00AA00;\">]</span><span style=\"color: #3333ff;\">:after </span><span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>This is also useful for the <code>abbr</code> element (for abbreviations) and its <code>title</code> attribute. (The same rule technically appies to <code>acronym</code> – thanks to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a>).</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">abbr<span style=\"color: #00AA00;\">[</span>title<span style=\"color: #00AA00;\">]</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">(</span>title<span style=\"color: #00AA00;\">)</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>You can find a <a href=\"http://drublic.de/blog/pseudo-classes-in-print-styles-for-references-in-links/\">more detailed post about this technique here</a>.</p><p><strong>Edit:</strong> As <a href=\"http://drublic.de/blog/printing-the-web/#comment-1188\">Tim suggests in the comments</a> it might be necessary to use <code>word-wrap: break-word;</code> on these elements as especially links can become pretty long and thus break you layout.</p><p>Remember that browsers normally display a header and footer line with some information about your site such as the URL it was printed from or the date. The user might have an option to remove those lines so you may want to include some link or a breadcrumb in the printed page so the reader can easily check back on the web if needed. Other methods outline embedding a QR code on the printed page. Adrian Roselli <a href=\"http://blog.adrianroselli.com/2013/03/calling-qr-in-print-css-only-when-needed.html\">describes this method</a> further.</p><p>In general most style sheets might be done with these few considerations. But there are some more helpers and CSS rules that can come in handy in certain cases.</p><p>A few weeks ago there was <a href=\"http://coding.smashingmagazine.com/2013/03/08/tips-tricks-print-style-sheets/\">an interesing article</a> at Smashing Magazine which has some more useful tips for dealing with links, images and so on. Check it out if needed.</p><h2>Structuring The Page</h2><p>Let’s dig a bit deeper.</p><p>The at-rule <code>@page</code> allows you to specify the structure of the page. Here is an example of how you can configure the margin of the page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">margin</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">2cm</span><span style=\"color: #933;\">1.5cm</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>Furthermore it is possible to define styles via pseudo-classes. With <code>:first</code> for instance you target only the first page of a document, <code>:left</code> and <code>:right</code> target all even/odd pages (this depends on the direction of writing in a language). This can help you if you want to print a manuscript or magazine for example.</p><p>It is possible to name a property and apply it to differnet elements. This comes in handy if you want to print tables in landscape mode:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page tables {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">landscape</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span>
&nbsp;
table <span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">:</span> tables<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>This is far more experimental and can not be used reliable. Check out <a href=\"http://dabblet.com/gist/5232020\">this test case</a>. Please see <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/#using-named-pages\">the specification</a> for a more detailed explanation.</p><p>More information about the <code>@page</code> rule can be found at the <a href=\"https://developer.mozilla.org/en-US/docs/CSS/@page\">Mozilla Developer Network</a>.</p><p>With <code>size</code> you can specify the size of the sheet you want to print your document on. The initial value is <code>auto</code> which sets the width to a DIN A4 sheet with a size of 210 &times; 297 millimeters. You can target an expected DIN A5 sheet this way:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span> 148mm 210mm<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>Even though this is possibile you should let the printer defaults handle the size of the sheet, especially since DIN A4 is not used in the US for example.</p><p><strong>Side note:</strong> Please be aware that it is still not possible to <em>cut</em> a sheet via CSS, thus it is only an expected size. I know this sucks! 3D printers might save us soon.</p><h2>Page-Breaks</h2><p>Both properties <code>page-break-before</code> and <code>page-break-after</code> specify when a page break occurs and when you do not want it to happen. For instance you most likely want to avoid page breaks after a headline:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">h2 <span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">page-break-after</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">avoid</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>Possible values of <code>page-break-before</code> and <code>page-break-after</code> are:</p><ul><li><code>auto</code> – default value, no specified behavior</li><li><code>always</code> – invokes a page-break</li><li><code>avoid</code> – tries to avoid a page-break</li><li><code>left</code>/<code>right</code> – single or double page-break to get the element to start on either the left of the right page, interesting when you want to print brochures or books.</li></ul><p>Furthermore, there is the property <code>page-break-inside</code> which behaves similarly but only supports the values <code>auto</code> and <code>avoid</code>. While <code>avoid</code> specifies that there sould be no page-break within the element and <code>auto</code> does not specify a specific behavior.</p><h2>Experimental Properties</h2><p>The next few features are still in development or only supported by single browsers. Some of them are part of the (not really) new <a href=\"http://www.w3.org/TR/css3-page/\">CSS Paged Media Specification</a>.</p><h3>Print What You See On Screen</h3><p>The property <code>-webkit-print-color-adjust: exact;</code> only works in WebKit browsers (namely Chrome and Safari) and enables you to print a page exactly as it is displayed on screen. Mostly this means that you can print CSS backgrounds. But be careful, there is a bug when it comes to gradients: Gradients are not printed at all. Also it is not possible to define the property on the <code>body</code> element (Whaaaat? :/).</p><p>You need to use this property if you want to print a b/w-optimized logo as outlined earlier and you don’t want to include an image in the markup.</p><p>Other browsers such as Firefox allow users to specify whether they want to print background images and colors via an option in the print dialogue.</p><h3>Widows And Orphans</h3><p>To prevent single lines of text to be at the end of one page you can adjust how many lines have to be tied together with <code>orphans</code>. <code>p { orphans: 3; }</code> for instance requires at least three consecutive lines in a paragraph on the end of a page.</p><p>In contrast – only one line at the beginning of a new page – <code>widows</code> helps you out. So with <code>article { widows: 2; }</code> you will get at least two lines of text for an article on a new page.</p><h3>Crop Marks And Page Bleed</h3><p>Sometimes you need specific declarations on how to cut a sheet of paper. With <code>marks</code> it is possible to set marks via the values <code>crop</code> and <code>cross</code> while <code>crop</code> adds crop marks and <code>cross</code> adds fiducial marks.</p><p>If this property is set you can specify how far the printable area spreads out of the area defined by the aforementioned marks by using the property <code>bleed</code> while using one of the units defined in the <a href=\"http://www.w3.org/TR/css3-values/\">values and units specification</a>.</p><p>This property is part of the <a href=\"http://www.w3.org/TR/css3-gcpm/#page-marks-and-bleed-area\">CSS Generated Content for Paged Media Module</a> which is basically to really recognized by the browser vendors.</p><h3>Boxes On Page-Break</h3><figure class=\"alignright\"><img src=\"http://www.w3.org/TR/css3-background/box-break.png\" title=\"box-decoration-break: slice and clone\" alt=\"box-decoration-break: slice and clone\" width=\"400\"></figure><p>The property <code>box-decoration-break</code> specifies how for example background, margin or border behave when the page breaks. There are two possible values for this property (also see the picture):</p><ul><li><code>slice</code> – default value, literally “slices” the box into two parts</li><li><code>clone</code> – dupicates the styles that are applied to a box on each page</li></ul><p>This is currently supported by Opera with the Presto Engine and will shortly be availabe in Google Chrome. Lennart Schoors <a href=\"http://bricss.net/post/24672339016/box-decoration-break-finally-coming-to-more-browsers\">wrote about this property</a> a while ago on his blog Bricss.</p><p>In Firefox there is <code>-moz-background-inline-policy</code> which enables you to treat background images how you want to. But this is clearly only a partial implementation of <code>box-decoration-break</code>.</p><h2>More On Browser Support</h2><p>While the at-rule <code>@page</code> is supported by all major browsers except Internet Explorer 7 and was just implemented by Firefox a few months ago. Most other properties are far more complex:</p><ul><li>You should use <code>page-break-before</code> and <code>page-break-after</code> only with its value <code>always</code> since the other values are not supported widely</li><li><code>page-break-inside</code> is not supported in Internet Explorer 7.</li></ul><p>You have to be aware that nearly all experimental properies lack support in most browsers and are only implemented by one major engine. For example <code>orphans</code> and <code>widows</code> are only supported in Internet Explorer since version 8 and Opera – which will soon be history as of their change to WebKit. <code>marks</code> and <code>bleed</code> is not implemented in any browser so far.</p><h2>What Is Missing?</h2><p>There are certain drawbacks when it comes to styling for print: Up until now there is no good possibility to define header and footer lines for your pages which would be very helpful for paginated printing. You can use pseudo elements of the body element which enables you to set a header and a footer on the first and last page. But this is by far not what is needed. You will run into this problem when you try to print tables: it is simply not possible without duplicate markup to print the <code>thead</code> of the table on each page (while repeating markup is not a real solution as you don’t know where a page breaks).</p><p>The funny thing is <a href=\"http://www.w3.org/TR/CSS21/tables.html#value-def-table-header-group\">the specification</a> of <code>thead</code> and <code>tfoot</code> states that it might be useful to repeat the elements on each page. Sadly no browser vendor implemented this yet.</p><p>But it is possible to create a solution for that. It could be a nice thing to implement JavaScript events that get invoked right before a page is printed. But as <a href=\"https://twitter.com/SimonSapin\">Simon Sapin</a> states this is not really possible due to the mechanisms how browsers layout a page:</p><blockquote><p>Page breaks happen during layout, much too late to do DOM manipulation (which invalidates and restarts layout). It’s really up to the layout engine to do this.</p></blockquote><p>Also more properties for <code>@page</code> could be helpful to generate header and footer for each page.</p><p>Luckily the <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/\">Paged Media Specification</a> tries to tackle this problem. This specification has just become a Working Draft.</p><p>Here is an example on how you can implement a footer with the page count on every page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span>
&nbsp;
<span style=\"color: #a1a100;\">@top-center {</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Headline, yo!&quot;</span><span style=\"color: #00AA00;\">}</span>
&nbsp;
<span style=\"color: #a1a100;\">@bottom-right {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Page &quot;</span> counter<span style=\"color: #00AA00;\">(</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">)</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>The <code>counter-increment</code> property is a bit special with the keyword <code>page</code> – it increments automatically according to the specification, so you don’t need it at all.</p><p>That rocks, right?! Totally want this in browsers now.</p><p><strong>Edit – 26.03.2013:</strong> Actually there is another possible implementation for fixed headers and footers using <code>position: fixed;</code> elements as <a href=\"http://clt.ag/\">Robert Weber</a><a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">researched</a>. Unfortunately this only works in Firefox, Opera and Internet Explorer with several quirks. Please <a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">read his comment</a>.</p><h3>A Word On Mobile</h3><p>These days it has become more and more popular to visit web pages from your smartphone or tablet but I have never seen anyone printing a web page from such a device.</p><p><del>I am not aware of a browser that has the ability to print a page. But maybe this will come in the near future.</del> Let me know if you know more about this.</p><p><strong>Edit &ndash; 25.03.2013:</strong> As <a href=\"https://twitter.com/alrra\">Cãtãlin Mariş</a> points out, iOS has a feature to connect to a wireless printer and print a website. This uses <a href=\"http://support.apple.com/kb/ht4356\">Apple’s AirPrint</a> services.</p><h3>The Server-Side</h3><p>This post does not take any server-side rendering methods to create style sheets into account. However there are some several non-browsers, print-oriented CSS implementations: <a href=\"http://weasyprint.org/\">WeasyPrint</a>, <a href=\"http://www.princexml.com/\">PrinceXML</a> or <a href=\"http://www.antennahouse.com/\">AntennaHouse</a> and others implement many CSS features that browsers don’t.</p><p>So take a look at these libraries if you are in need of more consitend</p><h2>Conclusion</h2><p>As it turns out it is possible to handle simple structured web pages with the provided properties for print stylesheets. But when it comes to more complex applications you will easily reach the end of these possibilities.</p><p>As a result of the work that the editors put into new specifications such as the Paged Media Spec we will be able to deal with better solutions in the future.</p><h2>Thanks</h2><p>A big thank you goes out to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a> and <a href=\"http://exyr.org/\">Simon Sapin</a> for providing very valuable technical feedback for this article. Apart from that I want to thank <a href=\"http://tomascaspers.de/\">Thomas Caspers</a> for proofreading the post.</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p>✪ Printing The Web – The current state of print style sheets – <a href=\"http://t.co/WCFa9qpQoK\" title=\"http://drublic.de/blog/printing-the-web/\">drublic.de/blog/printing-…</a></p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/316150009970188288\">March 25, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/gt-KvKwybRA\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/gt-KvKwybRA/" (20816 13299) new 1 nil nil ((title nil "Printing The Web") (link nil "http://feedproxy.google.com/~r/drublic/~3/gt-KvKwybRA/") (comments nil "http://drublic.de/blog/printing-the-web/#comments") (pubDate nil "Mon, 25 Mar 2013 11:24:35 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "Research") (category nil "Print") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1272") (description nil "While it is possible to consume nearly all means of content on your smartphone or tablet it seems like the dream of a paperless office comes true for a lot of web developers. But digital natives are not the only ones who are on the web. There are still some people that like to print web sites on paper. Once you are aware of that you might want to include a dedicated print stylesheet into web sites you build. Here is some advice on what you can do to get the best out of your page. Disclaimer: This article was<p class=\"readmore\"><a title=\"Link toPrinting The Web\" href=\"http://drublic.de/blog/printing-the-web/\">Read more</a></p>") (content:encoded nil "<p><strong>While it is possible to consume nearly all means of content on your smartphone or tablet it seems like the dream of a paperless office comes true for a lot of web developers.</strong></p><p><strong>But digital natives are not the only ones who are on the web. There are still some people that like to print web sites on paper. Once you are aware of that you might want to include a dedicated print stylesheet into web sites you build. Here is some advice on what you can do to get the best out of your page.</strong></p><p><strong>Disclaimer:</strong> This article was first published in the German <a href=\"http://screengui.de/\">Screen Guide Magazine</a> #15 (September to December 2012, pages 77 to 79). This article features more content and better research.</p><p>The basics of a print style sheet should already be well known by most web developers. There are two possible ways to include CSS for print:</p><ul><li><p>a separate file included in the HTML that carries all CSS for print media<br /><code>&lt;link rel=\"stylesheet\" media=\"print\" href=\"css/print.css\"&gt;</code></p></li><li><p>a special media query which targets print mode and is integrated into your regular stylesheet<br /><code>@media print { … }</code></p></li></ul><p>The decision which way to go is pretty obvious: We do not want to have another request to the server for an extra style sheet and thus will embed the styles using a media query. With the help of preprocessors such as LESS or Sass and build systems it is easily possible to put these styles into separate files and concatenate them when needed for production.</p><h2>Remove Clutter</h2><p>In general focusing on the main content of a web page is very important when it comes to print style sheets. Remove unnecessary page elements such as navigation and the footer using <code>display: none;</code>. However you might not want to remove a logo that identifies your website from the printed version. (Maybe you have an optimized monochrome version that looks better when printing black and white – you can include this as a background-image. This can be overwritten via the user&#8217;s configuration though.)</p><p>Think about readable fonts and appropriate font sizes – in print you usually want to have a size not bigger than 12px for your body copy, but on screen 16px is totally appropriate. Furthermore it is important to print mostly dark colors on light background. It <a href=\"http://www.sanbeiji.com/archives/953\">might be the best solution</a> to use black as the default text color.<br />
This is also more economical than printing other colors.</p><p>When in doubt, print the page while developing it to get a better feeling for the font setup.</p><h2>Improve The Content</h2><p>There are a couple of techniques to add more value to the content of a page. One is to add the URL of a link directly after the link text. Don&#8217;t do that for links that link to sections of your page or have JavaScript handlers, because it will not carry any meaning for the uninformed reader:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">&#40;</span>href<span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;#&quot;</span><span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #3333ff;\">:after</span><span style=\"color: #00AA00;\">,</span>
a<span style=\"color: #00AA00;\">&#91;</span>href<span style=\"color: #00AA00;\">^=</span><span style=\"color: #ff0000;\">&quot;javascript&quot;</span><span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #3333ff;\">:after </span><span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>This is also useful for the <code>abbr</code> element (for abbreviations) and its <code>title</code> attribute. (The same rule technically appies to <code>acronym</code> – thanks to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a>).</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">abbr<span style=\"color: #00AA00;\">&#91;</span>title<span style=\"color: #00AA00;\">&#93;</span><span style=\"color: #00AA00;\">:</span>after <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot; (&quot;</span> attr<span style=\"color: #00AA00;\">&#40;</span>title<span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #ff0000;\">&quot;)&quot;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>You can find a <a href=\"http://drublic.de/blog/pseudo-classes-in-print-styles-for-references-in-links/\">more detailed post about this technique here</a>.</p><p><strong>Edit:</strong> As <a href=\"http://drublic.de/blog/printing-the-web/#comment-1188\">Tim suggests in the comments</a> it might be necessary to use <code>word-wrap: break-word;</code> on these elements as especially links can become pretty long and thus break you layout.</p><p>Remember that browsers normally display a header and footer line with some information about your site such as the URL it was printed from or the date. The user might have an option to remove those lines so you may want to include some link or a breadcrumb in the printed page so the reader can easily check back on the web if needed. Other methods outline embedding a QR code on the printed page. Adrian Roselli <a href=\"http://blog.adrianroselli.com/2013/03/calling-qr-in-print-css-only-when-needed.html\">describes this method</a> further.</p><p>In general most style sheets might be done with these few considerations. But there are some more helpers and CSS rules that can come in handy in certain cases.</p><p>A few weeks ago there was <a href=\"http://coding.smashingmagazine.com/2013/03/08/tips-tricks-print-style-sheets/\">an interesing article</a> at Smashing Magazine which has some more useful tips for dealing with links, images and so on. Check it out if needed.</p><h2>Structuring The Page</h2><p>Let&#8217;s dig a bit deeper.</p><p>The at-rule <code>@page</code> allows you to specify the structure of the page. Here is an example of how you can configure the margin of the page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">margin</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">2cm</span><span style=\"color: #933;\">1.5cm</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Furthermore it is possible to define styles via pseudo-classes. With <code>:first</code> for instance you target only the first page of a document, <code>:left</code> and <code>:right</code> target all even/odd pages (this depends on the direction of writing in a language). This can help you if you want to print a manuscript or magazine for example.</p><p>It is possible to name a property and apply it to differnet elements. This comes in handy if you want to print tables in landscape mode:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page tables {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">landscape</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
table <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">:</span> tables<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>This is far more experimental and can not be used reliable. Check out <a href=\"http://dabblet.com/gist/5232020\">this test case</a>. Please see <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/#using-named-pages\">the specification</a> for a more detailed explanation.</p><p>More information about the <code>@page</code> rule can be found at the <a href=\"https://developer.mozilla.org/en-US/docs/CSS/@page\">Mozilla Developer Network</a>.</p><p>With <code>size</code> you can specify the size of the sheet you want to print your document on. The initial value is <code>auto</code> which sets the width to a DIN A4 sheet with a size of 210 &times; 297 millimeters. You can target an expected DIN A5 sheet this way:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">size</span><span style=\"color: #00AA00;\">:</span> 148mm 210mm<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Even though this is possibile you should let the printer defaults handle the size of the sheet, especially since DIN A4 is not used in the US for example.</p><p><strong>Side note:</strong> Please be aware that it is still not possible to <em>cut</em> a sheet via CSS, thus it is only an expected size. I know this sucks! 3D printers might save us soon.</p><h2>Page-Breaks</h2><p>Both properties <code>page-break-before</code> and <code>page-break-after</code> specify when a page break occurs and when you do not want it to happen. For instance you most likely want to avoid page breaks after a headline:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">h2 <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">page-break-after</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #993333;\">avoid</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>Possible values of <code>page-break-before</code> and <code>page-break-after</code> are:</p><ul><li><code>auto</code> – default value, no specified behavior</li><li><code>always</code> – invokes a page-break</li><li><code>avoid</code> – tries to avoid a page-break</li><li><code>left</code>/<code>right</code> – single or double page-break to get the element to start on either the left of the right page, interesting when you want to print brochures or books.</li></ul><p>Furthermore, there is the property <code>page-break-inside</code> which behaves similarly but only supports the values <code>auto</code> and <code>avoid</code>. While <code>avoid</code> specifies that there sould be no page-break within the element and <code>auto</code> does not specify a specific behavior.</p><h2>Experimental Properties</h2><p>The next few features are still in development or only supported by single browsers. Some of them are part of the (not really) new <a href=\"http://www.w3.org/TR/css3-page/\">CSS Paged Media Specification</a>.</p><h3>Print What You See On Screen</h3><p>The property <code>-webkit-print-color-adjust: exact;</code> only works in WebKit browsers (namely Chrome and Safari) and enables you to print a page exactly as it is displayed on screen. Mostly this means that you can print CSS backgrounds. But be careful, there is a bug when it comes to gradients: Gradients are not printed at all. Also it is not possible to define the property on the <code>body</code> element (Whaaaat? :/).</p><p>You need to use this property if you want to print a b/w-optimized logo as outlined earlier and you don&#8217;t want to include an image in the markup.</p><p>Other browsers such as Firefox allow users to specify whether they want to print background images and colors via an option in the print dialogue.</p><h3>Widows And Orphans</h3><p>To prevent single lines of text to be at the end of one page you can adjust how many lines have to be tied together with <code>orphans</code>. <code>p { orphans: 3; }</code> for instance requires at least three consecutive lines in a paragraph on the end of a page.</p><p>In contrast &#8211; only one line at the beginning of a new page &#8211; <code>widows</code> helps you out. So with <code>article { widows: 2; }</code> you will get at least two lines of text for an article on a new page.</p><h3>Crop Marks And Page Bleed</h3><p>Sometimes you need specific declarations on how to cut a sheet of paper. With <code>marks</code> it is possible to set marks via the values <code>crop</code> and <code>cross</code> while <code>crop</code> adds crop marks and <code>cross</code> adds fiducial marks.</p><p>If this property is set you can specify how far the printable area spreads out of the area defined by the aforementioned marks by using the property <code>bleed</code> while using one of the units defined in the <a href=\"http://www.w3.org/TR/css3-values/\">values and units specification</a>.</p><p>This property is part of the <a href=\"http://www.w3.org/TR/css3-gcpm/#page-marks-and-bleed-area\">CSS Generated Content for Paged Media Module</a> which is basically to really recognized by the browser vendors.</p><h3>Boxes On Page-Break</h3><figure class=\"alignright\"><img src=\"http://www.w3.org/TR/css3-background/box-break.png\" title=\"box-decoration-break: slice and clone\" alt=\"box-decoration-break: slice and clone\" width=\"400\"></figure><p>The property <code>box-decoration-break</code> specifies how for example background, margin or border behave when the page breaks. There are two possible values for this property (also see the picture):</p><ul><li><code>slice</code> &#8211; default value, literally &#8220;slices&#8221; the box into two parts</li><li><code>clone</code> &#8211; dupicates the styles that are applied to a box on each page</li></ul><p>This is currently supported by Opera with the Presto Engine and will shortly be availabe in Google Chrome. Lennart Schoors <a href=\"http://bricss.net/post/24672339016/box-decoration-break-finally-coming-to-more-browsers\">wrote about this property</a> a while ago on his blog Bricss.</p><p>In Firefox there is <code>-moz-background-inline-policy</code> which enables you to treat background images how you want to. But this is clearly only a partial implementation of <code>box-decoration-break</code>.</p><h2>More On Browser Support</h2><p>While the at-rule <code>@page</code> is supported by all major browsers except Internet Explorer 7 and was just implemented by Firefox a few months ago. Most other properties are far more complex:</p><ul><li>You should use <code>page-break-before</code> and <code>page-break-after</code> only with its value <code>always</code> since the other values are not supported widely</li><li><code>page-break-inside</code> is not supported in Internet Explorer 7.</li></ul><p>You have to be aware that nearly all experimental properies lack support in most browsers and are only implemented by one major engine. For example <code>orphans</code> and <code>widows</code> are only supported in Internet Explorer since version 8 and Opera – which will soon be history as of their change to WebKit. <code>marks</code> and <code>bleed</code> is not implemented in any browser so far.</p><h2>What Is Missing?</h2><p>There are certain drawbacks when it comes to styling for print: Up until now there is no good possibility to define header and footer lines for your pages which would be very helpful for paginated printing. You can use pseudo elements of the body element which enables you to set a header and a footer on the first and last page. But this is by far not what is needed. You will run into this problem when you try to print tables: it is simply not possible without duplicate markup to print the <code>thead</code> of the table on each page (while repeating markup is not a real solution as you don&#8217;t know where a page breaks).</p><p>The funny thing is <a href=\"http://www.w3.org/TR/CSS21/tables.html#value-def-table-header-group\">the specification</a> of <code>thead</code> and <code>tfoot</code> states that it might be useful to repeat the elements on each page. Sadly no browser vendor implemented this yet.</p><p>But it is possible to create a solution for that. It could be a nice thing to implement JavaScript events that get invoked right before a page is printed. But as <a href=\"https://twitter.com/SimonSapin\">Simon Sapin</a> states this is not really possible due to the mechanisms how browsers layout a page:</p><blockquote><p>Page breaks happen during layout, much too late to do DOM manipulation (which invalidates and restarts layout). It’s really up to the layout engine to do this.</p></blockquote><p>Also more properties for <code>@page</code> could be helpful to generate header and footer for each page.</p><p>Luckily the <a href=\"http://www.w3.org/TR/2013/WD-css3-page-20130314/\">Paged Media Specification</a> tries to tackle this problem. This specification has just become a Working Draft.</p><p>Here is an example on how you can implement a footer with the page count on every page:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@page {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span>
&nbsp;
    <span style=\"color: #a1a100;\">@top-center {</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Headline, yo!&quot;</span><span style=\"color: #00AA00;\">&#125;</span>
&nbsp;
    <span style=\"color: #a1a100;\">@bottom-right {</span><span style=\"color: #000000; font-weight: bold;\">counter-increment</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">content</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #ff0000;\">&quot;Page &quot;</span> counter<span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #000000; font-weight: bold;\">page</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>The <code>counter-increment</code> property is a bit special with the keyword <code>page</code> – it increments automatically according to the specification, so you don&#8217;t need it at all.</p><p>That rocks, right?! Totally want this in browsers now.</p><p><strong>Edit &#8211; 26.03.2013:</strong> Actually there is another possible implementation for fixed headers and footers using <code>position: fixed;</code> elements as <a href=\"http://clt.ag/\">Robert Weber</a><a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">researched</a>. Unfortunately this only works in Firefox, Opera and Internet Explorer with several quirks. Please <a href=\"http://drublic.de/blog/printing-the-web/#comment-1100\">read his comment</a>.</p><h3>A Word On Mobile</h3><p>These days it has become more and more popular to visit web pages from your smartphone or tablet but I have never seen anyone printing a web page from such a device.</p><p><del>I am not aware of a browser that has the ability to print a page. But maybe this will come in the near future.</del> Let me know if you know more about this.</p><p><strong>Edit &ndash; 25.03.2013:</strong> As <a href=\"https://twitter.com/alrra\">Cãtãlin Mariş</a> points out, iOS has a feature to connect to a wireless printer and print a website. This uses <a href=\"http://support.apple.com/kb/ht4356\">Apple’s AirPrint</a> services.</p><h3>The Server-Side</h3><p>This post does not take any server-side rendering methods to create style sheets into account. However there are some several non-browsers, print-oriented CSS implementations: <a href=\"http://weasyprint.org/\">WeasyPrint</a>, <a href=\"http://www.princexml.com/\">PrinceXML</a> or <a href=\"http://www.antennahouse.com/\">AntennaHouse</a> and others implement many CSS features that browsers don’t.</p><p>So take a look at these libraries if you are in need of more consitend</p><h2>Conclusion</h2><p>As it turns out it is possible to handle simple structured web pages with the provided properties for print stylesheets. But when it comes to more complex applications you will easily reach the end of these possibilities.</p><p>As a result of the work that the editors put into new specifications such as the Paged Media Spec we will be able to deal with better solutions in the future.</p><h2>Thanks</h2><p>A big thank you goes out to <a href=\"http://adrianroselli.com/\">Adrian Roselli</a> and <a href=\"http://exyr.org/\">Simon Sapin</a> for providing very valuable technical feedback for this article. Apart from that I want to thank <a href=\"http://tomascaspers.de/\">Thomas Caspers</a> for proofreading the post.</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p>✪ Printing The Web – The current state of print style sheets – <a href=\"http://t.co/WCFa9qpQoK\" title=\"http://drublic.de/blog/printing-the-web/\">drublic.de/blog/printing-…</a></p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/316150009970188288\">March 25, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/gt-KvKwybRA\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/printing-the-web/feed/") (slash:comments nil "23") (feedburner:origLink nil "http://drublic.de/blog/printing-the-web/"))) ("Speaking Engagements, the .net-Awards and Freelancing" "<p><strong>Here is a quick overview of my current status and why there are little updates in the blog. Also some great news.</strong></p><h2>Talking at Conferences</h2><p>As you know, if you follow along my stuff, I spoke about coding guidelines at TalkOff Conference in Lille, France in January this year. The conference was organized very well and I had a lot of fun. Besides that I met a lot of great people. Thanks again for the invitation. You can <a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\">find the slides here</a>.</p><p>I am also very happy to be invited to <a href=\"http://www.uxmunich.com/\">UX Munich</a> where I will speak about style guides in general and how you can be friends with designers. Check out <a href=\"http://www.uxmunich.com/speakers/hans-christian-reinl\">the talk’s description</a> on their website. There are a lot great people speaking at the conference as for example Vitaly Friedmann from <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://rainypixels.com/\">Nishant Kothary</a> who was part of the team that redesigned <a href=\"http://www.microsoft.com/\">Microsoft.com</a>. Also <a href=\"http://bastianallgeier.com/\">Bastian Allgeier</a> will be speaking, who <a href=\"http://thenittygritty.co/the-future-of-the-web-a-draft\">wrote an article for The Nitty Gritty</a> just recently.<br />
This conference will take place in Munich, Germany and will be helt next week. So check it out quickly and <a href=\"http://uxmunich.com/register\">get a ticket</a>!</p><p>Later in April I will present at <a href=\"http://2013.front-trends.com/\">Front-Trends 2013</a> in Warsaw in Poland and yet again some top speakers of our industry will present there, too. Check out <a href=\"http://2013.front-trends.com/speakers/\">the speakers page</a> to find Lea Verou, Faruk Ateş, Jake Archibald and a lot of others.</p><p>If you want me to speak at your conference, I’d be happy to submit a proposal. Just <a href=\"http://drublic.de/#contact\">contact me</a>.</p><h2>.net-Awards Nomination</h2><p>I am very happy to be one of the nominees of this year’s .net-Awards in the category “Young Developer of the Year”. Check out <a href=\"http://www.thenetawards.com/\">the website</a> and vote what you like.<br />
Thanks to everyone who proposed me to be nominated, this really means a lot to me. <3</p><h2>Freelance Work</h2><p>A couple of months ago I decided to leave <a href=\"http://gebruederheitz.de/\">/gebrüderheitz</a> and do freelance work exclusively for some time starting in April. I want to focus a bit more on Open Source projects and work on some side-projects. I am really excited about the projects that I’ll be working on and about the re-organisation of my life.<br />
The pipeline of actual client projects is still kind of free, so drop me a mail to <a href=\"mailto:info@drublic.de\">info@drublic.de</a> or use the <a href=\"http://drublic.de/#contact\">contact form</a> if you are interested in working with me. Please see the <a href=\"http://drublic.de/#hire-me\">“Hire me” section</a> on my website to get a quick overview of what I like to work on.</p><p>This all and some projects besides my normal work schedule keep me from updating my blog more often. I hope to write some more technical articles soon.<br />
LOVE!</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\"><p>✪ Speaking Engagements, the .net-Awards and Freelancing – <a href=\"http://t.co/vfQ63ua9W2\" title=\"http://drublic.de/blog/speaking-engagements-net-awards-freelancing/\">drublic.de/blog/speaking-…</a> – A personal update on conferences and becoming freelance.</p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/309959388129538048\">March 8, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/_JFOmNAfNEw\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/_JFOmNAfNEw/" (20793 44704) new 2 nil nil ((title nil "Speaking Engagements, the .net-Awards and Freelancing") (link nil "http://feedproxy.google.com/~r/drublic/~3/_JFOmNAfNEw/") (comments nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/#comments") (pubDate nil "Fri, 08 Mar 2013 09:25:52 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Freelance") (category nil "Speaking") (category nil "Talks") (category nil "Work") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1234") (description nil "Here is a quick overview of my current status and why there are little updates in the blog. Also some great news. Talking at Conferences As you know, if you follow along my stuff, I spoke about coding guidelines at TalkOff Conference in Lille, France in January this year. The conference was organized very well and I had a lot of fun. Besides that I met a lot of great people. Thanks again for the invitation. You can find the slides here. I am also very happy to be invited to UX Munich where I will speak about style guides<p class=\"readmore\"><a title=\"Link toSpeaking Engagements, the .net-Awards and Freelancing\" href=\"http://drublic.de/blog/speaking-engagements-net-awards-freelancing/\">Read more</a></p>") (content:encoded nil "<p><strong>Here is a quick overview of my current status and why there are little updates in the blog. Also some great news.</strong></p><h2>Talking at Conferences</h2><p>As you know, if you follow along my stuff, I spoke about coding guidelines at TalkOff Conference in Lille, France in January this year. The conference was organized very well and I had a lot of fun. Besides that I met a lot of great people. Thanks again for the invitation. You can <a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\">find the slides here</a>.</p><p>I am also very happy to be invited to <a href=\"http://www.uxmunich.com/\">UX Munich</a> where I will speak about style guides in general and how you can be friends with designers. Check out <a href=\"http://www.uxmunich.com/speakers/hans-christian-reinl\">the talk&#8217;s description</a> on their website. There are a lot great people speaking at the conference as for example Vitaly Friedmann from <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://rainypixels.com/\">Nishant Kothary</a> who was part of the team that redesigned <a href=\"http://www.microsoft.com/\">Microsoft.com</a>. Also <a href=\"http://bastianallgeier.com/\">Bastian Allgeier</a> will be speaking, who <a href=\"http://thenittygritty.co/the-future-of-the-web-a-draft\">wrote an article for The Nitty Gritty</a> just recently.<br />
This conference will take place in Munich, Germany and will be helt next week. So check it out quickly and <a href=\"http://uxmunich.com/register\">get a ticket</a>!</p><p>Later in April I will present at <a href=\"http://2013.front-trends.com/\">Front-Trends 2013</a> in Warsaw in Poland and yet again some top speakers of our industry will present there, too. Check out <a href=\"http://2013.front-trends.com/speakers/\">the speakers page</a> to find Lea Verou, Faruk Ateş, Jake Archibald and a lot of others.</p><p>If you want me to speak at your conference, I&#8217;d be happy to submit a proposal. Just <a href=\"http://drublic.de/#contact\">contact me</a>.</p><h2>.net-Awards Nomination</h2><p>I am very happy to be one of the nominees of this year&#8217;s .net-Awards in the category “Young Developer of the Year”. Check out <a href=\"http://www.thenetawards.com/\">the website</a> and vote what you like.<br />
Thanks to everyone who proposed me to be nominated, this really means a lot to me. <3</p><h2>Freelance Work</h2><p>A couple of months ago I decided to leave <a href=\"http://gebruederheitz.de/\">/gebrüderheitz</a> and do freelance work exclusively for some time starting in April. I want to focus a bit more on Open Source projects and work on some side-projects. I am really excited about the projects that I&#8217;ll be working on and about the re-organisation of my life.<br />
The pipeline of actual client projects is still kind of free, so drop me a mail to <a href=\"mailto:info@drublic.de\">info@drublic.de</a> or use the <a href=\"http://drublic.de/#contact\">contact form</a> if you are interested in working with me. Please see the <a href=\"http://drublic.de/#hire-me\">“Hire me” section</a> on my website to get a quick overview of what I like to work on.</p><p>This all and some projects besides my normal work schedule keep me from updating my blog more often. I hope to write some more technical articles soon.<br />
LOVE!</p><div class=\"aligncenter\"><blockquote class=\"twitter-tweet\"><p>✪ Speaking Engagements, the .net-Awards and Freelancing &#8211; <a href=\"http://t.co/vfQ63ua9W2\" title=\"http://drublic.de/blog/speaking-engagements-net-awards-freelancing/\">drublic.de/blog/speaking-…</a> &#8211; A personal update on conferences and becoming freelance.</p><p>&mdash; Hans Christian Reinl (@drublic) <a href=\"https://twitter.com/drublic/status/309959388129538048\">March 8, 2013</a></p></blockquote></div><p><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p><style>
.twitter-tweet { margin: 1rem auto !important; }
</style><img src=\"http://feeds.feedburner.com/~r/drublic/~4/_JFOmNAfNEw\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/feed/") (slash:comments nil "1") (feedburner:origLink nil "http://drublic.de/blog/speaking-engagements-net-awards-freelancing/"))) ("TakeOff Conference: Talking About Good Code →" "<p>Yesterday (17. January 2013) I was talking at TakeOff Conference in Lille, France. I actually extended my talk from the Fronteer’s Jam Session “Writing Awesome Code” with lots of new stuff. So check out the slides. There will be a video with the actual talk that is not online yet. I will post it here when it is.</p><p><a href=\"http://slides.drublic.de/takeoff-awesome-code/\" class=\"button\">See slides</a></p><p>Just a few words concerning the conference: The organizers are doing a great job here and the speakers are really good. If you’re not here, you are missing out on something :)</p><p><a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\" rel=\"bookmark\" title=\"Permanent link to 'TakeOff Conference: Talking About Good Code'\" class=\"glyph\">☰</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/nf1Zp0Y5AfI\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/nf1Zp0Y5AfI/" (20729 15946) new 3 nil nil ((title nil "TakeOff Conference: Talking About Good Code →") (link nil "http://feedproxy.google.com/~r/drublic/~3/nf1Zp0Y5AfI/") (comments nil "http://drublic.de/blog/takeoff-conference-talking-about-good-code/#comments") (pubDate nil "Fri, 18 Jan 2013 12:21:30 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Code Quality") (category nil "Good Code") (category nil "Markup") (category nil "Organize Code") (category nil "Presentation") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1230") (description nil "Yesterday (17. January 2013) I was talking at TakeOff Conference in Lille, France. I actually extended my talk from the Fronteer&#8217;s Jam Session &#8220;Writing Awesome Code&#8221; with lots of new stuff. So check out the slides. There will be a video with the actual talk that is not online yet. I will post it here when it is. See slides Just a few words concerning the conference: The organizers are doing a great job here and the speakers are really good. If you&#8217;re not here, you are missing out on something :) &#9776;<p><a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\" rel=\"bookmark\" title=\"Permanent link to 'TakeOff Conference: Talking About Good Code'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Yesterday (17. January 2013) I was talking at TakeOff Conference in Lille, France. I actually extended my talk from the Fronteer&#8217;s Jam Session &#8220;Writing Awesome Code&#8221; with lots of new stuff. So check out the slides. There will be a video with the actual talk that is not online yet. I will post it here when it is.</p><p><a href=\"http://slides.drublic.de/takeoff-awesome-code/\" class=\"button\">See slides</a></p><p>Just a few words concerning the conference: The organizers are doing a great job here and the speakers are really good. If you&#8217;re not here, you are missing out on something :)</p><p><a href=\"http://drublic.de/blog/takeoff-conference-talking-about-good-code/\" rel=\"bookmark\" title=\"Permanent link to 'TakeOff Conference: Talking About Good Code'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/nf1Zp0Y5AfI\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/takeoff-conference-talking-about-good-code/feed/") (slash:comments nil "1") (feedburner:origLink nil "http://slides.drublic.de/takeoff-awesome-code/"))) ("The REM Fallback with Sass or LESS" "<p>Since a while now word has spread to use the CSS unit <code>rem</code> for font-sizes and values in CSS. Here I want to explain how you can use a fallback in Sass or LESS to get <code>rem</code> working in all browsers.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">View Gist with mixins</a></p><h2>Why rem?</h2><p>Let’s look into what <code>rem</code> means. We know of the <code>em</code> unit which is relative to the font-size of the parent element it is defined on. This means if one of the parents in the DOM-tree changes its font-size, the font-size of the child element changes too. In contrast the <code>rem</code> unit is relative to the root element of the page (this means the <code>html</code> element). Thus it is possible to define a font-size once on the root and make all other sizes depending on this size. Please switch over to <a href=\"http://snook.ca/archives/html_and_css/font-size-with-rem\">Snook’s blogpost explaining what <code>rem</code> is</a> to get more information about it.</p><p>If you ask yourself why you should use <code>em</code> instead of <code>px</code>, Chris Coyier wrote <a href=\"http://css-tricks.com/why-ems/\">an article on why he switched to <code>em</code></a> instead of pixels a while ago for nearly all properties using units in CSS. Read this to understand why <code>em</code> and thus <code>rem</code> is so important.</p><p>I would encourage you to use <code>rem</code> (or at least <code>em</code>) for properties like <code>padding</code>, <code>margin</code> and sometimes even <code>width</code> instead of pixels. It makes your design even more responsive.</p><p>The drawback of <code>rem</code> is that it is not supported in all browsers that are used, even though <a href=\"http://caniuse.com/rem\">the support looks pretty good</a>: Internet Explorer is capable of dealing with <code>rem</code> since version 9. The versions before need a fallback. It is supported on the major mobile browsers except Opera Mini. Let us have a look on how we can define such a fallback using Sass or LESS.</p><h2>A Sass Mixin</h2><p>In order to get the pixel-based auto-calculation working as a fallback we need to define the font-size as a variable in Sass or LESS.<br />
The following examples are in Sass with the SCSS-syntax.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">$main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">16px</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>We can now use this default font size on the root element:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">html <span style=\"color: #00AA00;\">{</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>Now we define a mixin that provides a fallback pixel-based size of the property based on the variable we defined before and in <code>rem</code> for capable browsers.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@mixin x-rem ($property, $value) {</span>
#<span style=\"color: #00AA00;\">{</span>$property<span style=\"color: #00AA00;\">}</span><span style=\"color: #00AA00;\">:</span> $value <span style=\"color: #00AA00;\">*</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span>
#<span style=\"color: #00AA00;\">{</span>$property<span style=\"color: #00AA00;\">}</span><span style=\"color: #00AA00;\">:</span> #<span style=\"color: #00AA00;\">{</span>$value<span style=\"color: #00AA00;\">}</span>rem<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span></pre></div></div><p>What the mixin does is, that it takes the <code>$property</code> and calculates the value in pixels. This simple mathematic function is part of Sass. The <code>$value</code> argument is a decimal digit. </p><p>I like to prefix my own mixins with <code>x-</code> to easily distinguish them from other mixins. This is <a href=\"https://github.com/necolas/idiomatic-css#preprocessors-additional-format-considerations\">a part of the Idiomatic CSS principles</a> by Nicolas too. I think previously I prefixed them with a namespace (mostly it was <code>the-</code> as a prefix, so you get <code>the-transition</code>) – but since there is a better convention with Idiomatic CSS I switched to it.</p><p>This mixin can be called like in the following examples:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@include x-rem(font-size, 1.4);</span><span style=\"color: #a1a100;\">@include x-rem(padding-left, 2);</span></pre></div></div><p>The output that is being produced looks like this for the first example:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">22.4px</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> 1.4rem<span style=\"color: #00AA00;\">;</span></pre></div></div><p>You can use Sass’ <a href=\"http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html#round-instance_method\"><code>round()</code></a> function to get an integer output for the px-based output. But every browser is capable to round <code>22.4px</code> by itself to <code>22px</code> since it is not possible to display 0.4px after all. (LESS has <a href=\"http://lesscss.org/#-math-functions\">the same function</a>.)</p><h2>A Few Words On The LESS Mixin</h2><p>In LESS interpolation for properties is current not possible with version 1.3.x. The maintainers <a href=\"https://github.com/cloudhead/less.js/pull/698\">aim to include it in version 1.4</a>. For the time being we need to define a workaround for properties which is basically a JavaScript function which returns a sting that consists of two properties instead of one, while the first one is <code>-</code> which is basically no property an thus disregarded by the browser. The second is the property that we want to use.</p><p>Here is the first line of the mixin:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">-<span style=\"color: #00AA00;\">:</span> ~`<span style=\"color: #00AA00;\">(</span>function <span style=\"color: #00AA00;\">(</span><span style=\"color: #00AA00;\">)</span><span style=\"color: #00AA00;\">{</span> return <span style=\"color: #ff0000;\">';@{property}: @{px-fallback}'</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">}</span><span style=\"color: #00AA00;\">(</span><span style=\"color: #00AA00;\">)</span><span style=\"color: #00AA00;\">)</span>`<span style=\"color: #00AA00;\">;</span></pre></div></div><p>This only works if the LESS compiler uses the actual JS library. It does not work with lessphp or other compilers that are not JavaScript based.</p><h2>Final Words</h2><p>And that is it. The mixin provides a decent fallback for <code>rem</code>-based sizes of all kind. Since CSS runs stable with this version of a fallback and overwrites the pixel-based value because of CSS’ cascade we can use it without any problems. It works in old Internet Explorers.</p><p>Life is easy with <code>rem</code>. So look at the Gist and use the rem-fallback-mixins.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">Sass and LESS mixins</a></p><h2>Credit</h2><p>I want to mention that I first saw this technique used by <a href=\"http://nimbupani.com/\">Divya Manian</a> a year ago (beginning of 2012) when working on the <a href=\"http://api.html5please.com/\">HTML5 Please API</a> project. I am not sure who developed this technique or where it comes from. Please let me know if you have a link.</p><p><strong>Addition:</strong> The <a href=\"https://github.com/ericam/susy\">Susy framework</a> has <a href=\"https://github.com/ericam/susy/blob/master/sass/susy/_units.scss\">a Sass mixin</a> which lets you easily convert units including the rem unit and a fallback as described here. (Head-tip <a href=\"https://twitter.com/fabianbeiner\">Fabian Biener</a>.)</p><p><strong>Addition 2:</strong><a href=\"http://drublic.de/blog/rem-fallback-sass-less/#comment-957\">Steffen</a> wrote <a href=\"https://gist.github.com/4530526\">a Sass mixin</a> which lets you use the short notation of properties like <code>margin</code> or <code>padding</code>. Even mixing values as px and rem is working. Cheers!</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/WKuDBkXhPCc\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/WKuDBkXhPCc/" (20708 4429) new 4 nil nil ((title nil "The REM Fallback with Sass or LESS") (link nil "http://feedproxy.google.com/~r/drublic/~3/WKuDBkXhPCc/") (comments nil "http://drublic.de/blog/rem-fallback-sass-less/#comments") (pubDate nil "Wed, 02 Jan 2013 10:51:57 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "Tools") (category nil "CSS units") (category nil "CSS3") (category nil "Fallback") (category nil "LESS") (category nil "Ployfill") (category nil "SASS") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1200") (description nil "Since a while now word has spread to use the CSS unit rem for font-sizes and values in CSS. Here I want to explain how you can use a fallback in Sass or LESS to get rem working in all browsers. View Gist with mixins Why rem? Let&#8217;s look into what rem means. We know of the em unit which is relative to the font-size of the parent element it is defined on. This means if one of the parents in the DOM-tree changes its font-size, the font-size of the child element changes too. In contrast the rem unit is<p class=\"readmore\"><a title=\"Link toThe REM Fallback with Sass or LESS\" href=\"http://drublic.de/blog/rem-fallback-sass-less/\">Read more</a></p>") (content:encoded nil "<p>Since a while now word has spread to use the CSS unit <code>rem</code> for font-sizes and values in CSS. Here I want to explain how you can use a fallback in Sass or LESS to get <code>rem</code> working in all browsers.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">View Gist with mixins</a></p><h2>Why rem?</h2><p>Let&#8217;s look into what <code>rem</code> means. We know of the <code>em</code> unit which is relative to the font-size of the parent element it is defined on. This means if one of the parents in the DOM-tree changes its font-size, the font-size of the child element changes too. In contrast the <code>rem</code> unit is relative to the root element of the page (this means the <code>html</code> element). Thus it is possible to define a font-size once on the root and make all other sizes depending on this size. Please switch over to <a href=\"http://snook.ca/archives/html_and_css/font-size-with-rem\">Snook&#8217;s blogpost explaining what <code>rem</code> is</a> to get more information about it.</p><p>If you ask yourself why you should use <code>em</code> instead of <code>px</code>, Chris Coyier wrote <a href=\"http://css-tricks.com/why-ems/\">an article on why he switched to <code>em</code></a> instead of pixels a while ago for nearly all properties using units in CSS. Read this to understand why <code>em</code> and thus <code>rem</code> is so important.</p><p>I would encourage you to use <code>rem</code> (or at least <code>em</code>) for properties like <code>padding</code>, <code>margin</code> and sometimes even <code>width</code> instead of pixels. It makes your design even more responsive.</p><p>The drawback of <code>rem</code> is that it is not supported in all browsers that are used, even though <a href=\"http://caniuse.com/rem\">the support looks pretty good</a>: Internet Explorer is capable of dealing with <code>rem</code> since version 9. The versions before need a fallback. It is supported on the major mobile browsers except Opera Mini. Let us have a look on how we can define such a fallback using Sass or LESS.</p><h2>A Sass Mixin</h2><p>In order to get the pixel-based auto-calculation working as a fallback we need to define the font-size as a variable in Sass or LESS.<br />
The following examples are in Sass with the SCSS-syntax.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">$main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">16px</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>We can now use this default font size on the root element:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">html <span style=\"color: #00AA00;\">&#123;</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span></pre></div></div><p>Now we define a mixin that provides a fallback pixel-based size of the property based on the variable we defined before and in <code>rem</code> for capable browsers.</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@mixin x-rem ($property, $value) {</span>
  #<span style=\"color: #00AA00;\">&#123;</span>$property<span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">:</span> $value <span style=\"color: #00AA00;\">*</span> $main-<span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">;</span>
  #<span style=\"color: #00AA00;\">&#123;</span>$property<span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">:</span> #<span style=\"color: #00AA00;\">&#123;</span>$value<span style=\"color: #00AA00;\">&#125;</span>rem<span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span></pre></div></div><p>What the mixin does is, that it takes the <code>$property</code> and calculates the value in pixels. This simple mathematic function is part of Sass. The <code>$value</code> argument is a decimal digit. </p><p>I like to prefix my own mixins with <code>x-</code> to easily distinguish them from other mixins. This is <a href=\"https://github.com/necolas/idiomatic-css#preprocessors-additional-format-considerations\">a part of the Idiomatic CSS principles</a> by Nicolas too. I think previously I prefixed them with a namespace (mostly it was <code>the-</code> as a prefix, so you get <code>the-transition</code>) – but since there is a better convention with Idiomatic CSS I switched to it.</p><p>This mixin can be called like in the following examples:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #a1a100;\">@include x-rem(font-size, 1.4);</span><span style=\"color: #a1a100;\">@include x-rem(padding-left, 2);</span></pre></div></div><p>The output that is being produced looks like this for the first example:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\"><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span><span style=\"color: #933;\">22.4px</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #000000; font-weight: bold;\">font-size</span><span style=\"color: #00AA00;\">:</span> 1.4rem<span style=\"color: #00AA00;\">;</span></pre></div></div><p>You can use Sass&#8217; <a href=\"http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html#round-instance_method\"><code>round()</code></a> function to get an integer output for the px-based output. But every browser is capable to round <code>22.4px</code> by itself to <code>22px</code> since it is not possible to display 0.4px after all. (LESS has <a href=\"http://lesscss.org/#-math-functions\">the same function</a>.)</p><h2>A Few Words On The LESS Mixin</h2><p>In LESS interpolation for properties is current not possible with version 1.3.x. The maintainers <a href=\"https://github.com/cloudhead/less.js/pull/698\">aim to include it in version 1.4</a>. For the time being we need to define a workaround for properties which is basically a JavaScript function which returns a sting that consists of two properties instead of one, while the first one is <code>-</code> which is basically no property an thus disregarded by the browser. The second is the property that we want to use.</p><p>Here is the first line of the mixin:</p><div class=\"wp_syntax\"><div class=\"code\"><pre class=\"css\" style=\"font-family:monospace;\">-<span style=\"color: #00AA00;\">:</span> ~`<span style=\"color: #00AA00;\">&#40;</span>function <span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">&#123;</span> return <span style=\"color: #ff0000;\">';@{property}: @{px-fallback}'</span><span style=\"color: #00AA00;\">;</span><span style=\"color: #00AA00;\">&#125;</span><span style=\"color: #00AA00;\">&#40;</span><span style=\"color: #00AA00;\">&#41;</span><span style=\"color: #00AA00;\">&#41;</span>`<span style=\"color: #00AA00;\">;</span></pre></div></div><p>This only works if the LESS compiler uses the actual JS library. It does not work with lessphp or other compilers that are not JavaScript based.</p><h2>Final Words</h2><p>And that is it. The mixin provides a decent fallback for <code>rem</code>-based sizes of all kind. Since CSS runs stable with this version of a fallback and overwrites the pixel-based value because of CSS&#8217; cascade we can use it without any problems. It works in old Internet Explorers.</p><p>Life is easy with <code>rem</code>. So look at the Gist and use the rem-fallback-mixins.</p><p><a href=\"https://gist.github.com/4374738\" class=\"button\">Sass and LESS mixins</a></p><h2>Credit</h2><p>I want to mention that I first saw this technique used by <a href=\"http://nimbupani.com/\">Divya Manian</a> a year ago (beginning of 2012) when working on the <a href=\"http://api.html5please.com/\">HTML5 Please API</a> project. I am not sure who developed this technique or where it comes from. Please let me know if you have a link.</p><p><strong>Addition:</strong> The <a href=\"https://github.com/ericam/susy\">Susy framework</a> has <a href=\"https://github.com/ericam/susy/blob/master/sass/susy/_units.scss\">a Sass mixin</a> which lets you easily convert units including the rem unit and a fallback as described here. (Head-tip <a href=\"https://twitter.com/fabianbeiner\">Fabian Biener</a>.)</p><p><strong>Addition 2:</strong><a href=\"http://drublic.de/blog/rem-fallback-sass-less/#comment-957\">Steffen</a> wrote <a href=\"https://gist.github.com/4530526\">a Sass mixin</a> which lets you use the short notation of properties like <code>margin</code> or <code>padding</code>. Even mixing values as px and rem is working. Cheers!</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/WKuDBkXhPCc\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/rem-fallback-sass-less/feed/") (slash:comments nil "7") (feedburner:origLink nil "http://drublic.de/blog/rem-fallback-sass-less/"))) ("Working Draft Revision 100 →" "<p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\" alt=\"Working Draft\" width=\"200\" height=\"200\" class=\"alignright\" /></a>It’s been over two years now – with our podcast Working Draft we have done 100 revisions. Congratulations to ourselves!</p><p>We recorded revision 100 on Monday and had a very special guest: Paul Irish. That’s why we recorded in English this time. The <a href=\"http://workingdraft.de/100/\">final podcast</a> is now live and can be downloaded. Check it out and let us know what you think.</p><p><a href=\"http://workingdraft.de/100/\" title=\"Listen to Working Draft Revision 100\" class=\"button\">Listen to WD Revision 100</a></p><p>Here are the topics we talked about:</p><ul><li><a href=\"https://www.bountysource.com/\">BountySource</a> let’s you define an amount up for grabs to anyone willing to solve your issue with an open source project.</li><li><a href=\"http://blog.alexmaccaw.com/the-next-web\">5 APIs to change the world</a> by Alex MacCaw</li><li><a href=\"http://delicious.com/paul.irish/css+testing\">CSS Performance Debugging</a> and rendering bottlenecks</li><li>Laura Kalbag <a href=\"http://laurakalbag.com/display-none/\">writes about sharing what you learn</a>.</li></ul><p><a href=\"http://drublic.de/blog/working-draft-100/\" rel=\"bookmark\" title=\"Permanent link to 'Working Draft Revision 100'\" class=\"glyph\">☰</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/Lfu3Fy5yt60\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/Lfu3Fy5yt60/" (20680 35146) new 5 nil nil ((title nil "Working Draft Revision 100 →") (link nil "http://feedproxy.google.com/~r/drublic/~3/Lfu3Fy5yt60/") (comments nil "http://drublic.de/blog/working-draft-100/#comments") (pubDate nil "Wed, 12 Dec 2012 13:40:26 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "APIs") (category nil "CSS Performance") (category nil "Paul Irish") (category nil "performance") (category nil "Working Draft") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1181") (description nil "It&#8217;s been over two years now – with our podcast Working Draft we have done 100 revisions. Congratulations to ourselves! We recorded revision 100 on Monday and had a very special guest: Paul Irish. That&#8217;s why we recorded in English this time. The final podcast is now live and can be downloaded. Check it out and let us know what you think. Listen to WD Revision 100 Here are the topics we talked about: BountySource let’s you define an amount up for grabs to anyone willing to solve your issue with an open source project. 5 APIs to change the<p class=\"readmore\"><a title=\"Link toWorking Draft Revision 100\" href=\"http://drublic.de/blog/working-draft-100/\">Read more</a></p><p><a href=\"http://drublic.de/blog/working-draft-100/\" rel=\"bookmark\" title=\"Permanent link to 'Working Draft Revision 100'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/12/wd-logo-small.png\" alt=\"Working Draft\" width=\"200\" height=\"200\" class=\"alignright\" /></a>It&#8217;s been over two years now – with our podcast Working Draft we have done 100 revisions. Congratulations to ourselves!</p><p>We recorded revision 100 on Monday and had a very special guest: Paul Irish. That&#8217;s why we recorded in English this time. The <a href=\"http://workingdraft.de/100/\">final podcast</a> is now live and can be downloaded. Check it out and let us know what you think.</p><p><a href=\"http://workingdraft.de/100/\" title=\"Listen to Working Draft Revision 100\" class=\"button\">Listen to WD Revision 100</a></p><p>Here are the topics we talked about:</p><ul><li><a href=\"https://www.bountysource.com/\">BountySource</a> let’s you define an amount up for grabs to anyone willing to solve your issue with an open source project.</li><li><a href=\"http://blog.alexmaccaw.com/the-next-web\">5 APIs to change the world</a> by Alex MacCaw</li><li><a href=\"http://delicious.com/paul.irish/css+testing\">CSS Performance Debugging</a> and rendering bottlenecks</li><li>Laura Kalbag <a href=\"http://laurakalbag.com/display-none/\">writes about sharing what you learn</a>.</li></ul><p><a href=\"http://drublic.de/blog/working-draft-100/\" rel=\"bookmark\" title=\"Permanent link to 'Working Draft Revision 100'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/Lfu3Fy5yt60\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/working-draft-100/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://workingdraft.de/100/"))) ("New Resource for Web Devs: The Nitty Gritty →" "<p>Yesterday <a href=\"http://kahlil.co/\">Kahlil Lechelt</a> and I launched The Nitty Gritty, a new blog and resource for web developers about the cutting edge in HTML, CSS, JavaScript and web technology in general.</p><p><a href=\"http://thenittygritty.co/\" class=\"button\">Visit The Nitty Gritty</a></p><p>About the idea of The Nitty Gritty Kahlil writes:</p><blockquote><p>For a few years now, I’ve been watching my friends in the web development community write highly informative and well researched articles on their personal blogs, or as contributing authors writing articles for the blogs of their friends and colleagues.</p></blockquote><p>We met at Smashing Conference back in September this year and talked about the idea of <a href=\"http://thenittygritty.co/\">The Nitty Gritty</a>. After some months of development we are now ready to present this idea to you.</p><blockquote><p>So, cutting a long story short, we decided to execute on the desire to create a central hub for developers, hence The Nitty Gritty (TNG) was born and now we are about to wake this beast up.</p></blockquote><p>I am very excited about our new project and hope so are you. I really hope that we can deliver high quality content within the next months. And hey… we already have some great articles coming up in the next few weeks</p><blockquote><p>[…] including the performance pope Schepp, Yeoman core contributor Sindre Sorhus, and the maker of Kirby, Bastian Allgeier.</p></blockquote><p>I have written a post myself about decoupling CSS by using placeholders in Sass which will be published today.</p><p>We would be pleased if you let us know what you think about this idea on Twitter. And make sure you follow <a href=\"https://twitter.com/_thenittygritty\">@_thenittygritty</a>! :)</p><p><a href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\" rel=\"bookmark\" title=\"Permanent link to 'New Resource for Web Devs: The Nitty Gritty'\" class=\"glyph\">☰</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/3IOUEVqCwRU\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/3IOUEVqCwRU/" (20669 63766) new 6 nil nil ((title nil "New Resource for Web Devs: The Nitty Gritty →") (link nil "http://feedproxy.google.com/~r/drublic/~3/3IOUEVqCwRU/") (comments nil "http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/#comments") (pubDate nil "Tue, 04 Dec 2012 13:22:30 +0000") (dc:creator nil "Hans Christian") (category nil "References") (category nil "Project") (category nil "Resource") (category nil "The Nitty Gritty") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1169") (description nil "Yesterday Kahlil Lechelt and I launched The Nitty Gritty, a new blog and resource for web developers about the cutting edge in HTML, CSS, JavaScript and web technology in general. Visit The Nitty Gritty About the idea of The Nitty Gritty Kahlil writes: For a few years now, I&#8217;ve been watching my friends in the web development community write highly informative and well researched articles on their personal blogs, or as contributing authors writing articles for the blogs of their friends and colleagues. We met at Smashing Conference back in September this year and talked about the idea of The<p class=\"readmore\"><a title=\"Link toNew Resource for Web Devs: The Nitty Gritty\" href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\">Read more</a></p><p><a href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\" rel=\"bookmark\" title=\"Permanent link to 'New Resource for Web Devs: The Nitty Gritty'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Yesterday <a href=\"http://kahlil.co/\">Kahlil Lechelt</a> and I launched The Nitty Gritty, a new blog and resource for web developers about the cutting edge in HTML, CSS, JavaScript and web technology in general.</p><p><a href=\"http://thenittygritty.co/\" class=\"button\">Visit The Nitty Gritty</a></p><p>About the idea of The Nitty Gritty Kahlil writes:</p><blockquote><p>For a few years now, I&#8217;ve been watching my friends in the web development community write highly informative and well researched articles on their personal blogs, or as contributing authors writing articles for the blogs of their friends and colleagues.</p></blockquote><p>We met at Smashing Conference back in September this year and talked about the idea of <a href=\"http://thenittygritty.co/\">The Nitty Gritty</a>. After some months of development we are now ready to present this idea to you.</p><blockquote><p>So, cutting a long story short, we decided to execute on the desire to create a central hub for developers, hence The Nitty Gritty (TNG) was born and now we are about to wake this beast up.</p></blockquote><p>I am very excited about our new project and hope so are you. I really hope that we can deliver high quality content within the next months. And hey… we already have some great articles coming up in the next few weeks</p><blockquote><p>[…] including the performance pope Schepp, Yeoman core contributor Sindre Sorhus, and the maker of Kirby, Bastian Allgeier.</p></blockquote><p>I have written a post myself about decoupling CSS by using placeholders in Sass which will be published today.</p><p>We would be pleased if you let us know what you think about this idea on Twitter. And make sure you follow <a href=\"https://twitter.com/_thenittygritty\">@_thenittygritty</a>! :)</p><p><a href=\"http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/\" rel=\"bookmark\" title=\"Permanent link to 'New Resource for Web Devs: The Nitty Gritty'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/3IOUEVqCwRU\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/the-nitty-gritty-new-resource-for-web-devs/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://thenittygritty.co/"))) ("Conferencing and Test The Web Forward" "<p>Within the last weeks I had the pleasure to attend some of the most valuable conferences in our business and meet awesome people to chat with. Finally I want to share some of my experiences and invite you what’s coming next.</p><h2>Smashing Conference</h2><p>Back in the end of September I attended <a href=\"http://smashingconf.com/\">Smashing Conference</a>, set up by <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://www.marcthiele.com/\">Marc Thiele</a> with some high quality speakers in beautiful Freiburg, Germany, the city where I’m currently living.</p><p>Focusing on web design and development <q>the smashing way</q> this conference had a variety of topics from the <a href=\"http://lea.verou.me/more-css-secrets/#intro\">latest secrets of CSS</a>, on the <a href=\"http://bradfrostweb.com/blog/mobile/beyond-media-queries-anatomy-of-an-adaptive-web-design/\">anatomy of responsive web design</a> and <a href=\"https://speakerdeck.com/u/stephenhay/p/style-guides-are-the-new-photoshop-smashing-conference-2012\">the new Photoshop</a> (tl;dr: the browser, and while we’re at it… the console is pretty easy compared to Photoshop).</p><p>Two major thoughts that were emphasized in a lot of talks are <strong>designing in the browser</strong> and <strong>responsive  design</strong>. (If responsive design is only an “optional” feature in your workflow consider this time being over. (You ain’t got no choice!))</p><p>You set up something really great, Vitaly, Marc and the whole team behind Smashing Magazine. Thank you! Looking forward to a new issue in the next year.</p><p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\" alt=\" \" title=\"Conferencing\" width=\"675\" height=\"326\" class=\"aligncenter\"></a><small> Image Credit: <a href=\"http://www.flickr.com/photos/freiburg/7995345837/sizes/l/in/photostream/\">Sven Freiburg / Flickr</a>, <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">CC BY-NC-SA 2.0</a></small></p><h2>Create The Web Tour, London</h2><p>Some of the hosts of <a href=\"http://workingdraft.de/\">Working Draft</a> and other web-dev friends had the pleasure to join the <a href=\"http://html.adobe.com/events/\">Create The Web</a> event by Adobe.</p><p>As a developer <a href=\"http://brackets.io/\">Brackets</a>, the Open Source front-end editor totally written in HTML, CSS and JavaScript is the most interesting thing I took from Create The Web.<br />
Apart from that I think <a href=\"http://html.adobe.com/edge/reflow/\">Edge Reflow</a>, a tool for designing responsive websites, is a great step for designers to get a better view on what is important in web design. Since Photoshop is not really the right tool for that.<br />
Also I love to see Adobe joining the web community more and more and adding many valuable products (partly Open Source!) to their line-up.</p><p>Thank you, <a href=\"http://klick-ass.com/\">Jay</a>, for making this well-planned and great day with good insights to Adobe’s engagement in the web platform possible for us!</p><h2>Fronteers Conference</h2><p>This year again I attended Fronteers Conference in Amsterdam which to many people is the best front-end conference in Europe.<br />
Starting with the Jam Sessions on Wednesday it became a superb few days meeting a lot of people from around the globe to chat with and get into contact.</p><p>Make sure to check out the <a href=\"http://lanyrd.com/2012/fronteersjam/coverage/\">Jam Sessions</a> which were all very good.<br /><strong>Note:</strong> You can find my session “Writing Awesome Code” <a href=\"http://slides.drublic.de/awesome-code/\">here</a>.</p><p>There were a lot of great talks given too. <a href=\"http://twitter.com/codepo8\">Chris Heilmann</a> shares his experience of Fronteers. He did a great job MCing the event.</p><div id=\"qfm-embedded-recommendation-54667\" class=\"qfm-embedded-recommendation\" data-id=\"54667\" data-width=\"675\" data-height=\"231\" style=\"margin-top: 1em;\"><h2><a href=\"http://quote.fm/article/38450\">Fronteers12 – Q&amp;A results, quick reviews and impressions from the stage</a></h2><blockquote><p><a href=\"http://quote.fm/christianheilmann.com/54667\">»Last week the fifth annual Fronteers conference lured a few hundred developers, designers and managers to Amsterdam, The Netherlands to hear about what’s hot and new in web development. This year I did not speak, but played the MC and interviewer instead.«</a></p></blockquote><p><a href=\"http://quote.fm/drublic\">Hans Christian Reinl</a> recommended this article from <a href=\"http://christianheilmann.com\">christianheilmann.com</a></p></div><p><script type=\"text/javascript\" src=\"https://quote.fm/embed.js?id=54667\"></script></p><h2>Test The Web Forward</h2><p>Last but not least I will join some of the best engineers in our field to learn a better understanding of specifications, writing tests for the web platform and help moving the web forward.</p><blockquote><p>Over the course of the event, not only will you learn to understand how to read specifications and understand the state of support among different browsers, but you will also create robust tests along with the editors of various standards to ensure browsers implement these features consistently. At the end of it, you will gain a deeper understanding of browser internals & how you can write clear, robust tests.</p></blockquote><p>– <a href=\"http://testthewebforward.org/paris-2012.html\">Test The Web Forward</a></p><p>The event is named <strong>Test The Web Forward</strong> and will take place on October 26th and 27th in Paris. Check out the <a href=\"http://testthewebforward.org/paris-2012.html\">website</a> for more information about it. Make sure to be there if you are near to Paris. Or plan a nice weekend trip! It will be fun.</p><blockquote class=\"twitter-tweet tw-align-center\" style=\"padding-top: 1em;\"><p>Hey France, Germany: Join some browser &amp; standards hackers in Paris to improve all browsers <a href=\"http://t.co/irvkd6CW\" title=\"http://testthewebforward.org/paris-2012.html\">testthewebforward.org/paris-2012.html</a></p><p>&mdash; Paul Irish (@paul_irish) <a href=\"https://twitter.com/paul_irish/status/254117725046206464\" data-datetime=\"2012-10-05T07:16:01+00:00\">October 5, 2012</a></p></blockquote><p><script src=\"//platform.twitter.com/widgets.js\"></script></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/GdRYJq-9NJI\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/GdRYJq-9NJI/" (20597 59693) new 7 nil nil ((title nil "Conferencing and Test The Web Forward") (link nil "http://feedproxy.google.com/~r/drublic/~3/GdRYJq-9NJI/") (comments nil "http://drublic.de/blog/conference-test-the-web-forward/#comments") (pubDate nil "Wed, 10 Oct 2012 21:31:25 +0000") (dc:creator nil "Hans Christian") (category nil "Conference") (category nil "CreateTheWeb") (category nil "Fronteers") (category nil "SmashingConf") (category nil "Specification") (category nil "Test The Web Forward") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1116") (description nil "Within the last weeks I had the pleasure to attend some of the most valuable conferences in our business and meet awesome people to chat with. Finally I want to share some of my experiences and invite you what&#8217;s coming next. Smashing Conference Back in the end of September I attended Smashing Conference, set up by Smashing Magazine and Marc Thiele with some high quality speakers in beautiful Freiburg, Germany, the city where I&#8217;m currently living. Focusing on web design and development the smashing way this conference had a variety of topics from the latest secrets of CSS, on the<p class=\"readmore\"><a title=\"Link toConferencing and Test The Web Forward\" href=\"http://drublic.de/blog/conference-test-the-web-forward/\">Read more</a></p>") (content:encoded nil "<p>Within the last weeks I had the pleasure to attend some of the most valuable conferences in our business and meet awesome people to chat with. Finally I want to share some of my experiences and invite you what&#8217;s coming next.</p><h2>Smashing Conference</h2><p>Back in the end of September I attended <a href=\"http://smashingconf.com/\">Smashing Conference</a>, set up by <a href=\"http://www.smashingmagazine.com/\">Smashing Magazine</a> and <a href=\"http://www.marcthiele.com/\">Marc Thiele</a> with some high quality speakers in beautiful Freiburg, Germany, the city where I&#8217;m currently living.</p><p>Focusing on web design and development <q>the smashing way</q> this conference had a variety of topics from the <a href=\"http://lea.verou.me/more-css-secrets/#intro\">latest secrets of CSS</a>, on the <a href=\"http://bradfrostweb.com/blog/mobile/beyond-media-queries-anatomy-of-an-adaptive-web-design/\">anatomy of responsive web design</a> and <a href=\"https://speakerdeck.com/u/stephenhay/p/style-guides-are-the-new-photoshop-smashing-conference-2012\">the new Photoshop</a> (tl;dr: the browser, and while we&#8217;re at it… the console is pretty easy compared to Photoshop).</p><p>Two major thoughts that were emphasized in a lot of talks are <strong>designing in the browser</strong> and <strong>responsive  design</strong>. (If responsive design is only an &#8220;optional&#8221; feature in your workflow consider this time being over. (You ain&#8217;t got no choice!))</p><p>You set up something really great, Vitaly, Marc and the whole team behind Smashing Magazine. Thank you! Looking forward to a new issue in the next year.</p><p><a href=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\"><img src=\"http://drublic.de/blog/wp-content/uploads/2012/10/conferencing.jpg\" alt=\" \" title=\"Conferencing\" width=\"675\" height=\"326\" class=\"aligncenter\"></a><small> Image Credit: <a href=\"http://www.flickr.com/photos/freiburg/7995345837/sizes/l/in/photostream/\">Sven Freiburg / Flickr</a>, <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.0/\">CC BY-NC-SA 2.0</a></small></p><h2>Create The Web Tour, London</h2><p>Some of the hosts of <a href=\"http://workingdraft.de/\">Working Draft</a> and other web-dev friends had the pleasure to join the <a href=\"http://html.adobe.com/events/\">Create The Web</a> event by Adobe.</p><p>As a developer <a href=\"http://brackets.io/\">Brackets</a>, the Open Source front-end editor totally written in HTML, CSS and JavaScript is the most interesting thing I took from Create The Web.<br />
Apart from that I think <a href=\"http://html.adobe.com/edge/reflow/\">Edge Reflow</a>, a tool for designing responsive websites, is a great step for designers to get a better view on what is important in web design. Since Photoshop is not really the right tool for that.<br />
Also I love to see Adobe joining the web community more and more and adding many valuable products (partly Open Source!) to their line-up.</p><p>Thank you, <a href=\"http://klick-ass.com/\">Jay</a>, for making this well-planned and great day with good insights to Adobe&#8217;s engagement in the web platform possible for us!</p><h2>Fronteers Conference</h2><p>This year again I attended Fronteers Conference in Amsterdam which to many people is the best front-end conference in Europe.<br />
Starting with the Jam Sessions on Wednesday it became a superb few days meeting a lot of people from around the globe to chat with and get into contact.</p><p>Make sure to check out the <a href=\"http://lanyrd.com/2012/fronteersjam/coverage/\">Jam Sessions</a> which were all very good.<br /><strong>Note:</strong> You can find my session &#8220;Writing Awesome Code&#8221; <a href=\"http://slides.drublic.de/awesome-code/\">here</a>.</p><p>There were a lot of great talks given too. <a href=\"http://twitter.com/codepo8\">Chris Heilmann</a> shares his experience of Fronteers. He did a great job MCing the event.</p><div id=\"qfm-embedded-recommendation-54667\" class=\"qfm-embedded-recommendation\" data-id=\"54667\" data-width=\"675\" data-height=\"231\" style=\"margin-top: 1em;\"><h2><a href=\"http://quote.fm/article/38450\">Fronteers12 – Q&amp;A results, quick reviews and impressions from the stage</a></h2><blockquote><p><a href=\"http://quote.fm/christianheilmann.com/54667\">&#187;Last week the fifth annual Fronteers conference lured a few hundred developers, designers and managers to Amsterdam, The Netherlands to hear about what’s hot and new in web development. This year I did not speak, but played the MC and interviewer instead.&#171;</a></p></blockquote><p><a href=\"http://quote.fm/drublic\">Hans Christian Reinl</a> recommended this article from <a href=\"http://christianheilmann.com\">christianheilmann.com</a></p></div><p><script type=\"text/javascript\" src=\"https://quote.fm/embed.js?id=54667\"></script></p><h2>Test The Web Forward</h2><p>Last but not least I will join some of the best engineers in our field to learn a better understanding of specifications, writing tests for the web platform and help moving the web forward.</p><blockquote><p>Over the course of the event, not only will you learn to understand how to read specifications and understand the state of support among different browsers, but you will also create robust tests along with the editors of various standards to ensure browsers implement these features consistently. At the end of it, you will gain a deeper understanding of browser internals &#038; how you can write clear, robust tests.</p></blockquote><p>– <a href=\"http://testthewebforward.org/paris-2012.html\">Test The Web Forward</a></p><p>The event is named <strong>Test The Web Forward</strong> and will take place on October 26th and 27th in Paris. Check out the <a href=\"http://testthewebforward.org/paris-2012.html\">website</a> for more information about it. Make sure to be there if you are near to Paris. Or plan a nice weekend trip! It will be fun.</p><blockquote class=\"twitter-tweet tw-align-center\" style=\"padding-top: 1em;\"><p>Hey France, Germany: Join some browser &amp; standards hackers in Paris to improve all browsers <a href=\"http://t.co/irvkd6CW\" title=\"http://testthewebforward.org/paris-2012.html\">testthewebforward.org/paris-2012.html</a></p><p>&mdash; Paul Irish (@paul_irish) <a href=\"https://twitter.com/paul_irish/status/254117725046206464\" data-datetime=\"2012-10-05T07:16:01+00:00\">October 5, 2012</a></p></blockquote><p><script src=\"//platform.twitter.com/widgets.js\"></script></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/GdRYJq-9NJI\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/conference-test-the-web-forward/feed/") (slash:comments nil "2") (feedburner:origLink nil "http://drublic.de/blog/conference-test-the-web-forward/"))) ("Writing Awesome Code – Fronteers Jam Session 2012 →" "<p>Here is how and why you should write awesome code in your team. I gave a 10 minute talk on that topic at Fronteers Conference at the Jam Session and <a href=\"http://slides.drublic.de/awesome-code/\">here</a> are the slides.<br />
There will be a video available online in a few weeks I think.</p><p><a href=\"http://drublic.de/blog/writing-awesome-code/\" rel=\"bookmark\" title=\"Permanent link to 'Writing Awesome Code – Fronteers Jam Session 2012'\" class=\"glyph\">☰</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/UqPW8Jj2maU\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/UqPW8Jj2maU/" (20591 23630) new 8 nil nil ((title nil "Writing Awesome Code – Fronteers Jam Session 2012 →") (link nil "http://feedproxy.google.com/~r/drublic/~3/UqPW8Jj2maU/") (comments nil "http://drublic.de/blog/writing-awesome-code/#comments") (pubDate nil "Fri, 05 Oct 2012 22:16:46 +0000") (dc:creator nil "Hans Christian") (category nil "References") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1112") (description nil "Here is how and why you should write awesome code in your team. I gave a 10 minute talk on that topic at Fronteers Conference at the Jam Session and here are the slides. There will be a video available online in a few weeks I think. &#9776;<p><a href=\"http://drublic.de/blog/writing-awesome-code/\" rel=\"bookmark\" title=\"Permanent link to 'Writing Awesome Code – Fronteers Jam Session 2012'\" class=\"glyph\">&#9776;</a></p>
") (content:encoded nil "<p>Here is how and why you should write awesome code in your team. I gave a 10 minute talk on that topic at Fronteers Conference at the Jam Session and <a href=\"http://slides.drublic.de/awesome-code/\">here</a> are the slides.<br />
There will be a video available online in a few weeks I think.</p><p><a href=\"http://drublic.de/blog/writing-awesome-code/\" rel=\"bookmark\" title=\"Permanent link to 'Writing Awesome Code – Fronteers Jam Session 2012'\" class=\"glyph\">&#9776;</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/UqPW8Jj2maU\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/writing-awesome-code/feed/") (slash:comments nil "0") (feedburner:origLink nil "http://slides.drublic.de/awesome-code/"))) ("Yeoman – Level-up Your Daily Workflow" "<p>After <a href=\"http://yeoman.io/\">Yeoman</a> was announced in the end of June while it was still in private beta developers were looking forward to use it soon. It was introduced as a tool that helps developers building web-apps while not having to care too much about the general boilerplate-coding to build a solid base for every project and to help performing tasks to bring your project into production.</p><p>Now that Yeoman is available for everyone as Open Source the question how to use it in daily projects arises. I’ll try to give you a short overview on what you can expect from it and what will be helpful. If you haven’t had a look at it this article might help you.<br /><span id=\"more-1050\"></span><br />
To check out how you can install Yeoman, please refer to the <a href=\"http://yeoman.io/\">Yeoman-homepage</a>, you will find detailed information there. You will also find more information on how to use Yeoman’s features. You might want to check out <a href=\"http://www.adobe.com/devnet/html5/articles/yeoman-at-your-service.html\">this article</a> on one of the Adobe blogs. Also <a href=\"http://net.tutsplus.com/tutorials/tools-and-tips/say-yo-to-yeoman/\">Nettuts+ has an article with deep information</a> on how to use Yeoman.<br />
By default Yeoman supports Linux and OSX, but you can also <a href=\"http://www.decodize.com/css/installing-yeoman-front-end-development-stack-windows/\">find a way of installing it on Windows</a>.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/Mk-tFn2Ix6g#t=1371s\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Paul Irish introduces Yeoman at Google I/O 2012.</i></p><h2>Reduce Time Doing Repetitive Tasks</h2><p>On the project’s homepage you can find some features they are praising. Let’s get a short overview on what Yeoman may help you with:</p><p>There are some things that steal your time when you work on a project. Yeoman is here to help you reduce the time you spent on these to focus more on the actual process of writing clean and lightweight code.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/vFacaBinGZ0\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Addy Osmani explains the main features of Yeoman.</i></p><h3>Starting Projects & Maintaining Them</h3><p>Starting a project and maintaining it requires some time. You need to manage compiling your CoffeeScript and SASS styles if you use it. Yeoman does this for you. When it’s done it reloads your project-page automatically using its LiveReload functionality – you are used to this from LiveReload or CodeKit apps.<br />
It also lints your JavaScript and ensures that you write straightforward code. Writing code like this requires that you have some proper tests that guarantee that your code is working correctly. Yeoman includes <a href=\"http://visionmedia.github.com/mocha/\">Mocha</a> so you can write unit tests by default and runs your tests on the fly in a headless browser so you can be sure everything runs smoothly. (Yeoman let’s you use Jasmine out of the box too, you just need to set a flag while initializing.)</p><p>All that sounds good but you need to start your project somehow. For me building a basis means taking <a href=\"http://drublic.de/blog/building-advanced-initial-boilerpalte/\">init</a> and extending it to my needs – manually. Manually adding libraries, maintaining their versions. Manually adding styles like these of Twitter Bootstrap.<br />
With Yeoman you get an initial process to lay out your projects by your needs. Apart from that you can pull in plugins and scripts by just running a single command.</p><p>When dealing with client-side MV*-frameworks such as Backbone.js or Ember.js you need to create a bunch of files such as models or views from time to time. By using Yeoman generating these can be done automatically and reduces the time you spend writing boilerplate code.</p><p>While developing Grunt is there for all my needs to lint my JavaScript, compile SASS and provide a node-based server. These tasks can all be done by Yeoman which is based on Grunt too.</p><p>The work I have to do over and over again is something I want to avoid. In fact that’s why I created init. But init may not fit the need of another developer. <a href=\"https://twitter.com/hellokahlil\">Kahlil</a> for instance has <a href=\"https://github.com/kahlil/jumpstart\">jumpstart</a> which is pretty similar to init but with some other defaults.<br />
Exactly this point is where Google tries to help out with Yeoman.</p><h3>Roll Out Apps</h3><p>When putting the project to production you don’t want your live website to be affected by mistakes you made while developing. That’s what you got tests for. You run them just before you roll out a new feature. Save the time while doing this automated with Yeoman.</p><p>On the web you read a lot about performance of an app, especially slow connections on for example mobile devices with slower processors require that you serve the smallest amount of scripts and stylesheets, optimized sources and minified code. But do you really want to think about all this every time you want to deploy your project? Yeoman integrates minifying scripts and stylesheets, optimizing your images insanely and putting it all together in a package for you to deploy. Just run a command and you are all good.<br />
Apart from that you don’t need to worry about your app not being available offline: Yeoman generates an application cache manifest for you.</p><h2>“I Use Other Tools. Yeoman Can’t Help Me!”</h2><p>The good thing is that you can extend Yeoman to your needs. If you are using LESS instead of SASS just pull it in. As Yeoman builds upon Grunt you are all free to change the tools Yeoman builds uses. With <a href=\"https://github.com/yeoman/generators/\">Yeoman Generators</a> it’s easily possible you extend Yeoman’ initialization process with your needs.<br />
Yeoman has some solid defaults but you are not chained to them.</p><h2>Save Your Time, Automate</h2><p>All the above mentioned doesn’t keep you from writing the code for your app. But isn’t this the part where you want to focus mostly on?</p><p>When working on a team it is essential to have a solid process of checking the maintainability and code standards, if everyone’s code is working and automated unit testing. Yeoman is a great Open Source project by people who know how to deal with the problems that you may run into and tackles exactly these points.<br />
To ensure you are doing it right and save time doing things over and over again, try using Yeoman, it will help.</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/BB-mHj9JSXc\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/BB-mHj9JSXc/" (20563 3817) new 9 nil nil ((title nil "Yeoman – Level-up Your Daily Workflow") (link nil "http://feedproxy.google.com/~r/drublic/~3/BB-mHj9JSXc/") (comments nil "http://drublic.de/blog/yeoman/#comments") (pubDate nil "Fri, 14 Sep 2012 11:03:05 +0000") (dc:creator nil "Hans Christian") (category nil "Tools") (category nil "Build Tool") (category nil "Collaboration") (category nil "Grunt") (category nil "Tool") (category nil "Workflow") (category nil "Yeoman") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1050") (description nil "After Yeoman was announced in the end of June while it was still in private beta developers were looking forward to use it soon. It was introduced as a tool that helps developers building web-apps while not having to care too much about the general boilerplate-coding to build a solid base for every project and to help performing tasks to bring your project into production. Now that Yeoman is available for everyone as Open Source the question how to use it in daily projects arises. I&#8217;ll try to give you a short overview on what you can expect from it<p class=\"readmore\"><a title=\"Link toYeoman – Level-up Your Daily Workflow\" href=\"http://drublic.de/blog/yeoman/\">Read more</a></p>") (content:encoded nil "<p>After <a href=\"http://yeoman.io/\">Yeoman</a> was announced in the end of June while it was still in private beta developers were looking forward to use it soon. It was introduced as a tool that helps developers building web-apps while not having to care too much about the general boilerplate-coding to build a solid base for every project and to help performing tasks to bring your project into production.</p><p>Now that Yeoman is available for everyone as Open Source the question how to use it in daily projects arises. I&#8217;ll try to give you a short overview on what you can expect from it and what will be helpful. If you haven&#8217;t had a look at it this article might help you.<br /><span id=\"more-1050\"></span><br />
To check out how you can install Yeoman, please refer to the <a href=\"http://yeoman.io/\">Yeoman-homepage</a>, you will find detailed information there. You will also find more information on how to use Yeoman&#8217;s features. You might want to check out <a href=\"http://www.adobe.com/devnet/html5/articles/yeoman-at-your-service.html\">this article</a> on one of the Adobe blogs. Also <a href=\"http://net.tutsplus.com/tutorials/tools-and-tips/say-yo-to-yeoman/\">Nettuts+ has an article with deep information</a> on how to use Yeoman.<br />
By default Yeoman supports Linux and OSX, but you can also <a href=\"http://www.decodize.com/css/installing-yeoman-front-end-development-stack-windows/\">find a way of installing it on Windows</a>.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/Mk-tFn2Ix6g#t=1371s\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Paul Irish introduces Yeoman at Google I/O 2012.</i></p><h2>Reduce Time Doing Repetitive Tasks</h2><p>On the project&#8217;s homepage you can find some features they are praising. Let&#8217;s get a short overview on what Yeoman may help you with:</p><p>There are some things that steal your time when you work on a project. Yeoman is here to help you reduce the time you spent on these to focus more on the actual process of writing clean and lightweight code.</p><p><iframe width=\"675\" height=\"380\" src=\"http://www.youtube.com/embed/vFacaBinGZ0\" frameborder=\"0\" allowfullscreen></iframe><br /><i>Addy Osmani explains the main features of Yeoman.</i></p><h3>Starting Projects &#038; Maintaining Them</h3><p>Starting a project and maintaining it requires some time. You need to manage compiling your CoffeeScript and SASS styles if you use it. Yeoman does this for you. When it&#8217;s done it reloads your project-page automatically using its LiveReload functionality – you are used to this from LiveReload or CodeKit apps.<br />
It also lints your JavaScript and ensures that you write straightforward code. Writing code like this requires that you have some proper tests that guarantee that your code is working correctly. Yeoman includes <a href=\"http://visionmedia.github.com/mocha/\">Mocha</a> so you can write unit tests by default and runs your tests on the fly in a headless browser so you can be sure everything runs smoothly. (Yeoman let&#8217;s you use Jasmine out of the box too, you just need to set a flag while initializing.)</p><p>All that sounds good but you need to start your project somehow. For me building a basis means taking <a href=\"http://drublic.de/blog/building-advanced-initial-boilerpalte/\">init</a> and extending it to my needs &#8211; manually. Manually adding libraries, maintaining their versions. Manually adding styles like these of Twitter Bootstrap.<br />
With Yeoman you get an initial process to lay out your projects by your needs. Apart from that you can pull in plugins and scripts by just running a single command.</p><p>When dealing with client-side MV*-frameworks such as Backbone.js or Ember.js you need to create a bunch of files such as models or views from time to time. By using Yeoman generating these can be done automatically and reduces the time you spend writing boilerplate code.</p><p>While developing Grunt is there for all my needs to lint my JavaScript, compile SASS and provide a node-based server. These tasks can all be done by Yeoman which is based on Grunt too.</p><p>The work I have to do over and over again is something I want to avoid. In fact that&#8217;s why I created init. But init may not fit the need of another developer. <a href=\"https://twitter.com/hellokahlil\">Kahlil</a> for instance has <a href=\"https://github.com/kahlil/jumpstart\">jumpstart</a> which is pretty similar to init but with some other defaults.<br />
Exactly this point is where Google tries to help out with Yeoman.</p><h3>Roll Out Apps</h3><p>When putting the project to production you don&#8217;t want your live website to be affected by mistakes you made while developing. That&#8217;s what you got tests for. You run them just before you roll out a new feature. Save the time while doing this automated with Yeoman.</p><p>On the web you read a lot about performance of an app, especially slow connections on for example mobile devices with slower processors require that you serve the smallest amount of scripts and stylesheets, optimized sources and minified code. But do you really want to think about all this every time you want to deploy your project? Yeoman integrates minifying scripts and stylesheets, optimizing your images insanely and putting it all together in a package for you to deploy. Just run a command and you are all good.<br />
Apart from that you don&#8217;t need to worry about your app not being available offline: Yeoman generates an application cache manifest for you.</p><h2>&#8220;I Use Other Tools. Yeoman Can&#8217;t Help Me!&#8221;</h2><p>The good thing is that you can extend Yeoman to your needs. If you are using LESS instead of SASS just pull it in. As Yeoman builds upon Grunt you are all free to change the tools Yeoman builds uses. With <a href=\"https://github.com/yeoman/generators/\">Yeoman Generators</a> it&#8217;s easily possible you extend Yeoman&#8217; initialization process with your needs.<br />
Yeoman has some solid defaults but you are not chained to them.</p><h2>Save Your Time, Automate</h2><p>All the above mentioned doesn&#8217;t keep you from writing the code for your app. But isn&#8217;t this the part where you want to focus mostly on?</p><p>When working on a team it is essential to have a solid process of checking the maintainability and code standards, if everyone&#8217;s code is working and automated unit testing. Yeoman is a great Open Source project by people who know how to deal with the problems that you may run into and tackles exactly these points.<br />
To ensure you are doing it right and save time doing things over and over again, try using Yeoman, it will help.</p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/BB-mHj9JSXc\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/yeoman/feed/") (slash:comments nil "12") (feedburner:origLink nil "http://drublic.de/blog/yeoman/"))) ("HTML5 Boilerplate – v4.0.0" "<p><strong>HTML5 Boilerplate is out with the new version 4.0.0.</strong></p><p>There were some significant changes since the last version that are listed up <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">in the changelog</a> (also see below). Most of them because of the excellent work by <a href=\"http://twitter.com/necolas\">Nicolas Gallagher</a> – thanks for leading HTML5 Boilerplate with such great effort.</p><p><img src=\"http://drublic.de/blog/wp-content/uploads/2012/08/apple-touch-icon-144x144-precomposed.png\" alt=\"HTML5 Boilerplate v4.0.0 - Star\" title=\"HTML5 Boilerplate v4.0.0\" width=\"144\" height=\"144\" class=\"alignright\"></p><h2>What’s new?</h2><p>This was done throughout the last seven months of development and resolving bugs:</p><ul><li>Add documentation in a separate folder – everything that is directly concerned with the project was moved from the wiki
<li>Switch from Public Domain to MIT license
<li>Separate Normalize.css from the rest of the CSS
<li>Improve console.log protection
<li>Replace <strong>hot pink</strong> text selection color with a neutral color
<li>Nicolas introduced a better image replacement technique
<li>Code format and consistency changes (<3!)
<li>Remove superfluous inline comments
<li>CSS file and JS files & subdirectories were renamed
<li>Update to jQuery 1.8 and Modernizr 2.6.1.
</ul><p><small>– <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">From the Changelog</a></small></p><p>Sadly we <a href=\"https://github.com/h5bp/html5-boilerplate/pull/1140\">could not integrate Grunt.js</a> into the project with some simple tasks because we had to face certain problems when it comes to integrate the CSS file that is build by Grunt into the repository and other impediments.</p><p>Now HTML5 Boilerplate 4.0.0 is out and I’d encourage you to view the source, learn and <a href=\"https://github.com/h5bp/html5-boilerplate\">contribute</a>.<br />
If you find bugs or potential pitfalls please let us know in the <a href=\"https://github.com/h5bp/html5-boilerplate/issues\">issues</a>.<br />
Cheers to the <a href=\"http://h5bp.github.com/\">H5BP community</a> and especially <a href=\"https://github.com/h5bp/html5-boilerplate/graphs/contributors\">all HTML5 Boilerplate contributors</a>.</p><p>Apart from HTML5 Boilerplate <a href=\"https://twitter.com/alex_gibson\">Alex Gibson</a>, Nicolas and <a href=\"https://github.com/h5bp/mobile-boilerplate/graphs/contributors\">others</a> updated Mobile Boilerplate to version 4.0.0, so go and check it out too!</p><p>And another thing: Both <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a> and <a href=\"http://html5boilerplate.com/mobile\">Mobile Boilerplate</a> have a new website which looks kinda awesome, I think!</p><p><a href=\"https://github.com/h5bp/html5-boilerplate/tags\" class=\"button\">Download from GitHub</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/W2u6yLtf2Q8\" height=\"1\" width=\"1\"/>" "http://feedproxy.google.com/~r/drublic/~3/W2u6yLtf2Q8/" (20541 57082) new 10 nil nil ((title nil "HTML5 Boilerplate – v4.0.0") (link nil "http://feedproxy.google.com/~r/drublic/~3/W2u6yLtf2Q8/") (comments nil "http://drublic.de/blog/html5bp-v4-0-0/#comments") (pubDate nil "Wed, 29 Aug 2012 09:20:58 +0000") (dc:creator nil "Hans Christian") (category nil "CSS") (category nil "HTML5") (category nil "HTML5 Boilerplate") (category nil "HTML5BP") (category nil "progressive enhancement") (category nil "Tool") (guid ((isPermaLink . "false")) "http://drublic.de/blog/?p=1019") (description nil "HTML5 Boilerplate is out with the new version 4.0.0. There were some significant changes since the last version that are listed up in the changelog (also see below). Most of them because of the excellent work by Nicolas Gallagher &#8211; thanks for leading HTML5 Boilerplate with such great effort. What&#8217;s new? This was done throughout the last seven months of development and resolving bugs: Add documentation in a separate folder &#8211; everything that is directly concerned with the project was moved from the wiki Switch from Public Domain to MIT license Separate Normalize.css from the rest of the CSS Improve<p class=\"readmore\"><a title=\"Link toHTML5 Boilerplate - v4.0.0\" href=\"http://drublic.de/blog/html5bp-v4-0-0/\">Read more</a></p>") (content:encoded nil "<p><strong>HTML5 Boilerplate is out with the new version 4.0.0.</strong></p><p>There were some significant changes since the last version that are listed up <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">in the changelog</a> (also see below). Most of them because of the excellent work by <a href=\"http://twitter.com/necolas\">Nicolas Gallagher</a> &#8211; thanks for leading HTML5 Boilerplate with such great effort.</p><p><img src=\"http://drublic.de/blog/wp-content/uploads/2012/08/apple-touch-icon-144x144-precomposed.png\" alt=\"HTML5 Boilerplate v4.0.0 - Star\" title=\"HTML5 Boilerplate v4.0.0\" width=\"144\" height=\"144\" class=\"alignright\"></p><h2>What&#8217;s new?</h2><p>This was done throughout the last seven months of development and resolving bugs:</p><ul><li>Add documentation in a separate folder &#8211; everything that is directly concerned with the project was moved from the wiki
<li>Switch from Public Domain to MIT license
<li>Separate Normalize.css from the rest of the CSS
<li>Improve console.log protection
<li>Replace <strong>hot pink</strong> text selection color with a neutral color
<li>Nicolas introduced a better image replacement technique
<li>Code format and consistency changes (<3!)
<li>Remove superfluous inline comments
<li>CSS file and JS files &#038; subdirectories were renamed
<li>Update to jQuery 1.8 and Modernizr 2.6.1.
</ul><p><small>– <a href=\"https://github.com/h5bp/html5-boilerplate/blob/master/CHANGELOG.md\">From the Changelog</a></small></p><p>Sadly we <a href=\"https://github.com/h5bp/html5-boilerplate/pull/1140\">could not integrate Grunt.js</a> into the project with some simple tasks because we had to face certain problems when it comes to integrate the CSS file that is build by Grunt into the repository and other impediments.</p><p>Now HTML5 Boilerplate 4.0.0 is out and I&#8217;d encourage you to view the source, learn and <a href=\"https://github.com/h5bp/html5-boilerplate\">contribute</a>.<br />
If you find bugs or potential pitfalls please let us know in the <a href=\"https://github.com/h5bp/html5-boilerplate/issues\">issues</a>.<br />
Cheers to the <a href=\"http://h5bp.github.com/\">H5BP community</a> and especially <a href=\"https://github.com/h5bp/html5-boilerplate/graphs/contributors\">all HTML5 Boilerplate contributors</a>.</p><p>Apart from HTML5 Boilerplate <a href=\"https://twitter.com/alex_gibson\">Alex Gibson</a>, Nicolas and <a href=\"https://github.com/h5bp/mobile-boilerplate/graphs/contributors\">others</a> updated Mobile Boilerplate to version 4.0.0, so go and check it out too!</p><p>And another thing: Both <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a> and <a href=\"http://html5boilerplate.com/mobile\">Mobile Boilerplate</a> have a new website which looks kinda awesome, I think!</p><p><a href=\"https://github.com/h5bp/html5-boilerplate/tags\" class=\"button\">Download from GitHub</a></p><img src=\"http://feeds.feedburner.com/~r/drublic/~4/W2u6yLtf2Q8\" height=\"1\" width=\"1\"/>") (wfw:commentRss nil "http://drublic.de/blog/html5bp-v4-0-0/feed/") (slash:comments nil "3") (feedburner:origLink nil "http://drublic.de/blog/html5bp-v4-0-0/"))))